{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addExternalChainConfigs",
      "inputs": [
        {
          "name": "_trustedSenders",
          "type": "tuple[]",
          "internalType": "struct WormholeTrustedSender.TrustedSender[]",
          "components": [
            {
              "name": "chainId",
              "type": "uint16",
              "internalType": "uint16"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "breakGlassGuardian",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bridgeCost",
      "inputs": [
        {
          "name": "dstWormholeChainId",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [
        {
          "name": "gasCost",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bridgeCostAll",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancel",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "castVote",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voteValue",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "chainAddressVotes",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "wormholeChainId",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [
        {
          "name": "forVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "chainVoteCollectorVotes",
      "inputs": [
        {
          "name": "wormholeChainId",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "forVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "crossChainVoteCollectionPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "currentUserLiveProposals",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "distributor",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract SnapshotInterface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "executeBreakGlass",
      "inputs": [
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "fromWormholeFormat",
      "inputs": [
        {
          "name": "whFormatAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "gasLimit",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllTargetChains",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllTargetChainsLength",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentVotes",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getNumLiveProposals",
      "inputs": [],
      "outputs": [
        {
          "name": "count",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalData",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceipt",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "hasVoted",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "voteValue",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "votes",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserLiveProposals",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getVotes",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "timestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "blockNumber",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initData",
          "type": "tuple",
          "internalType": "struct MultichainGovernor.InitializeData",
          "components": [
            {
              "name": "well",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "xWell",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "stkWell",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "distributor",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "proposalThreshold",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "votingPeriodSeconds",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crossChainVoteCollectionPeriod",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "quorum",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxUserLiveProposals",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pauseDuration",
              "type": "uint128",
              "internalType": "uint128"
            },
            {
              "name": "pauseGuardian",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "breakGlassGuardian",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "wormholeRelayer",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "trustedSenders",
          "type": "tuple[]",
          "internalType": "struct WormholeTrustedSender.TrustedSender[]",
          "components": [
            {
              "name": "chainId",
              "type": "uint16",
              "internalType": "uint16"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedSender",
      "inputs": [
        {
          "name": "chainId",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "addr",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTrustedSender",
      "inputs": [
        {
          "name": "chainId",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "addr",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "kickGuardian",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "liveProposals",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxUserLiveProposals",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseDuration",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauseGuardian",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauseStartTime",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauseUsed",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "processedNonces",
      "inputs": [
        {
          "name": "nonce",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "processed",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalActive",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalCount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalInformation",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "proposer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "voteSnapshotTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "votingStartTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "crossChainVoteCollectionEndTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "forVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalThreshold",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalVotes",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "totalVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "forVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposals",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "proposer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "voteSnapshotTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "votingStartTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "votingEndTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "crossChainVoteCollectionEndTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voteSnapshotBlock",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "forVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalVotes",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "canceled",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "executed",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "propose",
      "inputs": [
        {
          "name": "targets",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "internalType": "bytes[]"
        },
        {
          "name": "description",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "quorum",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rebroadcastProposal",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "receiveWormholeMessages",
      "inputs": [
        {
          "name": "payload",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "bytes[]",
          "internalType": "bytes[]"
        },
        {
          "name": "senderAddress",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "sourceChain",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "nonce",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "removeExternalChainConfigs",
      "inputs": [
        {
          "name": "_trustedSenders",
          "type": "tuple[]",
          "internalType": "struct WormholeTrustedSender.TrustedSender[]",
          "components": [
            {
              "name": "chainId",
              "type": "uint16",
              "internalType": "uint16"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setBreakGlassGuardian",
      "inputs": [
        {
          "name": "newGuardian",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGasLimit",
      "inputs": [
        {
          "name": "newGasLimit",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNewStakedWell",
      "inputs": [
        {
          "name": "newStakedWell",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "toUseTimestamps",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "state",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IMultichainGovernor.ProposalState"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stkWell",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract SnapshotInterface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetAddress",
      "inputs": [
        {
          "name": "chainId",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateApprovedCalldata",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "approved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateCrossChainVoteCollectionPeriod",
      "inputs": [
        {
          "name": "newCrossChainVoteCollectionPeriod",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateMaxUserLiveProposals",
      "inputs": [
        {
          "name": "newMaxLiveProposals",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateProposalThreshold",
      "inputs": [
        {
          "name": "newProposalThreshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateQuorum",
      "inputs": [
        {
          "name": "newQuorum",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateVotingPeriod",
      "inputs": [
        {
          "name": "newVotingPeriod",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "useTimestamps",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "votingPeriod",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "well",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract SnapshotInterface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "whitelistedCalldatas",
      "inputs": [
        {
          "name": "whitelistedCalldata",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "wormholeRelayer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWormholeRelayer"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "xWell",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract xWELL"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BreakGlassExecuted",
      "inputs": [
        {
          "name": "breakGlassGuardian",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "targets",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "indexed": false,
          "internalType": "bytes[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BreakGlassGuardianChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "newValue",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BridgeOutFailed",
      "inputs": [
        {
          "name": "dstChainId",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "payload",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "refundAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BridgeOutSuccess",
      "inputs": [
        {
          "name": "dstWormholeChainId",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "cost",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "dst",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "payload",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CalldataApprovalUpdated",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CrossChainVoteCollected",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sourceChain",
          "type": "uint16",
          "indexed": false,
          "internalType": "uint16"
        },
        {
          "name": "forVotes",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "againstVotes",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "abstainVotes",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CrossChainVoteCollectionPeriodChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GasLimitUpdated",
      "inputs": [
        {
          "name": "oldGasLimit",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "newGasLimit",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GovernanceReturnAddressChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "newValue",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewStakedWellSet",
      "inputs": [
        {
          "name": "newStakedWell",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "toUseTimestamps",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauseDurationUpdated",
      "inputs": [
        {
          "name": "oldPauseDuration",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newPauseDuration",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauseGuardianUpdated",
      "inputs": [
        {
          "name": "oldPauseGuardian",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPauseGuardian",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauseTimeUpdated",
      "inputs": [
        {
          "name": "newPauseStartTime",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCanceled",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCreated",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "proposer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "targets",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "values",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "calldatas",
          "type": "bytes[]",
          "indexed": false,
          "internalType": "bytes[]"
        },
        {
          "name": "votingStartTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "votingEndTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalExecuted",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalQueued",
      "inputs": [
        {
          "name": "id",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "eta",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalRebroadcasted",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalThresholdChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "QuroumVotesChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StartBlockSet",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "startBlock",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TargetAddressUpdated",
      "inputs": [
        {
          "name": "dstChainId",
          "type": "uint16",
          "indexed": true,
          "internalType": "uint16"
        },
        {
          "name": "target",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UserMaxProposalsChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VoteCast",
      "inputs": [
        {
          "name": "voter",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "voteValue",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "votes",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VotingPeriodChanged",
      "inputs": [
        {
          "name": "oldValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b615e9780620000f36000396000f3fe6080604052600436106102e95760003560e01c8063013cf08b146102ee57806302a251a3146103e45780630526679c1461040857806306a108ec146104475780630d3cfee2146104695780630fbc82b81461049657806311fd26f4146104b657806313cb1652146104d65780631703a018146104f65780631fb6b1321461050c57806324a3d622146105c857806335680dc2146105e857806335743ac91461060857806335a2017d1461063857806337d6d1621461065857806339cbd602146106785780633e4f49e6146106b35780633f4ba83a146106e0578063404a4edb146106f5578063406ea4a21461072557806340e58ee5146107455780634b7e920914610765578063529dca3214610785578063544ffc9c1461079857806355703ceb146107fe578063567813881461081357806357ad6279146108335780635c975abb146108535780636bda81bf146108685780636e7685301461088957806375a80a57146108b857806379173a2d146108e55780637d5e81e21461090557806380e6769d146109185780638456cb591461097a57806387850f811461098f5780638cd96644146109af578063912f8a65146109c45780639380a704146109d957806394d7eaa4146109ec57806399f99c8e14610a0c5780639ba9c39d14610a2c5780639d47ea5514610a415780639ffe56f714610a61578063a62fb56314610a81578063a8d164ac14610a96578063ae8e397f14610aab578063b4b5ea5714610ae1578063b58131b014610b01578063bfe1092814610b17578063c0878f0c14610b37578063c798d6b114610b57578063c9ba036b14610b6d578063d2c0cefd14610b8d578063d4f3826b14610bad578063da25b72514610bcd578063da35c66414610bed578063e17563df14610c03578063e23a9a5214610c23578063ef00ef4314610c9c578063f3804cff14610cbc578063f5c1802214610cdc578063f68016b714610d24578063f9bae9d014610d63578063fc3452c914610d85578063fe0d94c114610d9b575b600080fd5b3480156102fa57600080fd5b50610378610309366004614acd565b60716020526000908152604090208054600482015460058301546006840154600785015460088601546009870154600a880154600b890154600c8a0154600d909a01546001600160a01b0390991699979896979596949593949293919290919060ff808216916101009004168c565b604080516001600160a01b03909d168d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015261012084015215156101408301521515610160820152610180015b60405180910390f35b3480156103f057600080fd5b506103fa607b5481565b6040519081526020016103db565b34801561041457600080fd5b5060655461042f90600160801b90046001600160801b031681565b6040516001600160801b0390911681526020016103db565b34801561045357600080fd5b50610467610462366004614b31565b610dae565b005b34801561047557600080fd5b50607554610489906001600160a01b031681565b6040516103db9190614b9c565b3480156104a257600080fd5b50607c54610489906001600160a01b031681565b3480156104c257600080fd5b506103fa6104d1366004614bc7565b611120565b3480156104e257600080fd5b506104676104f1366004614d5d565b61134c565b34801561050257600080fd5b506103fa60795481565b34801561051857600080fd5b5061057a610527366004614acd565b600090815260716020526040902080546004820154600583015460068401546007850154600c8601546009870154600a880154600b909801546001600160a01b0390971698959794969395929491939092565b604080516001600160a01b03909a168a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e0830152610100820152610120016103db565b3480156105d457600080fd5b50606654610489906001600160a01b031681565b3480156105f457600080fd5b50610467610603366004614acd565b611377565b34801561061457600080fd5b50610628610623366004614acd565b61139f565b60405190151581526020016103db565b34801561064457600080fd5b50610628610653366004614d91565b6113e5565b34801561066457600080fd5b506103fa610673366004614dc4565b61140e565b34801561068457600080fd5b50610628610693366004614e4e565b805160208183018101805160728252928201919093012091525460ff1681565b3480156106bf57600080fd5b506106d36106ce366004614acd565b6114ac565b6040516103db9190614e98565b3480156106ec57600080fd5b506104676115bc565b34801561070157600080fd5b50610628610710366004614acd565b60686020526000908152604090205460ff1681565b34801561073157600080fd5b50607354610489906001600160a01b031681565b34801561075157600080fd5b50610467610760366004614acd565b61162f565b34801561077157600080fd5b50610467610780366004614ed7565b6117a9565b610467610793366004615080565b6119f5565b3480156107a457600080fd5b506107de6107b3366004614acd565b6000908152607160205260409020600c8101546009820154600a830154600b90930154919390929190565b6040805194855260208501939093529183015260608201526080016103db565b34801561080a57600080fd5b50610628611b9e565b34801561081f57600080fd5b5061046761082e366004615105565b611baf565b34801561083f57600080fd5b5061046761084e366004614acd565b611e53565b34801561085f57600080fd5b50610628611e7b565b34801561087457600080fd5b5060765461062890600160a01b900460ff1681565b34801561089557600080fd5b506108a96108a4366004614acd565b611ec7565b6040516103db93929190615254565b3480156108c457600080fd5b506108d86108d336600461528d565b61208b565b6040516103db91906152a8565b3480156108f157600080fd5b50610467610900366004614d5d565b612184565b6103fa610913366004615316565b6121ac565b34801561092457600080fd5b5061095f61093336600461541e565b607060209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016103db565b34801561098657600080fd5b506104676126e5565b34801561099b57600080fd5b506104676109aa366004614acd565b61281f565b3480156109bb57600080fd5b506103fa612847565b3480156109d057600080fd5b506103fa612890565b6104676109e7366004614acd565b6128d5565b3480156109f857600080fd5b5060655461042f906001600160801b031681565b348015610a1857600080fd5b506103fa610a2736600461528d565b6129d0565b348015610a3857600080fd5b506103fa612a33565b348015610a4d57600080fd5b50610467610a5c366004615458565b612a3f565b348015610a6d57600080fd5b50610467610a7c366004615482565b612ad8565b348015610a8d57600080fd5b506108d8612b6a565b348015610aa257600080fd5b50610467612c39565b348015610ab757600080fd5b50610489610ac6366004614dc4565b6069602052600090815260409020546001600160a01b031681565b348015610aed57600080fd5b506103fa610afc36600461528d565b612cc0565b348015610b0d57600080fd5b506103fa607a5481565b348015610b2357600080fd5b50607654610489906001600160a01b031681565b348015610b4357600080fd5b50607454610489906001600160a01b031681565b348015610b6357600080fd5b506103fa60775481565b348015610b7957600080fd5b50610467610b8836600461528d565b612ec7565b348015610b9957600080fd5b50610467610ba83660046154ab565b612eef565b348015610bb957600080fd5b50610628610bc836600461541e565b612f1e565b348015610bd957600080fd5b50606754610489906001600160a01b031681565b348015610bf957600080fd5b506103fa606c5481565b348015610c0f57600080fd5b50610489610c1e366004614acd565b612f29565b348015610c2f57600080fd5b50610c7d610c3e36600461552b565b60009182526071602090815260408084206001600160a01b039093168452600e90920190529020805460019091015460ff808316936101009093041691565b60408051931515845260ff9092166020840152908201526060016103db565b348015610ca857600080fd5b50610467610cb7366004614acd565b612f81565b348015610cc857600080fd5b50610467610cd7366004614acd565b612fa9565b348015610ce857600080fd5b5061095f610cf736600461554e565b61ffff16600090815260706020908152604080832093835292905220805460018201546002909201549092565b348015610d3057600080fd5b50606654610d4b90600160a01b90046001600160601b031681565b6040516001600160601b0390911681526020016103db565b348015610d6f57600080fd5b50610d78612fd1565b6040516103db9190615571565b348015610d9157600080fd5b506103fa60785481565b610467610da9366004614acd565b613071565b607c546001600160a01b03163314610e235760405162461bcd60e51b815260206004820152602d60248201527f4d756c7469636861696e476f7665726e6f723a206f6e6c7920627265616b206760448201526c3630b9b99033bab0b93234b0b760991b60648201526084015b60405180910390fd5b607c54604051600080516020615d3a83398151915291610e51916001600160a01b03909116906000906155b9565b60405180910390a1607c80546001600160a01b0319169055828114610ec35760405162461bcd60e51b815260206004820152602260248201527f4d756c7469636861696e476f7665726e6f723a206172697479206d69736d61746044820152610c6d60f31b6064820152608401610e1a565b82610f105760405162461bcd60e51b815260206004820152601f60248201527f4d756c7469636861696e476f7665726e6f723a20656d707479206172726179006044820152606401610e1a565b60005b81811015611067576072838383818110610f2f57610f2f6155d3565b9050602002810190610f4191906155e9565b604051610f4f92919061562f565b9081526040519081900360200190205460ff16610fb15760405162461bcd60e51b815260206004820152602c6024820152600080516020615e2283398151915260448201526b081dda1a5d195b1a5cdd195960a21b6064820152608401610e1a565b61105e838383818110610fc657610fc66155d3565b9050602002810190610fd891906155e9565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516060810190915260348082529092509050615cc06020830139878785818110611039576110396155d3565b905060200201602081019061104e919061528d565b6001600160a01b03169190613339565b50600101610f13565b50607c546001600160a01b0316156110db5760405162461bcd60e51b815260206004820152603160248201527f4d756c7469636861696e476f7665726e6f723a20627265616b20676c6173732060448201527019dd585c991a585b881b9bdd081b9d5b1b607a1b6064820152608401610e1a565b7fd2890cfc60e8b0f52b99dc2d17dca96f464cd183f75c665c63c98c9ed267913b3385858585604051611112959493929190615668565b60405180910390a150505050565b60745460405163782d6fe160e01b815260009182916001600160a01b039091169063782d6fe1906111579088908790600401615755565b602060405180830381865afa158015611174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611198919061576e565b60765460405163782d6fe160e01b81529192506000916001600160a01b039091169063782d6fe1906111d09089908890600401615755565b602060405180830381865afa1580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611211919061576e565b607354604051630748d63560e31b81529192506000916001600160a01b0390911690633a46b1a890611249908a908a90600401615755565b602060405180830381865afa158015611266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128a919061576e565b6075546076549192506000916001600160a01b039091169063782d6fe1908a90600160a01b900460ff166112be57886112c0565b895b6040518363ffffffff1660e01b81526004016112dd929190615755565b602060405180830381865afa1580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061576e565b9050838361132c838561579d565b611336919061579d565b611340919061579d565b98975050505050505050565b33301461136b5760405162461bcd60e51b8152600401610e1a906157b0565b61137481613348565b50565b3330146113965760405162461bcd60e51b8152600401610e1a906157b0565b611374816133a4565b6000806113ab836114ac565b905060008160058111156113c1576113c1614e82565b14806113de575060018160058111156113dc576113dc614e82565b145b9392505050565b61ffff82166000908152606960205260409020546001600160a01b038281169116145b92915050565b60675460665460405163c23ee3c360e01b815261ffff84166004820152600060248201819052600160a01b9092046001600160601b0316604482015290916001600160a01b03169063c23ee3c3906064016040805180830381865afa925050508015611497575060408051601f3d908101601f19168201909252611494918101906157f1565b60015b6114a357506000919050565b5090505b919050565b600081606c54101580156114c05750600082115b61151c5760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642070726f706044820152661bdcd85b081a5960ca1b6064820152608401610e1a565b6000828152607160205260409020600d81015460ff16156115405750600292915050565b806006015442116115545750600092915050565b806007015442116115685750600192915050565b80600a01548160090154111580611584575060795481600c0154105b156115925750600392915050565b600d810154610100900460ff16156115ad5750600592915050565b50600492915050565b50919050565b6115c4613444565b6066546001600160a01b031633146115ee5760405162461bcd60e51b8152600401610e1a90615815565b6115f661348f565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516116259190614b9c565b60405180910390a1565b6000818152607160205260409020546001600160a01b03163314806116755750607a54600082815260716020526040902054611673906001600160a01b0316612cc0565b105b6116d15760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20756e617574686f72697a65646044820152660818d85b98d95b60ca1b6064820152608401610e1a565b60006116dc826114ac565b905060008160058111156116f2576116f2614e82565b1461175d5760405162461bcd60e51b815260206004820152603560248201527f4d756c7469636861696e476f7665726e6f723a2063616e6e6f742063616e63656044820152741b081b9bdb881858dd1a5d99481c1c9bdc1bdcd85b605a1b6064820152608401610e1a565b6000828152607160205260409020600d8101805460ff191660011790556117826134db565b604051838152600080516020615da1833981519152906020015b60405180910390a1505050565b600054610100900460ff16158080156117c95750600054600160ff909116105b806117ea57506117d830613648565b1580156117ea575060005460ff166001145b61184d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e1a565b6000805460ff191660011790558015611870576000805461ff0019166101001790555b6020850151607380546001600160a01b039283166001600160a01b03199182161790915586516074805491841691831691909117905560408701516075805491841691831691909117905560608701516076805491909316911617905560808501516118db90613657565b6118e88560a0015161371f565b6118f58560c001516137d2565b6119028560e001516133a4565b611910856101000151613876565b61191e856101600151613928565b611926613969565b611934856101200151613998565b6119428561014001516139f9565b611950856101800151613a51565b61195984613348565b61196562061a80613ad8565b60005b828110156119a65761199e848483818110611985576119856155d3565b905060200281019061199791906155e9565b6001613b3c565b600101611968565b5080156119ee576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b3415611a435760405162461bcd60e51b815260206004820181905260248201527f576f726d686f6c654272696467653a206e6f2076616c756520616c6c6f7765646044820152606401610e1a565b6067546001600160a01b03163314611aa95760405162461bcd60e51b8152602060048201526024808201527f576f726d686f6c654272696467653a206f6e6c792072656c6179657220616c6c6044820152631bddd95960e21b6064820152608401610e1a565b611ab38284612f1e565b611b0a5760405162461bcd60e51b815260206004820152602260248201527f576f726d686f6c654272696467653a2073656e646572206e6f74207472757374604482015261195960f21b6064820152608401610e1a565b60008181526068602052604090205460ff1615611b7b5760405162461bcd60e51b815260206004820152602960248201527f576f726d686f6c654272696467653a206d65737361676520616c7265616479206044820152681c1c9bd8d95cdcd95960ba1b6064820152608401610e1a565b6000818152606860205260409020805460ff191660011790556119ee8286613ca9565b6065546001600160801b0316151590565b611bb7613f54565b6000611bc2836114ac565b6005811115611bd357611bd3614e82565b14611c1e5760405162461bcd60e51b81526020600482015260276024820152600080516020615ca08339815191526044820152662061637469766560c81b6064820152608401610e1a565b600260ff82161115611c6f5760405162461bcd60e51b81526020600482015260266024820152600080516020615d5a8339815191526044820152652076616c756560d01b6064820152608401610e1a565b6000828152607160209081526040808320338452600e8101909252909120805460ff1615611cef5760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20766f74657220616c726561646044820152661e481d9bdd195960ca1b6064820152608401610e1a565b6000611d043384600401548560080154611120565b905080600003611d655760405162461bcd60e51b815260206004820152602660248201527f4d756c7469636861696e476f7665726e6f723a20766f74657220686173206e6f60448201526520766f74657360d01b6064820152608401610e1a565b60ff8416611d8c5780836009016000828254611d81919061579d565b90915550611dd29050565b60001960ff851601611dac578083600a016000828254611d81919061579d565b60011960ff851601611dd2578083600b016000828254611dcc919061579d565b90915550505b8083600c016000828254611de6919061579d565b9091555050815460ff8516610100810261ffff1990921691909117600190811784558301829055604080513381526020810188905290810191909152606081018290527f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d29906080016119e5565b333014611e725760405162461bcd60e51b8152600401610e1a906157b0565b61137481613657565b6065546000906001600160801b031615611ebf57606554611eae906001600160801b03600160801b820481169116615863565b6001600160801b0316421115905090565b60005b905090565b606080606060716000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611f3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f18575b5050505050925060716000858152602001908152602001600020600201805480602002602001604051908101604052809291908181526020018280548015611f9d57602002820191906000526020600020905b815481526020019060010190808311611f89575b505050600087815260716020908152604080832060030180548251818502810185019093528083529698509095909450925084015b8282101561207e578382906000526020600020018054611ff190615883565b80601f016020809104026020016040519081016040528092919081815260200182805461201d90615883565b801561206a5780601f1061203f5761010080835404028352916020019161206a565b820191906000526020600020905b81548152906001019060200180831161204d57829003601f168201915b505050505081526020019060010190611fd2565b5050505090509193909250565b60606000612098836129d0565b6001600160401b038111156120af576120af614bfa565b6040519080825280602002602001820160405280156120d8578160200160208202803683370190505b506001600160a01b0384166000908152606f60205260408120919250906120fe90613f9c565b90506000805b825181101561217a5761212f838281518110612122576121226155d3565b602002602001015161139f565b1561217257828181518110612146576121466155d3565b6020026020010151848381518110612160576121606155d3565b60209081029190910101526001909101905b600101612104565b5091949350505050565b3330146121a35760405162461bcd60e51b8152600401610e1a906157b0565b61137481613fa9565b60006121b6613f54565b607a546121d3336121c86001426158b7565b6104d16001436158b7565b10156122455760405162461bcd60e51b815260206004820152603b60248201527f4d756c7469636861696e476f7665726e6f723a2070726f706f73657220766f7460448201527a195cc818995b1bddc81c1c9bdc1bdcd85b081d1a1c995cda1bdb19602a1b6064820152608401610e1a565b83518551148015612257575082518551145b6122cb576040805162461bcd60e51b81526020600482015260248101919091527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c2066756e60448201527f6374696f6e20696e666f726d6174696f6e206172697479206d69736d617463686064820152608401610e1a565b845160000361232d5760405162461bcd60e51b815260206004820152602860248201527f4d756c7469636861696e476f7665726e6f723a206d7573742070726f7669646560448201526720616374696f6e7360c01b6064820152608401610e1a565b60008251116123975760405162461bcd60e51b815260206004820152603060248201527f4d756c7469636861696e476f7665726e6f723a206465736372697074696f6e2060448201526f63616e206e6f7420626520656d70747960801b6064820152608401610e1a565b61239f6134db565b60006123aa336129d0565b9050607854811061241f5760405162461bcd60e51b815260206004820152603960248201527f4d756c7469636861696e476f7665726e6f723a20746f6f206d616e79206c69766044820152783290383937b837b9b0b639903337b9103a3434b9903ab9b2b960391b6064820152608401610e1a565b506000805b855181101561245c5785818151811061243f5761243f6155d3565b602002602001015182612452919061579d565b9150600101612424565b5050606c805490600061246e836158ca565b9091555050606c5460009081526071602052604081209060609042906124956001836158b7565b90506000607b54836124a7919061579d565b90506000607754826124b9919061579d565b86546001600160a01b031916331787558b519091506124e190600188019060208e0190614973565b5089516124f790600288019060208d01906149d4565b50885161250d90600388019060208c0190614a0f565b5060048601839055600586018490556125276001436158b7565b60088701556006860182905560078601819055606c54604051612555919085908790869086906020016158e3565b60405160208183030381529060405294507f95f03e437e6d5037418f12bef80fc7e0a5f27754c078a1d5d3f62d39bac44e50606c54338d8d8d89888f6040516125a5989796959493929190615906565b60405180910390a15050606c54336000908152606f602052604090206125cd9350915061407a565b61263d5760405162461bcd60e51b815260206004820152603b60248201527f4d756c7469636861696e476f7665726e6f723a20757365722063616e6e6f742060448201527a616464207468652073616d652070726f706f73616c20747769636560281b6064820152608401610e1a565b606c5461264c90606d9061407a565b6126cc5760405162461bcd60e51b8152602060048201526044602482018190527f4d756c7469636861696e476f7665726e6f723a2063616e6e6f74206164642074908201527f68652073616d652070726f706f73616c20747769636520746f20676c6f62616c606482015263081cd95d60e21b608482015260a401610e1a565b6126d581614086565b606c54925050505b949350505050565b6126ed614323565b60006126f9606d613f9c565b905060005b815181101561281657600061272b83838151811061271e5761271e6155d3565b60200260200101516114ac565b9050600581600581111561274157612741614e82565b141580156127615750600381600581111561275e5761275e614e82565b14155b801561277f5750600281600581111561277c5761277c614e82565b14155b1561280d5760016071600085858151811061279c5761279c6155d3565b60200260200101518152602001908152602001600020600d0160006101000a81548160ff021916908315150217905550600080516020615da18339815191528383815181106127ed576127ed6155d3565b602002602001015160405161280491815260200190565b60405180910390a15b506001016126fe565b506113746134db565b33301461283e5760405162461bcd60e51b8152600401610e1a906157b0565b611374816137d2565b600080612854606d613f9c565b905060005b815181101561288b57612877828281518110612122576121226155d3565b15612883576001909201915b600101612859565b505090565b6000808061289e606a6143f8565b905060005b818110156128cd576128b9610673606a83614402565b6128c3908461579d565b92506001016128a3565b509092915050565b60006128e0826114ac565b905060008160058111156128f6576128f6614e82565b1461294d5760405162461bcd60e51b815260206004820152602160248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c696420737461746044820152606560f81b6064820152608401610e1a565b600082815260716020908152604080832060048101546005820154600683015460078401549451939695612985958a959091016158e3565b604051602081830303815290604052905061299f81614086565b7f99544206c0c7eeb094511c6325a8ded7774d05b33e180bb186e006adb40c1bf88482604051611112929190615988565b6001600160a01b0381166000908152606f6020526040812081906129f390613f9c565b90506000805b8251811015612a2b57612a17838281518110612122576121226155d3565b15612a23576001909101905b6001016129f9565b509392505050565b6000611ec2606a6143f8565b333014612a5e5760405162461bcd60e51b8152600401610e1a906157b0565b607580546001600160a01b0319166001600160a01b0384169081179091556076805460ff60a01b1916600160a01b841515908102919091179091556040805192835260208301919091527fcb81550299f8062d66ed81a8c8cb01b10da7835931b490dedff5e781931a82a291015b60405180910390a15050565b333014612af75760405162461bcd60e51b8152600401610e1a906157b0565b62061a806001600160601b0382161015612b615760405162461bcd60e51b815260206004820152602560248201527f4d756c7469636861696e476f7665726e6f723a20676173206c696d697420746f6044820152646f206c6f7760d81b6064820152608401610e1a565b61137481613ad8565b60606000612b76612847565b90506000816001600160401b03811115612b9257612b92614bfa565b604051908082528060200260200182016040528015612bbb578160200160208202803683370190505b5090506000612bca606d613f9c565b90506000805b825181101561217a57612bee838281518110612122576121226155d3565b15612c3157828181518110612c0557612c056155d3565b6020026020010151848381518110612c1f57612c1f6155d3565b60209081029190910101526001909101905b600101612bd0565b612c41613f54565b612c49611b9e565b612cb65760405162461bcd60e51b815260206004820152603860248201527f436f6e666967757261626c655061757365477561726469616e3a20646964206e6044820152776f742070617573652c20736f2063616e6e6f74206b69636b60401b6064820152608401610e1a565b612cbe61348f565b565b60745460405163b4b5ea5760e01b815260009182916001600160a01b039091169063b4b5ea5790612cf5908690600401614b9c565b602060405180830381865afa158015612d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d36919061576e565b60755460405163b4b5ea5760e01b81529192506000916001600160a01b039091169063b4b5ea5790612d6c908790600401614b9c565b602060405180830381865afa158015612d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dad919061576e565b60765460405163b4b5ea5760e01b81529192506000916001600160a01b039091169063b4b5ea5790612de3908890600401614b9c565b602060405180830381865afa158015612e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e24919061576e565b6073546040516309ab24eb60e41b81529192506000916001600160a01b0390911690639ab24eb090612e5a908990600401614b9c565b602060405180830381865afa158015612e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9b919061576e565b90508382612ea9858461579d565b612eb3919061579d565b612ebd919061579d565b9695505050505050565b333014612ee65760405162461bcd60e51b8152600401610e1a906157b0565b61137481613928565b333014612f0e5760405162461bcd60e51b8152600401610e1a906157b0565b612f19838383613b3c565b505050565b60006113de83610653845b600060a082901c15612f7d5760405162461bcd60e51b815260206004820152601f60248201527f576f726d686f6c654272696467653a20696e76616c69642061646472657373006044820152606401610e1a565b5090565b333014612fa05760405162461bcd60e51b8152600401610e1a906157b0565b6113748161371f565b333014612fc85760405162461bcd60e51b8152600401610e1a906157b0565b61137481613876565b60606000612fdf606a6143f8565b90506000816001600160401b03811115612ffb57612ffb614bfa565b604051908082528060200260200182016040528015613024578160200160208202803683370190505b50905060005b8281101561306a5761303d606a82614402565b82828151811061304f5761304f6155d3565b61ffff9092166020928302919091019091015260010161302a565b5092915050565b613079613f54565b6004613084826114ac565b600581111561309557613095614e82565b146131165760405162461bcd60e51b8152602060048201526044602482018190527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c2063616e908201527f206f6e6c792062652065786563757465642069662069742069732053756363656064820152631959195960e21b608482015260a401610e1a565b6000818152607160205260408120815b600182015481101561316757816002018181548110613147576131476155d3565b90600052602060002001548361315d919061579d565b9250600101613126565b503482146131c15760405162461bcd60e51b815260206004820152602160248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642076616c756044820152606560f81b6064820152608401610e1a565b600d8101805461ff0019166101001790556131da6134db565b60005b6001820154811015613308576132ff826003018281548110613201576132016155d3565b90600052602060002001805461321690615883565b80601f016020809104026020016040519081016040528092919081815260200182805461324290615883565b801561328f5780601f106132645761010080835404028352916020019161328f565b820191906000526020600020905b81548152906001019060200180831161327257829003601f168201915b50505050508360020183815481106132a9576132a96155d3565b9060005260206000200154604051806060016040528060278152602001615d7a602791398560010185815481106132e2576132e26155d3565b6000918252602090912001546001600160a01b031692919061440e565b506001016131dd565b506040518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200161179c565b60606126dd848460008561440e565b60005b81518110156133a057613398828281518110613369576133696155d3565b602002602001015160000151838381518110613387576133876155d3565b6020026020010151602001516144e9565b60010161334b565b5050565b676765c793fa10079d601a1b81111561340a5760405162461bcd60e51b815260206004820152602260248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642071756f72604482015261756d60f01b6064820152608401610e1a565b60798054908290556040517f881e29202a36aa27b2e7dbd1086b0679e9212ac38029ba9959623b58d66a56b290612acc90839085906159a1565b61344c611e7b565b612cbe5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610e1a565b606680546001600160a01b031981169091556001600160a01b03166134b46000614658565b6040516000906001600160a01b03831690600080516020615c80833981519152908390a350565b60006134e7606d613f9c565b905060005b81518110156133a057600061350c83838151811061271e5761271e6155d3565b9050600381600581111561352257613522614e82565b148061353f5750600281600581111561353d5761353d614e82565b145b8061355b5750600581600581111561355957613559614e82565b145b1561363f57613602606f60006071600087878151811061357d5761357d6155d3565b6020026020010151815260200190815260200160002060000160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000208484815181106135dc576135dc6155d3565b6020026020010151604051806080016040528060468152602001615cf4604691396146a2565b61363f606d848481518110613619576136196155d3565b6020026020010151604051806080016040528060418152602001615de1604191396146a2565b506001016134ec565b6001600160a01b03163b151590565b6954b40b1f852bda000000811015801561367c57506a295be96e640669720000008111155b6136e55760405162461bcd60e51b815260206004820152603460248201527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c207468726044820152736573686f6c64206f7574206f6620626f756e647360601b6064820152608401610e1a565b607a8054908290556040517f9b772ef27711c872f217a0c52a72ba00d7552f2d6c3b3d0f0593fc2549359df390612acc90839085906159a1565b610e1081101580156137345750621275008111155b6137985760405162461bcd60e51b815260206004820152602f60248201527f4d756c7469636861696e476f7665726e6f723a20766f74696e6720706572696f60448201526e64206f7574206f6620626f756e647360881b6064820152608401610e1a565b607b8054908290556040517f0157f874643e34dea2d71607bde6378f09880b59546f9e2386608eb7154b897590612acc90839085906159a1565b610e1081101580156137e75750621275008111155b61383c5760405162461bcd60e51b81526020600482015260326024820152600080516020615d5a8339815191526044820152710818dbdb1b1958dd1a5bdb881c195c9a5bd960721b6064820152608401610e1a565b60778054908290556040517fca438bea0881e082cea91d9c56e46b52e389fad3ae6b8aaa62463b14c72f65e090612acc90839085906159a1565b8015801590613886575060148111155b6138ee5760405162461bcd60e51b815260206004820152603360248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c6964206d61782060448201527275736572206c6976652070726f706f73616c7360681b6064820152608401610e1a565b60788054908290556040517f89dbd13c686bb51f9357f13e1cefc3c495ddeb2db0989036a9685904877aba8b90612acc90839085906159a1565b607c80546001600160a01b038381166001600160a01b0319831617909255604051911690600080516020615d3a83398151915290612acc90839085906155b9565b600054610100900460ff166139905760405162461bcd60e51b8152600401610e1a906159af565b612cbe6146cb565b606580546001600160801b03838116600160801b908102828416179384905560408051938290048316808552919094049091166020830152917ff6e1f1afec511d8b8e9a65bb53c947ac99ea4211fb22e0d6a0e331d55d7345f89101612acc565b606680546001600160a01b0319166001600160a01b03831617905580613a1f6000614658565b816001600160a01b0316816001600160a01b0316600080516020615c8083398151915260405160405180910390a35050565b6067546001600160a01b031615613ab65760405162461bcd60e51b815260206004820152602360248201527f576f726d686f6c654272696467653a2072656c6179657220616c7265616479206044820152621cd95d60ea1b6064820152608401610e1a565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b606680546001600160601b03838116600160a01b8181026001600160a01b0385161790945560408051949093049091168084526020840191909152917f5ccd21ad0b9c241d63daee4d43a957379ac1bef51da6554ef0d581c5ad09f5bb9101612acc565b801515600103613bd35760728383604051613b5892919061562f565b9081526040519081900360200190205460ff1615613bce5760405162461bcd60e51b815260206004820152602d60248201527f4d756c7469636861696e476f7665726e6f723a2063616c6c6461746120616c7260448201526c1958591e48185c1c1c9bdd9959609a1b6064820152608401610e1a565b613c44565b60728383604051613be592919061562f565b9081526040519081900360200190205460ff16613c445760405162461bcd60e51b81526020600482015260296024820152600080516020615e2283398151915260448201526808185c1c1c9bdd995960ba1b6064820152608401610e1a565b8060728484604051613c5792919061562f565b908152604051908190036020018120805492151560ff19909316929092179091557f140cf3352e7f796348bea7183809e6a7b907e826b581091dab21cbaf6c24b03e9061179c908590859085906159fa565b8051608014613d0d5760405162461bcd60e51b815260206004820152602a60248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c6964207061796c6044820152690dec2c840d8cadccee8d60b31b6064820152608401610e1a565b60008060008084806020019051810190613d279190615a20565b61ffff8a16600090815260706020908152604080832087845290915290208054949850929650909450925090158015613d6257506001810154155b8015613d7057506002810154155b613dcf5760405162461bcd60e51b815260206004820152602a60248201527f4d756c7469636861696e476f7665726e6f723a20766f746520616c72656164796044820152690818dbdb1b1958dd195960b21b6064820152608401610e1a565b6001613dda866114ac565b6005811115613deb57613deb614e82565b14613e5b5760405162461bcd60e51b81526020600482015260466024820152600080516020615ca083398151915260448201527f20696e2063726f737320636861696e20766f746520636f6c6c656374696f6e206064820152651c195c9a5bd960d21b608482015260a401610e1a565b8381556001810183905560028101829055600085815260716020526040812060098101805491928792613e8f90849061579d565b925050819055508381600a016000828254613eaa919061579d565b925050819055508281600b016000828254613ec5919061579d565b90915550839050613ed6858761579d565b613ee0919061579d565b81600c016000828254613ef3919061579d565b90915550506040805187815261ffff8a16602082015290810186905260608101859052608081018490527fa6a83478dd60ce81218bc436542c31ae5bfdf856146db87dae8c5fe7ec69d82d9060a00160405180910390a15050505050505050565b613f5c611e7b565b15612cbe5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610e1a565b606060006113de836146fe565b60005b81518110156133a0576000828281518110613fc957613fc96155d3565b6020908102919091018101515161ffff811660008181526069909352604090922080546001600160a01b0319169055915061400690606a9061475a565b6140525760405162461bcd60e51b815260206004820152601f60248201527f576f726d686f6c654272696467653a20636861696e206e6f74206164646564006044820152606401610e1a565b60405160009061ffff831690600080516020615e42833981519152908390a350600101613fac565b60006113de8383614766565b3461408f612890565b146140f25760405162461bcd60e51b815260206004820152602d60248201527f576f726d686f6c654272696467653a20746f74616c20636f7374206e6f74206560448201526c7175616c20746f2071756f746560981b6064820152608401610e1a565b60006140fe606a6143f8565b90506000805b8281101561427e576000614119606a83614402565b905060006141268261140e565b60675461ffff84166000908152606960205260408082205460665491516347f66e8160e11b81529495506001600160a01b0393841694638fecdd0294879461418a948a94909216928e926001600160601b03600160a01b9091041690600401615a56565b60206040518083038185885af1935050505080156141c5575060408051601f3d908101601f191682019092526141c291810190615aa6565b60015b614215576141d3818561579d565b93507fe943c14b34c02fdf811683cd7901c2eeb54a7b8a97b055debcec6eb66b800a7482878360405161420893929190615acf565b60405180910390a1614274565b5061ffff8216600090815260696020526040908190205490517f47cab59001e84a2b56fab55afd46305539b786ad54299920d86f20d524a2ba449161426b91859185916001600160a01b03909116908b90615afc565b60405180910390a15b5050600101614104565b508015612f1957604051600090339083908381818185875af1925050503d80600081146142c7576040519150601f19603f3d011682016040523d82523d6000602084013e6142cc565b606091505b505090508061431d5760405162461bcd60e51b815260206004820152601d60248201527f576f726d686f6c654272696467653a20726566756e64206661696c65640000006044820152606401610e1a565b50505050565b61432b613f54565b6066546001600160a01b031633146143555760405162461bcd60e51b8152600401610e1a90615815565b61435d611b9e565b156143c05760405162461bcd60e51b815260206004820152602d60248201527f436f6e666967757261626c655061757365477561726469616e3a20706175736560448201526c08185b1c9958591e481d5cd959609a1b6064820152608401610e1a565b6143c942614658565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516116259190614b9c565b6000611408825490565b60006113de83836147b5565b60608247101561446f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e1a565b600080866001600160a01b0316858760405161448b9190615b2d565b60006040518083038185875af1925050503d80600081146144c8576040519150601f19603f3d011682016040523d82523d6000602084013e6144cd565b606091505b50915091506144de878383876147df565b979650505050505050565b61ffff82166000908152606960205260409020546001600160a01b03161561454d5760405162461bcd60e51b81526020600482015260236024820152600080516020615dc183398151915260448201526219195960ea1b6064820152608401610e1a565b6001600160a01b0381166145b25760405162461bcd60e51b815260206004820152602660248201527f576f726d686f6c654272696467653a20696e76616c696420746172676574206160448201526564647265737360d01b6064820152608401610e1a565b6145c1606a61ffff841661407a565b61460e5760405162461bcd60e51b815260206004820152602a6024820152600080516020615dc1833981519152604482015269191959081d1bc81cd95d60b21b6064820152608401610e1a565b61ffff821660008181526069602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909291600080516020615e4283398151915291a35050565b606580546001600160801b0319166001600160801b0383169081179091556040517ff9a602433e136b05c194852c92724c3069fe46ca433ff9ec750396286472012990600090a250565b6146ac838361475a565b819061431d5760405162461bcd60e51b8152600401610e1a9190615b49565b600054610100900460ff166146f25760405162461bcd60e51b8152600401610e1a906159af565b6033805460ff19169055565b60608160000180548060200260200160405190810160405280929190818152602001828054801561474e57602002820191906000526020600020905b81548152602001906001019080831161473a575b50505050509050919050565b60006113de8383614856565b60008181526001830160205260408120546147ad57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611408565b506000611408565b60008260000182815481106147cc576147cc6155d3565b9060005260206000200154905092915050565b6060831561484c578251600003614845576147f985613648565b6148455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e1a565b50816126dd565b6126dd8383614949565b6000818152600183016020526040812054801561493f57600061487a6001836158b7565b855490915060009061488e906001906158b7565b90508181146148f35760008660000182815481106148ae576148ae6155d3565b90600052602060002001549050808760000184815481106148d1576148d16155d3565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061490457614904615b5c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611408565b6000915050611408565b8151156149595781518083602001fd5b8060405162461bcd60e51b8152600401610e1a9190615b49565b8280548282559060005260206000209081019282156149c8579160200282015b828111156149c857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614993565b50612f7d929150614a61565b8280548282559060005260206000209081019282156149c8579160200282015b828111156149c85782518255916020019190600101906149f4565b828054828255906000526020600020908101928215614a55579160200282015b82811115614a555782518290614a459082615bc0565b5091602001919060010190614a2f565b50612f7d929150614a76565b5b80821115612f7d5760008155600101614a62565b80821115612f7d576000614a8a8282614a93565b50600101614a76565b508054614a9f90615883565b6000825580601f10614aaf575050565b601f0160209004906000526020600020908101906113749190614a61565b600060208284031215614adf57600080fd5b5035919050565b60008083601f840112614af857600080fd5b5081356001600160401b03811115614b0f57600080fd5b6020830191508360208260051b8501011115614b2a57600080fd5b9250929050565b60008060008060408587031215614b4757600080fd5b84356001600160401b0380821115614b5e57600080fd5b614b6a88838901614ae6565b90965094506020870135915080821115614b8357600080fd5b50614b9087828801614ae6565b95989497509550505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146114a757600080fd5b600080600060608486031215614bdc57600080fd5b614be584614bb0565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715614c3257614c32614bfa565b60405290565b6040516101a081016001600160401b0381118282101715614c3257614c32614bfa565b604051601f8201601f191681016001600160401b0381118282101715614c8357614c83614bfa565b604052919050565b60006001600160401b03821115614ca457614ca4614bfa565b5060051b60200190565b803561ffff811681146114a757600080fd5b600082601f830112614cd157600080fd5b81356020614ce6614ce183614c8b565b614c5b565b82815260069290921b84018101918181019086841115614d0557600080fd5b8286015b84811015614d525760408189031215614d225760008081fd5b614d2a614c10565b614d3382614cae565b8152614d40858301614bb0565b81860152835291830191604001614d09565b509695505050505050565b600060208284031215614d6f57600080fd5b81356001600160401b03811115614d8557600080fd5b6126dd84828501614cc0565b60008060408385031215614da457600080fd5b614dad83614cae565b9150614dbb60208401614bb0565b90509250929050565b600060208284031215614dd657600080fd5b6113de82614cae565b600082601f830112614df057600080fd5b81356001600160401b03811115614e0957614e09614bfa565b614e1c601f8201601f1916602001614c5b565b818152846020838601011115614e3157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215614e6057600080fd5b81356001600160401b03811115614e7657600080fd5b6126dd84828501614ddf565b634e487b7160e01b600052602160045260246000fd5b6020810160068310614eba57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160801b03811681146114a757600080fd5b6000806000808486036101e0811215614eef57600080fd5b6101a080821215614eff57600080fd5b614f07614c38565b9150614f1287614bb0565b8252614f2060208801614bb0565b6020830152614f3160408801614bb0565b6040830152614f4260608801614bb0565b60608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e0830152610100808801358184015250610120614f89818901614ec0565b90830152610140614f9b888201614bb0565b90830152610160614fad888201614bb0565b90830152610180614fbf888201614bb0565b908301529094508501356001600160401b0380821115614fde57600080fd5b614fea88838901614cc0565b94506101c0870135915080821115614b8357600080fd5b600082601f83011261501257600080fd5b81356020615022614ce183614c8b565b82815260059290921b8401810191818101908684111561504157600080fd5b8286015b84811015614d525780356001600160401b038111156150645760008081fd5b6150728986838b0101614ddf565b845250918301918301615045565b600080600080600060a0868803121561509857600080fd5b85356001600160401b03808211156150af57600080fd5b6150bb89838a01614ddf565b965060208801359150808211156150d157600080fd5b506150de88828901615001565b945050604086013592506150f460608701614cae565b949793965091946080013592915050565b6000806040838503121561511857600080fd5b82359150602083013560ff8116811461513057600080fd5b809150509250929050565b600081518084526020808501945080840160005b838110156151745781516001600160a01b03168752958201959082019060010161514f565b509495945050505050565b600081518084526020808501945080840160005b8381101561517457815187529582019590820190600101615193565b60005b838110156151ca5781810151838201526020016151b2565b50506000910152565b600081518084526151eb8160208601602086016151af565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156152475782840389526152358483516151d3565b9885019893509084019060010161521d565b5091979650505050505050565b606081526000615267606083018661513b565b8281036020840152615279818661517f565b90508281036040840152612ebd81856151ff565b60006020828403121561529f57600080fd5b6113de82614bb0565b6020815260006113de602083018461517f565b600082601f8301126152cc57600080fd5b813560206152dc614ce183614c8b565b82815260059290921b840181019181810190868411156152fb57600080fd5b8286015b84811015614d5257803583529183019183016152ff565b6000806000806080858703121561532c57600080fd5b84356001600160401b038082111561534357600080fd5b818701915087601f83011261535757600080fd5b81356020615367614ce183614c8b565b82815260059290921b8401810191818101908b84111561538657600080fd5b948201945b838610156153ab5761539c86614bb0565b8252948201949082019061538b565b985050880135925050808211156153c157600080fd5b6153cd888389016152bb565b945060408701359150808211156153e357600080fd5b6153ef88838901615001565b9350606087013591508082111561540557600080fd5b5061541287828801614ddf565b91505092959194509250565b6000806040838503121561543157600080fd5b61543a83614cae565b946020939093013593505050565b803580151581146114a757600080fd5b6000806040838503121561546b57600080fd5b61547483614bb0565b9150614dbb60208401615448565b60006020828403121561549457600080fd5b81356001600160601b03811681146113de57600080fd5b6000806000604084860312156154c057600080fd5b83356001600160401b03808211156154d757600080fd5b818601915086601f8301126154eb57600080fd5b8135818111156154fa57600080fd5b87602082850101111561550c57600080fd5b6020928301955093506155229186019050615448565b90509250925092565b6000806040838503121561553e57600080fd5b82359150614dbb60208401614bb0565b6000806040838503121561556157600080fd5b82359150614dbb60208401614cae565b6020808252825182820181905260009190848201906040850190845b818110156155ad57835161ffff168352928401929184019160010161558d565b50909695505050505050565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261560057600080fd5b8301803591506001600160401b0382111561561a57600080fd5b602001915036819003821315614b2a57600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b898110156156b557836156a286614bb0565b1682529382019390820190600101615690565b5085810360408701528681528181019350600587901b8101820192508760005b8881101561574457828503601f190186528135368b9003601e190181126156fb57600080fd5b8a0184810190356001600160401b0381111561571657600080fd5b80360382131561572557600080fd5b61573087828461563f565b9786019796505050908301906001016156d5565b50929b9a5050505050505050505050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561578057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561140857611408615787565b60208082526021908201527f4d756c7469636861696e476f7665726e6f723a206f6e6c7920676f7665726e6f6040820152603960f91b606082015260800190565b6000806040838503121561580457600080fd5b505080516020909101519092909150565b6020808252602e908201527f436f6e666967757261626c655061757365477561726469616e3a206f6e6c792060408201526d3830bab9b29033bab0b93234b0b760911b606082015260800190565b6001600160801b0381811683821601908082111561306a5761306a615787565b600181811c9082168061589757607f821691505b6020821081036115b657634e487b7160e01b600052602260045260246000fd5b8181038181111561140857611408615787565b6000600182016158dc576158dc615787565b5060010190565b948552602085019390935260408401919091526060830152608082015260a00190565b8881526001600160a01b0388166020820152610100604082018190526000906159318382018a61513b565b90508281036060840152615945818961517f565b9050828103608084015261595981886151ff565b90508560a08401528460c084015282810360e084015261597981856151d3565b9b9a5050505050505050505050565b8281526040602082015260006126dd60408301846151d3565b918252602082015260400190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000615a0e60408301858761563f565b90508215156020830152949350505050565b60008060008060808587031215615a3657600080fd5b505082516020840151604085015160609095015191969095509092509050565b61ffff861681526001600160a01b038516602082015260a060408201819052600090615a84908301866151d3565b6060830194909452506001600160601b03919091166080909101529392505050565b600060208284031215615ab857600080fd5b81516001600160401b03811681146113de57600080fd5b61ffff84168152606060208201526000615aec60608301856151d3565b9050826040830152949350505050565b61ffff8516815283602082015260018060a01b0383166040820152608060608201526000612ebd60808301846151d3565b60008251615b3f8184602087016151af565b9190910192915050565b6020815260006113de60208301846151d3565b634e487b7160e01b600052603160045260246000fd5b601f821115612f1957600081815260208120601f850160051c81016020861015615b995750805b601f850160051c820191505b81811015615bb857828155600101615ba5565b505050505050565b81516001600160401b03811115615bd957615bd9614bfa565b615bed81615be78454615883565b84615b72565b602080601f831160018114615c225760008415615c0a5750858301515b600019600386901b1c1916600185901b178555615bb8565b600085815260208120601f198616915b82811015615c5157888601518255948401946001909101908401615c32565b5085821015615c6f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fecaaa282fb2cbeb3df8763925c47fce27f7d642a513ca61ece90ac2dd6acb5ceb4d756c7469636861696e476f7665726e6f723a2070726f706f73616c206e6f744d756c7469636861696e476f7665726e6f723a20627265616b20676c61737320677561726469616e2063616c6c206661696c65644d756c7469636861696e476f7665726e6f723a20636f756c64206e6f742072656d6f76652070726f706f73616c2066726f6d2075736572206c6976652070726f706f73616c7319be0cefd4235c57b29c828297a3e160306f359677ce5dc07f5b4f546fc29de64d756c7469636861696e476f7665726e6f723a20696e76616c696420766f74654d756c7469636861696e476f7665726e6f723a20657865637574652063616c6c206661696c6564789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c576f726d686f6c654272696467653a20636861696e20616c72656164792061644d756c7469636861696e476f7665726e6f723a20636f756c64206e6f742072656d6f76652070726f706f73616c2066726f6d206c6976652070726f706f73616c734d756c7469636861696e476f7665726e6f723a2063616c6c64617461206e6f7440408703d30ddad046e1af438394d2996712767ef13391ae7d9d21fa9eb63df5a2646970667358221220b84e1ac306954af987fcec9f13db331c9a8e9660dc5d645418eb9a3acf42b18864736f6c63430008130033",
    "sourceMap": "1320:51714:118:-:0;;;6830:53;;;;;;;;;-1:-1:-1;6854:22:118;:20;:22::i;:::-;1320:51714;;5939:280:25;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:25;;216:2:311;5998:66:25;;;198:21:311;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:311;;;338:37;392:19;;5998:66:25;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:25;6140:15;6125:30;;;;;;6174:28;;564:36:311;;;6174:28:25;;552:2:311;537:18;6174:28:25;;;;;;;6074:139;5939:280::o;422:184:311:-;1320:51714:118;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102e95760003560e01c8063013cf08b146102ee57806302a251a3146103e45780630526679c1461040857806306a108ec146104475780630d3cfee2146104695780630fbc82b81461049657806311fd26f4146104b657806313cb1652146104d65780631703a018146104f65780631fb6b1321461050c57806324a3d622146105c857806335680dc2146105e857806335743ac91461060857806335a2017d1461063857806337d6d1621461065857806339cbd602146106785780633e4f49e6146106b35780633f4ba83a146106e0578063404a4edb146106f5578063406ea4a21461072557806340e58ee5146107455780634b7e920914610765578063529dca3214610785578063544ffc9c1461079857806355703ceb146107fe578063567813881461081357806357ad6279146108335780635c975abb146108535780636bda81bf146108685780636e7685301461088957806375a80a57146108b857806379173a2d146108e55780637d5e81e21461090557806380e6769d146109185780638456cb591461097a57806387850f811461098f5780638cd96644146109af578063912f8a65146109c45780639380a704146109d957806394d7eaa4146109ec57806399f99c8e14610a0c5780639ba9c39d14610a2c5780639d47ea5514610a415780639ffe56f714610a61578063a62fb56314610a81578063a8d164ac14610a96578063ae8e397f14610aab578063b4b5ea5714610ae1578063b58131b014610b01578063bfe1092814610b17578063c0878f0c14610b37578063c798d6b114610b57578063c9ba036b14610b6d578063d2c0cefd14610b8d578063d4f3826b14610bad578063da25b72514610bcd578063da35c66414610bed578063e17563df14610c03578063e23a9a5214610c23578063ef00ef4314610c9c578063f3804cff14610cbc578063f5c1802214610cdc578063f68016b714610d24578063f9bae9d014610d63578063fc3452c914610d85578063fe0d94c114610d9b575b600080fd5b3480156102fa57600080fd5b50610378610309366004614acd565b60716020526000908152604090208054600482015460058301546006840154600785015460088601546009870154600a880154600b890154600c8a0154600d909a01546001600160a01b0390991699979896979596949593949293919290919060ff808216916101009004168c565b604080516001600160a01b03909d168d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015261012084015215156101408301521515610160820152610180015b60405180910390f35b3480156103f057600080fd5b506103fa607b5481565b6040519081526020016103db565b34801561041457600080fd5b5060655461042f90600160801b90046001600160801b031681565b6040516001600160801b0390911681526020016103db565b34801561045357600080fd5b50610467610462366004614b31565b610dae565b005b34801561047557600080fd5b50607554610489906001600160a01b031681565b6040516103db9190614b9c565b3480156104a257600080fd5b50607c54610489906001600160a01b031681565b3480156104c257600080fd5b506103fa6104d1366004614bc7565b611120565b3480156104e257600080fd5b506104676104f1366004614d5d565b61134c565b34801561050257600080fd5b506103fa60795481565b34801561051857600080fd5b5061057a610527366004614acd565b600090815260716020526040902080546004820154600583015460068401546007850154600c8601546009870154600a880154600b909801546001600160a01b0390971698959794969395929491939092565b604080516001600160a01b03909a168a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e0830152610100820152610120016103db565b3480156105d457600080fd5b50606654610489906001600160a01b031681565b3480156105f457600080fd5b50610467610603366004614acd565b611377565b34801561061457600080fd5b50610628610623366004614acd565b61139f565b60405190151581526020016103db565b34801561064457600080fd5b50610628610653366004614d91565b6113e5565b34801561066457600080fd5b506103fa610673366004614dc4565b61140e565b34801561068457600080fd5b50610628610693366004614e4e565b805160208183018101805160728252928201919093012091525460ff1681565b3480156106bf57600080fd5b506106d36106ce366004614acd565b6114ac565b6040516103db9190614e98565b3480156106ec57600080fd5b506104676115bc565b34801561070157600080fd5b50610628610710366004614acd565b60686020526000908152604090205460ff1681565b34801561073157600080fd5b50607354610489906001600160a01b031681565b34801561075157600080fd5b50610467610760366004614acd565b61162f565b34801561077157600080fd5b50610467610780366004614ed7565b6117a9565b610467610793366004615080565b6119f5565b3480156107a457600080fd5b506107de6107b3366004614acd565b6000908152607160205260409020600c8101546009820154600a830154600b90930154919390929190565b6040805194855260208501939093529183015260608201526080016103db565b34801561080a57600080fd5b50610628611b9e565b34801561081f57600080fd5b5061046761082e366004615105565b611baf565b34801561083f57600080fd5b5061046761084e366004614acd565b611e53565b34801561085f57600080fd5b50610628611e7b565b34801561087457600080fd5b5060765461062890600160a01b900460ff1681565b34801561089557600080fd5b506108a96108a4366004614acd565b611ec7565b6040516103db93929190615254565b3480156108c457600080fd5b506108d86108d336600461528d565b61208b565b6040516103db91906152a8565b3480156108f157600080fd5b50610467610900366004614d5d565b612184565b6103fa610913366004615316565b6121ac565b34801561092457600080fd5b5061095f61093336600461541e565b607060209081526000928352604080842090915290825290208054600182015460029092015490919083565b604080519384526020840192909252908201526060016103db565b34801561098657600080fd5b506104676126e5565b34801561099b57600080fd5b506104676109aa366004614acd565b61281f565b3480156109bb57600080fd5b506103fa612847565b3480156109d057600080fd5b506103fa612890565b6104676109e7366004614acd565b6128d5565b3480156109f857600080fd5b5060655461042f906001600160801b031681565b348015610a1857600080fd5b506103fa610a2736600461528d565b6129d0565b348015610a3857600080fd5b506103fa612a33565b348015610a4d57600080fd5b50610467610a5c366004615458565b612a3f565b348015610a6d57600080fd5b50610467610a7c366004615482565b612ad8565b348015610a8d57600080fd5b506108d8612b6a565b348015610aa257600080fd5b50610467612c39565b348015610ab757600080fd5b50610489610ac6366004614dc4565b6069602052600090815260409020546001600160a01b031681565b348015610aed57600080fd5b506103fa610afc36600461528d565b612cc0565b348015610b0d57600080fd5b506103fa607a5481565b348015610b2357600080fd5b50607654610489906001600160a01b031681565b348015610b4357600080fd5b50607454610489906001600160a01b031681565b348015610b6357600080fd5b506103fa60775481565b348015610b7957600080fd5b50610467610b8836600461528d565b612ec7565b348015610b9957600080fd5b50610467610ba83660046154ab565b612eef565b348015610bb957600080fd5b50610628610bc836600461541e565b612f1e565b348015610bd957600080fd5b50606754610489906001600160a01b031681565b348015610bf957600080fd5b506103fa606c5481565b348015610c0f57600080fd5b50610489610c1e366004614acd565b612f29565b348015610c2f57600080fd5b50610c7d610c3e36600461552b565b60009182526071602090815260408084206001600160a01b039093168452600e90920190529020805460019091015460ff808316936101009093041691565b60408051931515845260ff9092166020840152908201526060016103db565b348015610ca857600080fd5b50610467610cb7366004614acd565b612f81565b348015610cc857600080fd5b50610467610cd7366004614acd565b612fa9565b348015610ce857600080fd5b5061095f610cf736600461554e565b61ffff16600090815260706020908152604080832093835292905220805460018201546002909201549092565b348015610d3057600080fd5b50606654610d4b90600160a01b90046001600160601b031681565b6040516001600160601b0390911681526020016103db565b348015610d6f57600080fd5b50610d78612fd1565b6040516103db9190615571565b348015610d9157600080fd5b506103fa60785481565b610467610da9366004614acd565b613071565b607c546001600160a01b03163314610e235760405162461bcd60e51b815260206004820152602d60248201527f4d756c7469636861696e476f7665726e6f723a206f6e6c7920627265616b206760448201526c3630b9b99033bab0b93234b0b760991b60648201526084015b60405180910390fd5b607c54604051600080516020615d3a83398151915291610e51916001600160a01b03909116906000906155b9565b60405180910390a1607c80546001600160a01b0319169055828114610ec35760405162461bcd60e51b815260206004820152602260248201527f4d756c7469636861696e476f7665726e6f723a206172697479206d69736d61746044820152610c6d60f31b6064820152608401610e1a565b82610f105760405162461bcd60e51b815260206004820152601f60248201527f4d756c7469636861696e476f7665726e6f723a20656d707479206172726179006044820152606401610e1a565b60005b81811015611067576072838383818110610f2f57610f2f6155d3565b9050602002810190610f4191906155e9565b604051610f4f92919061562f565b9081526040519081900360200190205460ff16610fb15760405162461bcd60e51b815260206004820152602c6024820152600080516020615e2283398151915260448201526b081dda1a5d195b1a5cdd195960a21b6064820152608401610e1a565b61105e838383818110610fc657610fc66155d3565b9050602002810190610fd891906155e9565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516060810190915260348082529092509050615cc06020830139878785818110611039576110396155d3565b905060200201602081019061104e919061528d565b6001600160a01b03169190613339565b50600101610f13565b50607c546001600160a01b0316156110db5760405162461bcd60e51b815260206004820152603160248201527f4d756c7469636861696e476f7665726e6f723a20627265616b20676c6173732060448201527019dd585c991a585b881b9bdd081b9d5b1b607a1b6064820152608401610e1a565b7fd2890cfc60e8b0f52b99dc2d17dca96f464cd183f75c665c63c98c9ed267913b3385858585604051611112959493929190615668565b60405180910390a150505050565b60745460405163782d6fe160e01b815260009182916001600160a01b039091169063782d6fe1906111579088908790600401615755565b602060405180830381865afa158015611174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611198919061576e565b60765460405163782d6fe160e01b81529192506000916001600160a01b039091169063782d6fe1906111d09089908890600401615755565b602060405180830381865afa1580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611211919061576e565b607354604051630748d63560e31b81529192506000916001600160a01b0390911690633a46b1a890611249908a908a90600401615755565b602060405180830381865afa158015611266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128a919061576e565b6075546076549192506000916001600160a01b039091169063782d6fe1908a90600160a01b900460ff166112be57886112c0565b895b6040518363ffffffff1660e01b81526004016112dd929190615755565b602060405180830381865afa1580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061576e565b9050838361132c838561579d565b611336919061579d565b611340919061579d565b98975050505050505050565b33301461136b5760405162461bcd60e51b8152600401610e1a906157b0565b61137481613348565b50565b3330146113965760405162461bcd60e51b8152600401610e1a906157b0565b611374816133a4565b6000806113ab836114ac565b905060008160058111156113c1576113c1614e82565b14806113de575060018160058111156113dc576113dc614e82565b145b9392505050565b61ffff82166000908152606960205260409020546001600160a01b038281169116145b92915050565b60675460665460405163c23ee3c360e01b815261ffff84166004820152600060248201819052600160a01b9092046001600160601b0316604482015290916001600160a01b03169063c23ee3c3906064016040805180830381865afa925050508015611497575060408051601f3d908101601f19168201909252611494918101906157f1565b60015b6114a357506000919050565b5090505b919050565b600081606c54101580156114c05750600082115b61151c5760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642070726f706044820152661bdcd85b081a5960ca1b6064820152608401610e1a565b6000828152607160205260409020600d81015460ff16156115405750600292915050565b806006015442116115545750600092915050565b806007015442116115685750600192915050565b80600a01548160090154111580611584575060795481600c0154105b156115925750600392915050565b600d810154610100900460ff16156115ad5750600592915050565b50600492915050565b50919050565b6115c4613444565b6066546001600160a01b031633146115ee5760405162461bcd60e51b8152600401610e1a90615815565b6115f661348f565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516116259190614b9c565b60405180910390a1565b6000818152607160205260409020546001600160a01b03163314806116755750607a54600082815260716020526040902054611673906001600160a01b0316612cc0565b105b6116d15760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20756e617574686f72697a65646044820152660818d85b98d95b60ca1b6064820152608401610e1a565b60006116dc826114ac565b905060008160058111156116f2576116f2614e82565b1461175d5760405162461bcd60e51b815260206004820152603560248201527f4d756c7469636861696e476f7665726e6f723a2063616e6e6f742063616e63656044820152741b081b9bdb881858dd1a5d99481c1c9bdc1bdcd85b605a1b6064820152608401610e1a565b6000828152607160205260409020600d8101805460ff191660011790556117826134db565b604051838152600080516020615da1833981519152906020015b60405180910390a1505050565b600054610100900460ff16158080156117c95750600054600160ff909116105b806117ea57506117d830613648565b1580156117ea575060005460ff166001145b61184d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e1a565b6000805460ff191660011790558015611870576000805461ff0019166101001790555b6020850151607380546001600160a01b039283166001600160a01b03199182161790915586516074805491841691831691909117905560408701516075805491841691831691909117905560608701516076805491909316911617905560808501516118db90613657565b6118e88560a0015161371f565b6118f58560c001516137d2565b6119028560e001516133a4565b611910856101000151613876565b61191e856101600151613928565b611926613969565b611934856101200151613998565b6119428561014001516139f9565b611950856101800151613a51565b61195984613348565b61196562061a80613ad8565b60005b828110156119a65761199e848483818110611985576119856155d3565b905060200281019061199791906155e9565b6001613b3c565b600101611968565b5080156119ee576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b3415611a435760405162461bcd60e51b815260206004820181905260248201527f576f726d686f6c654272696467653a206e6f2076616c756520616c6c6f7765646044820152606401610e1a565b6067546001600160a01b03163314611aa95760405162461bcd60e51b8152602060048201526024808201527f576f726d686f6c654272696467653a206f6e6c792072656c6179657220616c6c6044820152631bddd95960e21b6064820152608401610e1a565b611ab38284612f1e565b611b0a5760405162461bcd60e51b815260206004820152602260248201527f576f726d686f6c654272696467653a2073656e646572206e6f74207472757374604482015261195960f21b6064820152608401610e1a565b60008181526068602052604090205460ff1615611b7b5760405162461bcd60e51b815260206004820152602960248201527f576f726d686f6c654272696467653a206d65737361676520616c7265616479206044820152681c1c9bd8d95cdcd95960ba1b6064820152608401610e1a565b6000818152606860205260409020805460ff191660011790556119ee8286613ca9565b6065546001600160801b0316151590565b611bb7613f54565b6000611bc2836114ac565b6005811115611bd357611bd3614e82565b14611c1e5760405162461bcd60e51b81526020600482015260276024820152600080516020615ca08339815191526044820152662061637469766560c81b6064820152608401610e1a565b600260ff82161115611c6f5760405162461bcd60e51b81526020600482015260266024820152600080516020615d5a8339815191526044820152652076616c756560d01b6064820152608401610e1a565b6000828152607160209081526040808320338452600e8101909252909120805460ff1615611cef5760405162461bcd60e51b815260206004820152602760248201527f4d756c7469636861696e476f7665726e6f723a20766f74657220616c726561646044820152661e481d9bdd195960ca1b6064820152608401610e1a565b6000611d043384600401548560080154611120565b905080600003611d655760405162461bcd60e51b815260206004820152602660248201527f4d756c7469636861696e476f7665726e6f723a20766f74657220686173206e6f60448201526520766f74657360d01b6064820152608401610e1a565b60ff8416611d8c5780836009016000828254611d81919061579d565b90915550611dd29050565b60001960ff851601611dac578083600a016000828254611d81919061579d565b60011960ff851601611dd2578083600b016000828254611dcc919061579d565b90915550505b8083600c016000828254611de6919061579d565b9091555050815460ff8516610100810261ffff1990921691909117600190811784558301829055604080513381526020810188905290810191909152606081018290527f2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d29906080016119e5565b333014611e725760405162461bcd60e51b8152600401610e1a906157b0565b61137481613657565b6065546000906001600160801b031615611ebf57606554611eae906001600160801b03600160801b820481169116615863565b6001600160801b0316421115905090565b60005b905090565b606080606060716000858152602001908152602001600020600101805480602002602001604051908101604052809291908181526020018280548015611f3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f18575b5050505050925060716000858152602001908152602001600020600201805480602002602001604051908101604052809291908181526020018280548015611f9d57602002820191906000526020600020905b815481526020019060010190808311611f89575b505050600087815260716020908152604080832060030180548251818502810185019093528083529698509095909450925084015b8282101561207e578382906000526020600020018054611ff190615883565b80601f016020809104026020016040519081016040528092919081815260200182805461201d90615883565b801561206a5780601f1061203f5761010080835404028352916020019161206a565b820191906000526020600020905b81548152906001019060200180831161204d57829003601f168201915b505050505081526020019060010190611fd2565b5050505090509193909250565b60606000612098836129d0565b6001600160401b038111156120af576120af614bfa565b6040519080825280602002602001820160405280156120d8578160200160208202803683370190505b506001600160a01b0384166000908152606f60205260408120919250906120fe90613f9c565b90506000805b825181101561217a5761212f838281518110612122576121226155d3565b602002602001015161139f565b1561217257828181518110612146576121466155d3565b6020026020010151848381518110612160576121606155d3565b60209081029190910101526001909101905b600101612104565b5091949350505050565b3330146121a35760405162461bcd60e51b8152600401610e1a906157b0565b61137481613fa9565b60006121b6613f54565b607a546121d3336121c86001426158b7565b6104d16001436158b7565b10156122455760405162461bcd60e51b815260206004820152603b60248201527f4d756c7469636861696e476f7665726e6f723a2070726f706f73657220766f7460448201527a195cc818995b1bddc81c1c9bdc1bdcd85b081d1a1c995cda1bdb19602a1b6064820152608401610e1a565b83518551148015612257575082518551145b6122cb576040805162461bcd60e51b81526020600482015260248101919091527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c2066756e60448201527f6374696f6e20696e666f726d6174696f6e206172697479206d69736d617463686064820152608401610e1a565b845160000361232d5760405162461bcd60e51b815260206004820152602860248201527f4d756c7469636861696e476f7665726e6f723a206d7573742070726f7669646560448201526720616374696f6e7360c01b6064820152608401610e1a565b60008251116123975760405162461bcd60e51b815260206004820152603060248201527f4d756c7469636861696e476f7665726e6f723a206465736372697074696f6e2060448201526f63616e206e6f7420626520656d70747960801b6064820152608401610e1a565b61239f6134db565b60006123aa336129d0565b9050607854811061241f5760405162461bcd60e51b815260206004820152603960248201527f4d756c7469636861696e476f7665726e6f723a20746f6f206d616e79206c69766044820152783290383937b837b9b0b639903337b9103a3434b9903ab9b2b960391b6064820152608401610e1a565b506000805b855181101561245c5785818151811061243f5761243f6155d3565b602002602001015182612452919061579d565b9150600101612424565b5050606c805490600061246e836158ca565b9091555050606c5460009081526071602052604081209060609042906124956001836158b7565b90506000607b54836124a7919061579d565b90506000607754826124b9919061579d565b86546001600160a01b031916331787558b519091506124e190600188019060208e0190614973565b5089516124f790600288019060208d01906149d4565b50885161250d90600388019060208c0190614a0f565b5060048601839055600586018490556125276001436158b7565b60088701556006860182905560078601819055606c54604051612555919085908790869086906020016158e3565b60405160208183030381529060405294507f95f03e437e6d5037418f12bef80fc7e0a5f27754c078a1d5d3f62d39bac44e50606c54338d8d8d89888f6040516125a5989796959493929190615906565b60405180910390a15050606c54336000908152606f602052604090206125cd9350915061407a565b61263d5760405162461bcd60e51b815260206004820152603b60248201527f4d756c7469636861696e476f7665726e6f723a20757365722063616e6e6f742060448201527a616464207468652073616d652070726f706f73616c20747769636560281b6064820152608401610e1a565b606c5461264c90606d9061407a565b6126cc5760405162461bcd60e51b8152602060048201526044602482018190527f4d756c7469636861696e476f7665726e6f723a2063616e6e6f74206164642074908201527f68652073616d652070726f706f73616c20747769636520746f20676c6f62616c606482015263081cd95d60e21b608482015260a401610e1a565b6126d581614086565b606c54925050505b949350505050565b6126ed614323565b60006126f9606d613f9c565b905060005b815181101561281657600061272b83838151811061271e5761271e6155d3565b60200260200101516114ac565b9050600581600581111561274157612741614e82565b141580156127615750600381600581111561275e5761275e614e82565b14155b801561277f5750600281600581111561277c5761277c614e82565b14155b1561280d5760016071600085858151811061279c5761279c6155d3565b60200260200101518152602001908152602001600020600d0160006101000a81548160ff021916908315150217905550600080516020615da18339815191528383815181106127ed576127ed6155d3565b602002602001015160405161280491815260200190565b60405180910390a15b506001016126fe565b506113746134db565b33301461283e5760405162461bcd60e51b8152600401610e1a906157b0565b611374816137d2565b600080612854606d613f9c565b905060005b815181101561288b57612877828281518110612122576121226155d3565b15612883576001909201915b600101612859565b505090565b6000808061289e606a6143f8565b905060005b818110156128cd576128b9610673606a83614402565b6128c3908461579d565b92506001016128a3565b509092915050565b60006128e0826114ac565b905060008160058111156128f6576128f6614e82565b1461294d5760405162461bcd60e51b815260206004820152602160248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c696420737461746044820152606560f81b6064820152608401610e1a565b600082815260716020908152604080832060048101546005820154600683015460078401549451939695612985958a959091016158e3565b604051602081830303815290604052905061299f81614086565b7f99544206c0c7eeb094511c6325a8ded7774d05b33e180bb186e006adb40c1bf88482604051611112929190615988565b6001600160a01b0381166000908152606f6020526040812081906129f390613f9c565b90506000805b8251811015612a2b57612a17838281518110612122576121226155d3565b15612a23576001909101905b6001016129f9565b509392505050565b6000611ec2606a6143f8565b333014612a5e5760405162461bcd60e51b8152600401610e1a906157b0565b607580546001600160a01b0319166001600160a01b0384169081179091556076805460ff60a01b1916600160a01b841515908102919091179091556040805192835260208301919091527fcb81550299f8062d66ed81a8c8cb01b10da7835931b490dedff5e781931a82a291015b60405180910390a15050565b333014612af75760405162461bcd60e51b8152600401610e1a906157b0565b62061a806001600160601b0382161015612b615760405162461bcd60e51b815260206004820152602560248201527f4d756c7469636861696e476f7665726e6f723a20676173206c696d697420746f6044820152646f206c6f7760d81b6064820152608401610e1a565b61137481613ad8565b60606000612b76612847565b90506000816001600160401b03811115612b9257612b92614bfa565b604051908082528060200260200182016040528015612bbb578160200160208202803683370190505b5090506000612bca606d613f9c565b90506000805b825181101561217a57612bee838281518110612122576121226155d3565b15612c3157828181518110612c0557612c056155d3565b6020026020010151848381518110612c1f57612c1f6155d3565b60209081029190910101526001909101905b600101612bd0565b612c41613f54565b612c49611b9e565b612cb65760405162461bcd60e51b815260206004820152603860248201527f436f6e666967757261626c655061757365477561726469616e3a20646964206e6044820152776f742070617573652c20736f2063616e6e6f74206b69636b60401b6064820152608401610e1a565b612cbe61348f565b565b60745460405163b4b5ea5760e01b815260009182916001600160a01b039091169063b4b5ea5790612cf5908690600401614b9c565b602060405180830381865afa158015612d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d36919061576e565b60755460405163b4b5ea5760e01b81529192506000916001600160a01b039091169063b4b5ea5790612d6c908790600401614b9c565b602060405180830381865afa158015612d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dad919061576e565b60765460405163b4b5ea5760e01b81529192506000916001600160a01b039091169063b4b5ea5790612de3908890600401614b9c565b602060405180830381865afa158015612e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e24919061576e565b6073546040516309ab24eb60e41b81529192506000916001600160a01b0390911690639ab24eb090612e5a908990600401614b9c565b602060405180830381865afa158015612e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9b919061576e565b90508382612ea9858461579d565b612eb3919061579d565b612ebd919061579d565b9695505050505050565b333014612ee65760405162461bcd60e51b8152600401610e1a906157b0565b61137481613928565b333014612f0e5760405162461bcd60e51b8152600401610e1a906157b0565b612f19838383613b3c565b505050565b60006113de83610653845b600060a082901c15612f7d5760405162461bcd60e51b815260206004820152601f60248201527f576f726d686f6c654272696467653a20696e76616c69642061646472657373006044820152606401610e1a565b5090565b333014612fa05760405162461bcd60e51b8152600401610e1a906157b0565b6113748161371f565b333014612fc85760405162461bcd60e51b8152600401610e1a906157b0565b61137481613876565b60606000612fdf606a6143f8565b90506000816001600160401b03811115612ffb57612ffb614bfa565b604051908082528060200260200182016040528015613024578160200160208202803683370190505b50905060005b8281101561306a5761303d606a82614402565b82828151811061304f5761304f6155d3565b61ffff9092166020928302919091019091015260010161302a565b5092915050565b613079613f54565b6004613084826114ac565b600581111561309557613095614e82565b146131165760405162461bcd60e51b8152602060048201526044602482018190527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c2063616e908201527f206f6e6c792062652065786563757465642069662069742069732053756363656064820152631959195960e21b608482015260a401610e1a565b6000818152607160205260408120815b600182015481101561316757816002018181548110613147576131476155d3565b90600052602060002001548361315d919061579d565b9250600101613126565b503482146131c15760405162461bcd60e51b815260206004820152602160248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642076616c756044820152606560f81b6064820152608401610e1a565b600d8101805461ff0019166101001790556131da6134db565b60005b6001820154811015613308576132ff826003018281548110613201576132016155d3565b90600052602060002001805461321690615883565b80601f016020809104026020016040519081016040528092919081815260200182805461324290615883565b801561328f5780601f106132645761010080835404028352916020019161328f565b820191906000526020600020905b81548152906001019060200180831161327257829003601f168201915b50505050508360020183815481106132a9576132a96155d3565b9060005260206000200154604051806060016040528060278152602001615d7a602791398560010185815481106132e2576132e26155d3565b6000918252602090912001546001600160a01b031692919061440e565b506001016131dd565b506040518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200161179c565b60606126dd848460008561440e565b60005b81518110156133a057613398828281518110613369576133696155d3565b602002602001015160000151838381518110613387576133876155d3565b6020026020010151602001516144e9565b60010161334b565b5050565b676765c793fa10079d601a1b81111561340a5760405162461bcd60e51b815260206004820152602260248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c69642071756f72604482015261756d60f01b6064820152608401610e1a565b60798054908290556040517f881e29202a36aa27b2e7dbd1086b0679e9212ac38029ba9959623b58d66a56b290612acc90839085906159a1565b61344c611e7b565b612cbe5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610e1a565b606680546001600160a01b031981169091556001600160a01b03166134b46000614658565b6040516000906001600160a01b03831690600080516020615c80833981519152908390a350565b60006134e7606d613f9c565b905060005b81518110156133a057600061350c83838151811061271e5761271e6155d3565b9050600381600581111561352257613522614e82565b148061353f5750600281600581111561353d5761353d614e82565b145b8061355b5750600581600581111561355957613559614e82565b145b1561363f57613602606f60006071600087878151811061357d5761357d6155d3565b6020026020010151815260200190815260200160002060000160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000208484815181106135dc576135dc6155d3565b6020026020010151604051806080016040528060468152602001615cf4604691396146a2565b61363f606d848481518110613619576136196155d3565b6020026020010151604051806080016040528060418152602001615de1604191396146a2565b506001016134ec565b6001600160a01b03163b151590565b6954b40b1f852bda000000811015801561367c57506a295be96e640669720000008111155b6136e55760405162461bcd60e51b815260206004820152603460248201527f4d756c7469636861696e476f7665726e6f723a2070726f706f73616c207468726044820152736573686f6c64206f7574206f6620626f756e647360601b6064820152608401610e1a565b607a8054908290556040517f9b772ef27711c872f217a0c52a72ba00d7552f2d6c3b3d0f0593fc2549359df390612acc90839085906159a1565b610e1081101580156137345750621275008111155b6137985760405162461bcd60e51b815260206004820152602f60248201527f4d756c7469636861696e476f7665726e6f723a20766f74696e6720706572696f60448201526e64206f7574206f6620626f756e647360881b6064820152608401610e1a565b607b8054908290556040517f0157f874643e34dea2d71607bde6378f09880b59546f9e2386608eb7154b897590612acc90839085906159a1565b610e1081101580156137e75750621275008111155b61383c5760405162461bcd60e51b81526020600482015260326024820152600080516020615d5a8339815191526044820152710818dbdb1b1958dd1a5bdb881c195c9a5bd960721b6064820152608401610e1a565b60778054908290556040517fca438bea0881e082cea91d9c56e46b52e389fad3ae6b8aaa62463b14c72f65e090612acc90839085906159a1565b8015801590613886575060148111155b6138ee5760405162461bcd60e51b815260206004820152603360248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c6964206d61782060448201527275736572206c6976652070726f706f73616c7360681b6064820152608401610e1a565b60788054908290556040517f89dbd13c686bb51f9357f13e1cefc3c495ddeb2db0989036a9685904877aba8b90612acc90839085906159a1565b607c80546001600160a01b038381166001600160a01b0319831617909255604051911690600080516020615d3a83398151915290612acc90839085906155b9565b600054610100900460ff166139905760405162461bcd60e51b8152600401610e1a906159af565b612cbe6146cb565b606580546001600160801b03838116600160801b908102828416179384905560408051938290048316808552919094049091166020830152917ff6e1f1afec511d8b8e9a65bb53c947ac99ea4211fb22e0d6a0e331d55d7345f89101612acc565b606680546001600160a01b0319166001600160a01b03831617905580613a1f6000614658565b816001600160a01b0316816001600160a01b0316600080516020615c8083398151915260405160405180910390a35050565b6067546001600160a01b031615613ab65760405162461bcd60e51b815260206004820152602360248201527f576f726d686f6c654272696467653a2072656c6179657220616c7265616479206044820152621cd95d60ea1b6064820152608401610e1a565b606780546001600160a01b0319166001600160a01b0392909216919091179055565b606680546001600160601b03838116600160a01b8181026001600160a01b0385161790945560408051949093049091168084526020840191909152917f5ccd21ad0b9c241d63daee4d43a957379ac1bef51da6554ef0d581c5ad09f5bb9101612acc565b801515600103613bd35760728383604051613b5892919061562f565b9081526040519081900360200190205460ff1615613bce5760405162461bcd60e51b815260206004820152602d60248201527f4d756c7469636861696e476f7665726e6f723a2063616c6c6461746120616c7260448201526c1958591e48185c1c1c9bdd9959609a1b6064820152608401610e1a565b613c44565b60728383604051613be592919061562f565b9081526040519081900360200190205460ff16613c445760405162461bcd60e51b81526020600482015260296024820152600080516020615e2283398151915260448201526808185c1c1c9bdd995960ba1b6064820152608401610e1a565b8060728484604051613c5792919061562f565b908152604051908190036020018120805492151560ff19909316929092179091557f140cf3352e7f796348bea7183809e6a7b907e826b581091dab21cbaf6c24b03e9061179c908590859085906159fa565b8051608014613d0d5760405162461bcd60e51b815260206004820152602a60248201527f4d756c7469636861696e476f7665726e6f723a20696e76616c6964207061796c6044820152690dec2c840d8cadccee8d60b31b6064820152608401610e1a565b60008060008084806020019051810190613d279190615a20565b61ffff8a16600090815260706020908152604080832087845290915290208054949850929650909450925090158015613d6257506001810154155b8015613d7057506002810154155b613dcf5760405162461bcd60e51b815260206004820152602a60248201527f4d756c7469636861696e476f7665726e6f723a20766f746520616c72656164796044820152690818dbdb1b1958dd195960b21b6064820152608401610e1a565b6001613dda866114ac565b6005811115613deb57613deb614e82565b14613e5b5760405162461bcd60e51b81526020600482015260466024820152600080516020615ca083398151915260448201527f20696e2063726f737320636861696e20766f746520636f6c6c656374696f6e206064820152651c195c9a5bd960d21b608482015260a401610e1a565b8381556001810183905560028101829055600085815260716020526040812060098101805491928792613e8f90849061579d565b925050819055508381600a016000828254613eaa919061579d565b925050819055508281600b016000828254613ec5919061579d565b90915550839050613ed6858761579d565b613ee0919061579d565b81600c016000828254613ef3919061579d565b90915550506040805187815261ffff8a16602082015290810186905260608101859052608081018490527fa6a83478dd60ce81218bc436542c31ae5bfdf856146db87dae8c5fe7ec69d82d9060a00160405180910390a15050505050505050565b613f5c611e7b565b15612cbe5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610e1a565b606060006113de836146fe565b60005b81518110156133a0576000828281518110613fc957613fc96155d3565b6020908102919091018101515161ffff811660008181526069909352604090922080546001600160a01b0319169055915061400690606a9061475a565b6140525760405162461bcd60e51b815260206004820152601f60248201527f576f726d686f6c654272696467653a20636861696e206e6f74206164646564006044820152606401610e1a565b60405160009061ffff831690600080516020615e42833981519152908390a350600101613fac565b60006113de8383614766565b3461408f612890565b146140f25760405162461bcd60e51b815260206004820152602d60248201527f576f726d686f6c654272696467653a20746f74616c20636f7374206e6f74206560448201526c7175616c20746f2071756f746560981b6064820152608401610e1a565b60006140fe606a6143f8565b90506000805b8281101561427e576000614119606a83614402565b905060006141268261140e565b60675461ffff84166000908152606960205260408082205460665491516347f66e8160e11b81529495506001600160a01b0393841694638fecdd0294879461418a948a94909216928e926001600160601b03600160a01b9091041690600401615a56565b60206040518083038185885af1935050505080156141c5575060408051601f3d908101601f191682019092526141c291810190615aa6565b60015b614215576141d3818561579d565b93507fe943c14b34c02fdf811683cd7901c2eeb54a7b8a97b055debcec6eb66b800a7482878360405161420893929190615acf565b60405180910390a1614274565b5061ffff8216600090815260696020526040908190205490517f47cab59001e84a2b56fab55afd46305539b786ad54299920d86f20d524a2ba449161426b91859185916001600160a01b03909116908b90615afc565b60405180910390a15b5050600101614104565b508015612f1957604051600090339083908381818185875af1925050503d80600081146142c7576040519150601f19603f3d011682016040523d82523d6000602084013e6142cc565b606091505b505090508061431d5760405162461bcd60e51b815260206004820152601d60248201527f576f726d686f6c654272696467653a20726566756e64206661696c65640000006044820152606401610e1a565b50505050565b61432b613f54565b6066546001600160a01b031633146143555760405162461bcd60e51b8152600401610e1a90615815565b61435d611b9e565b156143c05760405162461bcd60e51b815260206004820152602d60248201527f436f6e666967757261626c655061757365477561726469616e3a20706175736560448201526c08185b1c9958591e481d5cd959609a1b6064820152608401610e1a565b6143c942614658565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516116259190614b9c565b6000611408825490565b60006113de83836147b5565b60608247101561446f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e1a565b600080866001600160a01b0316858760405161448b9190615b2d565b60006040518083038185875af1925050503d80600081146144c8576040519150601f19603f3d011682016040523d82523d6000602084013e6144cd565b606091505b50915091506144de878383876147df565b979650505050505050565b61ffff82166000908152606960205260409020546001600160a01b03161561454d5760405162461bcd60e51b81526020600482015260236024820152600080516020615dc183398151915260448201526219195960ea1b6064820152608401610e1a565b6001600160a01b0381166145b25760405162461bcd60e51b815260206004820152602660248201527f576f726d686f6c654272696467653a20696e76616c696420746172676574206160448201526564647265737360d01b6064820152608401610e1a565b6145c1606a61ffff841661407a565b61460e5760405162461bcd60e51b815260206004820152602a6024820152600080516020615dc1833981519152604482015269191959081d1bc81cd95d60b21b6064820152608401610e1a565b61ffff821660008181526069602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051909291600080516020615e4283398151915291a35050565b606580546001600160801b0319166001600160801b0383169081179091556040517ff9a602433e136b05c194852c92724c3069fe46ca433ff9ec750396286472012990600090a250565b6146ac838361475a565b819061431d5760405162461bcd60e51b8152600401610e1a9190615b49565b600054610100900460ff166146f25760405162461bcd60e51b8152600401610e1a906159af565b6033805460ff19169055565b60608160000180548060200260200160405190810160405280929190818152602001828054801561474e57602002820191906000526020600020905b81548152602001906001019080831161473a575b50505050509050919050565b60006113de8383614856565b60008181526001830160205260408120546147ad57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611408565b506000611408565b60008260000182815481106147cc576147cc6155d3565b9060005260206000200154905092915050565b6060831561484c578251600003614845576147f985613648565b6148455760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e1a565b50816126dd565b6126dd8383614949565b6000818152600183016020526040812054801561493f57600061487a6001836158b7565b855490915060009061488e906001906158b7565b90508181146148f35760008660000182815481106148ae576148ae6155d3565b90600052602060002001549050808760000184815481106148d1576148d16155d3565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061490457614904615b5c565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611408565b6000915050611408565b8151156149595781518083602001fd5b8060405162461bcd60e51b8152600401610e1a9190615b49565b8280548282559060005260206000209081019282156149c8579160200282015b828111156149c857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614993565b50612f7d929150614a61565b8280548282559060005260206000209081019282156149c8579160200282015b828111156149c85782518255916020019190600101906149f4565b828054828255906000526020600020908101928215614a55579160200282015b82811115614a555782518290614a459082615bc0565b5091602001919060010190614a2f565b50612f7d929150614a76565b5b80821115612f7d5760008155600101614a62565b80821115612f7d576000614a8a8282614a93565b50600101614a76565b508054614a9f90615883565b6000825580601f10614aaf575050565b601f0160209004906000526020600020908101906113749190614a61565b600060208284031215614adf57600080fd5b5035919050565b60008083601f840112614af857600080fd5b5081356001600160401b03811115614b0f57600080fd5b6020830191508360208260051b8501011115614b2a57600080fd5b9250929050565b60008060008060408587031215614b4757600080fd5b84356001600160401b0380821115614b5e57600080fd5b614b6a88838901614ae6565b90965094506020870135915080821115614b8357600080fd5b50614b9087828801614ae6565b95989497509550505050565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146114a757600080fd5b600080600060608486031215614bdc57600080fd5b614be584614bb0565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715614c3257614c32614bfa565b60405290565b6040516101a081016001600160401b0381118282101715614c3257614c32614bfa565b604051601f8201601f191681016001600160401b0381118282101715614c8357614c83614bfa565b604052919050565b60006001600160401b03821115614ca457614ca4614bfa565b5060051b60200190565b803561ffff811681146114a757600080fd5b600082601f830112614cd157600080fd5b81356020614ce6614ce183614c8b565b614c5b565b82815260069290921b84018101918181019086841115614d0557600080fd5b8286015b84811015614d525760408189031215614d225760008081fd5b614d2a614c10565b614d3382614cae565b8152614d40858301614bb0565b81860152835291830191604001614d09565b509695505050505050565b600060208284031215614d6f57600080fd5b81356001600160401b03811115614d8557600080fd5b6126dd84828501614cc0565b60008060408385031215614da457600080fd5b614dad83614cae565b9150614dbb60208401614bb0565b90509250929050565b600060208284031215614dd657600080fd5b6113de82614cae565b600082601f830112614df057600080fd5b81356001600160401b03811115614e0957614e09614bfa565b614e1c601f8201601f1916602001614c5b565b818152846020838601011115614e3157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215614e6057600080fd5b81356001600160401b03811115614e7657600080fd5b6126dd84828501614ddf565b634e487b7160e01b600052602160045260246000fd5b6020810160068310614eba57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160801b03811681146114a757600080fd5b6000806000808486036101e0811215614eef57600080fd5b6101a080821215614eff57600080fd5b614f07614c38565b9150614f1287614bb0565b8252614f2060208801614bb0565b6020830152614f3160408801614bb0565b6040830152614f4260608801614bb0565b60608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e0830152610100808801358184015250610120614f89818901614ec0565b90830152610140614f9b888201614bb0565b90830152610160614fad888201614bb0565b90830152610180614fbf888201614bb0565b908301529094508501356001600160401b0380821115614fde57600080fd5b614fea88838901614cc0565b94506101c0870135915080821115614b8357600080fd5b600082601f83011261501257600080fd5b81356020615022614ce183614c8b565b82815260059290921b8401810191818101908684111561504157600080fd5b8286015b84811015614d525780356001600160401b038111156150645760008081fd5b6150728986838b0101614ddf565b845250918301918301615045565b600080600080600060a0868803121561509857600080fd5b85356001600160401b03808211156150af57600080fd5b6150bb89838a01614ddf565b965060208801359150808211156150d157600080fd5b506150de88828901615001565b945050604086013592506150f460608701614cae565b949793965091946080013592915050565b6000806040838503121561511857600080fd5b82359150602083013560ff8116811461513057600080fd5b809150509250929050565b600081518084526020808501945080840160005b838110156151745781516001600160a01b03168752958201959082019060010161514f565b509495945050505050565b600081518084526020808501945080840160005b8381101561517457815187529582019590820190600101615193565b60005b838110156151ca5781810151838201526020016151b2565b50506000910152565b600081518084526151eb8160208601602086016151af565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156152475782840389526152358483516151d3565b9885019893509084019060010161521d565b5091979650505050505050565b606081526000615267606083018661513b565b8281036020840152615279818661517f565b90508281036040840152612ebd81856151ff565b60006020828403121561529f57600080fd5b6113de82614bb0565b6020815260006113de602083018461517f565b600082601f8301126152cc57600080fd5b813560206152dc614ce183614c8b565b82815260059290921b840181019181810190868411156152fb57600080fd5b8286015b84811015614d5257803583529183019183016152ff565b6000806000806080858703121561532c57600080fd5b84356001600160401b038082111561534357600080fd5b818701915087601f83011261535757600080fd5b81356020615367614ce183614c8b565b82815260059290921b8401810191818101908b84111561538657600080fd5b948201945b838610156153ab5761539c86614bb0565b8252948201949082019061538b565b985050880135925050808211156153c157600080fd5b6153cd888389016152bb565b945060408701359150808211156153e357600080fd5b6153ef88838901615001565b9350606087013591508082111561540557600080fd5b5061541287828801614ddf565b91505092959194509250565b6000806040838503121561543157600080fd5b61543a83614cae565b946020939093013593505050565b803580151581146114a757600080fd5b6000806040838503121561546b57600080fd5b61547483614bb0565b9150614dbb60208401615448565b60006020828403121561549457600080fd5b81356001600160601b03811681146113de57600080fd5b6000806000604084860312156154c057600080fd5b83356001600160401b03808211156154d757600080fd5b818601915086601f8301126154eb57600080fd5b8135818111156154fa57600080fd5b87602082850101111561550c57600080fd5b6020928301955093506155229186019050615448565b90509250925092565b6000806040838503121561553e57600080fd5b82359150614dbb60208401614bb0565b6000806040838503121561556157600080fd5b82359150614dbb60208401614cae565b6020808252825182820181905260009190848201906040850190845b818110156155ad57835161ffff168352928401929184019160010161558d565b50909695505050505050565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261560057600080fd5b8301803591506001600160401b0382111561561a57600080fd5b602001915036819003821315614b2a57600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b898110156156b557836156a286614bb0565b1682529382019390820190600101615690565b5085810360408701528681528181019350600587901b8101820192508760005b8881101561574457828503601f190186528135368b9003601e190181126156fb57600080fd5b8a0184810190356001600160401b0381111561571657600080fd5b80360382131561572557600080fd5b61573087828461563f565b9786019796505050908301906001016156d5565b50929b9a5050505050505050505050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561578057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561140857611408615787565b60208082526021908201527f4d756c7469636861696e476f7665726e6f723a206f6e6c7920676f7665726e6f6040820152603960f91b606082015260800190565b6000806040838503121561580457600080fd5b505080516020909101519092909150565b6020808252602e908201527f436f6e666967757261626c655061757365477561726469616e3a206f6e6c792060408201526d3830bab9b29033bab0b93234b0b760911b606082015260800190565b6001600160801b0381811683821601908082111561306a5761306a615787565b600181811c9082168061589757607f821691505b6020821081036115b657634e487b7160e01b600052602260045260246000fd5b8181038181111561140857611408615787565b6000600182016158dc576158dc615787565b5060010190565b948552602085019390935260408401919091526060830152608082015260a00190565b8881526001600160a01b0388166020820152610100604082018190526000906159318382018a61513b565b90508281036060840152615945818961517f565b9050828103608084015261595981886151ff565b90508560a08401528460c084015282810360e084015261597981856151d3565b9b9a5050505050505050505050565b8281526040602082015260006126dd60408301846151d3565b918252602082015260400190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000615a0e60408301858761563f565b90508215156020830152949350505050565b60008060008060808587031215615a3657600080fd5b505082516020840151604085015160609095015191969095509092509050565b61ffff861681526001600160a01b038516602082015260a060408201819052600090615a84908301866151d3565b6060830194909452506001600160601b03919091166080909101529392505050565b600060208284031215615ab857600080fd5b81516001600160401b03811681146113de57600080fd5b61ffff84168152606060208201526000615aec60608301856151d3565b9050826040830152949350505050565b61ffff8516815283602082015260018060a01b0383166040820152608060608201526000612ebd60808301846151d3565b60008251615b3f8184602087016151af565b9190910192915050565b6020815260006113de60208301846151d3565b634e487b7160e01b600052603160045260246000fd5b601f821115612f1957600081815260208120601f850160051c81016020861015615b995750805b601f850160051c820191505b81811015615bb857828155600101615ba5565b505050505050565b81516001600160401b03811115615bd957615bd9614bfa565b615bed81615be78454615883565b84615b72565b602080601f831160018114615c225760008415615c0a5750858301515b600019600386901b1c1916600185901b178555615bb8565b600085815260208120601f198616915b82811015615c5157888601518255948401946001909101908401615c32565b5085821015615c6f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fecaaa282fb2cbeb3df8763925c47fce27f7d642a513ca61ece90ac2dd6acb5ceb4d756c7469636861696e476f7665726e6f723a2070726f706f73616c206e6f744d756c7469636861696e476f7665726e6f723a20627265616b20676c61737320677561726469616e2063616c6c206661696c65644d756c7469636861696e476f7665726e6f723a20636f756c64206e6f742072656d6f76652070726f706f73616c2066726f6d2075736572206c6976652070726f706f73616c7319be0cefd4235c57b29c828297a3e160306f359677ce5dc07f5b4f546fc29de64d756c7469636861696e476f7665726e6f723a20696e76616c696420766f74654d756c7469636861696e476f7665726e6f723a20657865637574652063616c6c206661696c6564789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c576f726d686f6c654272696467653a20636861696e20616c72656164792061644d756c7469636861696e476f7665726e6f723a20636f756c64206e6f742072656d6f76652070726f706f73616c2066726f6d206c6976652070726f706f73616c734d756c7469636861696e476f7665726e6f723a2063616c6c64617461206e6f7440408703d30ddad046e1af438394d2996712767ef13391ae7d9d21fa9eb63df5a2646970667358221220b84e1ac306954af987fcec9f13db331c9a8e9660dc5d645418eb9a3acf42b18864736f6c63430008130033",
    "sourceMap": "1320:51714:118:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3091:56;;;;;;;;;;-1:-1:-1;3091:56:118;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3091:56:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;662:32:311;;;644:51;;726:2;711:18;;704:34;;;;754:18;;;747:34;;;;812:2;797:18;;790:34;;;;855:3;840:19;;833:35;;;;682:3;884:19;;877:35;;;;943:3;928:19;;921:35;987:3;972:19;;965:35;1031:3;1016:19;;1009:35;1075:3;1060:19;;1053:35;1132:15;1125:23;1119:3;1104:19;;1097:52;1193:15;1186:23;1180:3;1165:19;;1158:52;631:3;616:19;3091:56:118;;;;;;;;6256:36;;;;;;;;;;;;;;;;;;;1367:25:311;;;1355:2;1340:18;6256:36:118;1221:177:311;1175:28:221;;;;;;;;;;-1:-1:-1;1175:28:221;;;;-1:-1:-1;;;1175:28:221;;-1:-1:-1;;;;;1175:28:221;;;;;;-1:-1:-1;;;;;1567:32:311;;;1549:51;;1537:2;1522:18;1175:28:221;1403:203:311;40369:999:118;;;;;;;;;;-1:-1:-1;40369:999:118;;;;;:::i;:::-;;:::i;:::-;;4412:32;;;;;;;;;;-1:-1:-1;4412:32:118;;;;-1:-1:-1;;;;;4412:32:118;;;;;;;;;;:::i;6672:42::-;;;;;;;;;;-1:-1:-1;6672:42:118;;;;-1:-1:-1;;;;;6672:42:118;;;17680:611;;;;;;;;;;-1:-1:-1;17680:611:118;;;;;:::i;:::-;;:::i;36424:184::-;;;;;;;;;;-1:-1:-1;36424:184:118;;;;;:::i;:::-;;:::i;5828:30::-;;;;;;;;;;;;;;;;11758:1003;;;;;;;;;;-1:-1:-1;11758:1003:118;;;;;:::i;:::-;11881:16;12252:21;;;:9;:21;;;;;12295:17;;12346:30;;;;12404:24;;;;12453:22;;;;12524:58;;;;12605:19;;;;12645:17;;;;12687:21;;;;12733;;;;;-1:-1:-1;;;;;12295:17:118;;;;12346:30;;12404:24;;12453:22;;12524:58;;12605:19;;12645:17;;11758:1003;;;;;-1:-1:-1;;;;;6783:32:311;;;6765:51;;6847:2;6832:18;;6825:34;;;;6875:18;;;6868:34;;;;6933:2;6918:18;;6911:34;;;;6976:3;6961:19;;6954:35;;;;6803:3;7005:19;;6998:35;7064:3;7049:19;;7042:35;7108:3;7093:19;;7086:35;7152:3;7137:19;;7130:35;6752:3;6737:19;11758:1003:118;6394:777:311;679:28:222;;;;;;;;;;-1:-1:-1;679:28:222;;;;-1:-1:-1;;;;;679:28:222;;;37305:110:118;;;;;;;;;;-1:-1:-1;37305:110:118;;;;;:::i;:::-;;:::i;18998:273::-;;;;;;;;;;-1:-1:-1;18998:273:118;;;;;:::i;:::-;;:::i;:::-;;;7341:14:311;;7334:22;7316:41;;7304:2;7289:18;18998:273:118;7176:187:311;10766:158:219;;;;;;;;;;-1:-1:-1;10766:158:219;;;;;:::i;:::-;;:::i;8933:821::-;;;;;;;;;;-1:-1:-1;8933:821:219;;;;;:::i;:::-;;:::i;3773:95:118:-;;;;;;;;;;-1:-1:-1;3773:95:118;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21658:1885;;;;;;;;;;-1:-1:-1;21658:1885:118;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2908:367:222:-;;;;;;;;;;;;;:::i;1847:63:219:-;;;;;;;;;;-1:-1:-1;1847:63:219;;;;;:::i;:::-;;;;;;;;;;;;;;;;4176:18:118;;;;;;;;;;-1:-1:-1;4176:18:118;;;;-1:-1:-1;;;;;4176:18:118;;;31566:820;;;;;;;;;;-1:-1:-1;31566:820:118;;;;;:::i;:::-;;:::i;8185:1357::-;;;;;;;;;;-1:-1:-1;8185:1357:118;;;;;:::i;:::-;;:::i;13203:763:219:-;;;;;;:::i;:::-;;:::i;12950:487:118:-;;;;;;;;;;-1:-1:-1;12950:487:118;;;;;:::i;:::-;13067:18;13236:21;;;:9;:21;;;;;13281:19;;;;13321:17;;;;13363:21;;;;13409;;;;;13281:19;;13321:17;;13363:21;13409;12950:487;;;;;13628:25:311;;;13684:2;13669:18;;13662:34;;;;13712:18;;;13705:34;13770:2;13755:18;;13748:34;13615:3;13600:19;12950:487:118;13397:391:311;1160:91:222;;;;;;;;;;;;;:::i;32587:1634:118:-;;;;;;;;;;-1:-1:-1;32587:1634:118;;;;;:::i;:::-;;:::i;36724:168::-;;;;;;;;;;-1:-1:-1;36724:168:118;;;;;:::i;:::-;;:::i;1853:209:221:-;;;;;;;;;;;;;:::i;4686:25:118:-;;;;;;;;;;-1:-1:-1;4686:25:118;;;;-1:-1:-1;;;4686:25:118;;;;;;13554:389;;;;;;;;;;-1:-1:-1;13554:389:118;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;16684:684::-;;;;;;;;;;-1:-1:-1;16684:684:118;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;35990:190::-;;;;;;;;;;-1:-1:-1;35990:190:118;;;;;:::i;:::-;;:::i;25180:4063::-;;;;;;:::i;:::-;;:::i;2907:115::-;;;;;;;;;;-1:-1:-1;2907:115:118;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20073:25:311;;;20129:2;20114:18;;20107:34;;;;20157:18;;;20150:34;20061:2;20046:18;2907:115:118;19871:319:311;41601:1655:118;;;;;;;;;;;;;:::i;37993:220::-;;;;;;;;;;-1:-1:-1;37993:220:118;;;;;:::i;:::-;;:::i;14989:350::-;;;;;;;;;;;;;:::i;9825:361:219:-;;;;;;;;;;;;;:::i;24111:663:118:-;;;;;;:::i;:::-;;:::i;1108:29:221:-;;;;;;;;;;-1:-1:-1;1108:29:221;;;;-1:-1:-1;;;;;1108:29:221;;;16020:477:118;;;;;;;;;;-1:-1:-1;16020:477:118;;;;;:::i;:::-;;:::i;8560:114:219:-;;;;;;;;;;;;;:::i;35062:279:118:-;;;;;;;;;;-1:-1:-1;35062:279:118;;;;;:::i;:::-;;:::i;38697:238::-;;;;;;;;;;-1:-1:-1;38697:238:118;;;;;:::i;:::-;;:::i;14105:721::-;;;;;;;;;;;;;:::i;1544:205:222:-;;;;;;;;;;;;;:::i;2056:62:219:-;;;;;;;;;;-1:-1:-1;2056:62:219;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2056:62:219;;;18464:405:118;;;;;;;;;;-1:-1:-1;18464:405:118;;;;;:::i;:::-;;:::i;6080:41::-;;;;;;;;;;;;;;;;4558:36;;;;;;;;;;-1:-1:-1;4558:36:118;;;;-1:-1:-1;;;;;4558:36:118;;;4287:29;;;;;;;;;;-1:-1:-1;4287:29:118;;;;-1:-1:-1;;;;;4287:29:118;;;5231:54;;;;;;;;;;;;;;;;38337:149;;;;;;;;;;-1:-1:-1;38337:149:118;;;;;:::i;:::-;;:::i;35552:168::-;;;;;;;;;;-1:-1:-1;35552:168:118;;;;;:::i;:::-;;:::i;10387:178:219:-;;;;;;;;;;-1:-1:-1;10387:178:219;;;;;:::i;:::-;;:::i;1414:39::-;;;;;;;;;;-1:-1:-1;1414:39:219;;;;-1:-1:-1;;;;;1414:39:219;;;1971:28:118;;;;;;;;;;;;;;;;14287:288:219;;;;;;;;;;-1:-1:-1;14287:288:219;;;;;:::i;:::-;;:::i;11263:381:118:-;;;;;;;;;;-1:-1:-1;11263:381:118;;;;;:::i;:::-;11363:13;11448:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;11505:24:118;;;;;:17;;;;:24;;;;11551:16;;;11624:13;;;;11551:16;;;;;;11589:17;;;;;11263:381;;;;;22546:14:311;;22539:22;22521:41;;22610:4;22598:17;;;22593:2;22578:18;;22571:45;22632:18;;;22625:34;22509:2;22494:18;11263:381:118;22329:336:311;37688:148:118;;;;;;;;;;-1:-1:-1;37688:148:118;;;;;:::i;:::-;;:::i;37020:172::-;;;;;;;;;;-1:-1:-1;37020:172:118;;;;;:::i;:::-;;:::i;19468:465::-;;;;;;;;;;-1:-1:-1;19468:465:118;;;;;:::i;:::-;19716:62;;19608:16;19716:62;;;:23;:62;;;;;;;;:74;;;;;;;19811:19;;19855:23;;;;19903;;;;;19811:19;;19468:465;1226:22:219;;;;;;;;;;-1:-1:-1;1226:22:219;;;;-1:-1:-1;;;1226:22:219;;-1:-1:-1;;;;;1226:22:219;;;;;;-1:-1:-1;;;;;23089:31:311;;;23071:50;;23059:2;23044:18;1226:22:219;22927:200:311;8104:390:219;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5552:44:118:-;;;;;;;;;;;;;;;;29645:1277;;;;;;:::i;:::-;;:::i;40369:999::-;10424:18;;-1:-1:-1;;;;;10424:18:118;10410:10;:32;10389:124;;;;-1:-1:-1;;;10389:124:118;;23982:2:311;10389:124:118;;;23964:21:311;24021:2;24001:18;;;23994:30;24060:34;24040:18;;;24033:62;-1:-1:-1;;;24111:18:311;;;24104:43;24164:19;;10389:124:118;;;;;;;;;10555:18;;10529:57;;-1:-1:-1;;;;;;;;;;;10529:57:118;;;-1:-1:-1;;;;;10555:18:118;;;;;;10529:57;:::i;:::-;;;;;;;;10597:18;:31;;-1:-1:-1;;;;;;10597:31:118;;;40546:34;;::::1;40525:115;;;::::0;-1:-1:-1;;;40525:115:118;;24705:2:311;40525:115:118::1;::::0;::::1;24687:21:311::0;24744:2;24724:18;;;24717:30;24783:34;24763:18;;;24756:62;-1:-1:-1;;;24834:18:311;;;24827:32;24876:19;;40525:115:118::1;24503:398:311::0;40525:115:118::1;40659:18:::0;40651:62:::1;;;::::0;-1:-1:-1;;;40651:62:118;;25108:2:311;40651:62:118::1;::::0;::::1;25090:21:311::0;25147:2;25127:18;;;25120:30;25186:33;25166:18;;;25159:61;25237:18;;40651:62:118::1;24906:355:311::0;40651:62:118::1;40753:9;40748:399;40768:20:::0;;::::1;40748:399;;;40842:20;40863:9;;40873:1;40863:12;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;40842:34;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;40813:149;;;::::0;-1:-1:-1;;;40813:149:118;;26402:2:311;40813:149:118::1;::::0;::::1;26384:21:311::0;26441:2;26421:18;;;26414:30;-1:-1:-1;;;;;;;;;;;26460:18:311;;;26453:62;-1:-1:-1;;;26531:18:311;;;26524:42;26583:19;;40813:149:118::1;26200:408:311::0;40813:149:118::1;40981:151;41026:9;;41036:1;41026:12;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;40981:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;40981:151:118::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;-1:-1:-1;40981:151:118;-1:-1:-1;40981:151:118::1;;::::0;::::1;;:7;;40989:1;40981:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;40981:23:118::1;::::0;:151;:23:::1;:151::i;:::-;-1:-1:-1::0;40790:3:118::1;;40748:399;;;-1:-1:-1::0;41188:18:118::1;::::0;-1:-1:-1;;;;;41188:18:118::1;:32:::0;41167:128:::1;;;::::0;-1:-1:-1;;;41167:128:118;;26815:2:311;41167:128:118::1;::::0;::::1;26797:21:311::0;26854:2;26834:18;;;26827:30;26893:34;26873:18;;;26866:62;-1:-1:-1;;;26944:18:311;;;26937:47;27001:19;;41167:128:118::1;26613:413:311::0;41167:128:118::1;41311:50;41330:10;41342:7;;41351:9;;41311:50;;;;;;;;;;:::i;:::-;;;;;;;;40369:999:::0;;;;:::o;17680:611::-;17845:4;;:40;;-1:-1:-1;;;17845:40:118;;17806:7;;;;-1:-1:-1;;;;;17845:4:118;;;;:18;;:40;;17864:7;;17873:11;;17845:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17922:11;;:81;;-1:-1:-1;;;17922:81:118;;17825:60;;-1:-1:-1;17895:24:118;;-1:-1:-1;;;;;17922:11:118;;;;:25;;:81;;17961:7;;17982:11;;17922:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18034:5;;:38;;-1:-1:-1;;;18034:38:118;;17895:108;;-1:-1:-1;18013:18:118;;-1:-1:-1;;;;;18034:5:118;;;;:18;;:38;;18053:7;;18062:9;;18034:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18105:7;;18161:13;;18013:59;;-1:-1:-1;18082:20:118;;-1:-1:-1;;;;;18105:7:118;;;;:21;;18140:7;;-1:-1:-1;;;18161:13:118;;;;:39;;18189:11;18161:39;;;18177:9;18161:39;18105:105;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18082:128;-1:-1:-1;18275:9:118;18256:16;18228:25;18082:128;18228:10;:25;:::i;:::-;:44;;;;:::i;:::-;:56;;;;:::i;:::-;18221:63;17680:611;-1:-1:-1;;;;;;;;17680:611:118:o;36424:184::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;36565:36:::1;36585:15;36565:19;:36::i;:::-;36424:184:::0;:::o;37305:110::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;37387:21:::1;37398:9;37387:10;:21::i;18998:273::-:0;19063:4;19079:27;19109:17;19115:10;19109:5;:17::i;:::-;19079:47;-1:-1:-1;19173:20:118;19156:13;:37;;;;;;;;:::i;:::-;;:108;;;-1:-1:-1;19226:38:118;19209:13;:55;;;;;;;;:::i;:::-;;19156:108;19137:127;18998:273;-1:-1:-1;;;18998:273:118:o;10766:158:219:-;10887:22;;;10864:4;10887:22;;;:13;:22;;;;;;-1:-1:-1;;;;;10887:30:219;;;:22;;:30;10766:158;;;;;:::o;8933:821::-;9058:15;;9168:8;;9058:132;;-1:-1:-1;;;9058:132:219;;30506:6:311;30494:19;;9058:132:219;;;30476:38:311;9015:15:219;30530:18:311;;;30523:34;;;-1:-1:-1;;;9168:8:219;;;-1:-1:-1;;;;;9168:8:219;30573:18:311;;;30566:59;9015:15:219;;-1:-1:-1;;;;;9058:15:219;;:37;;30449:18:311;;9058:132:219;;;;;;;;;;;;;;;;;;-1:-1:-1;9058:132:219;;;;;;;;-1:-1:-1;;9058:132:219;;;;;;;;;;;;:::i;:::-;;;9042:706;;-1:-1:-1;9736:1:219;8933:821;;;:::o;9042:706::-;-1:-1:-1;9255:4:219;-1:-1:-1;9042:706:219;8933:821;;;:::o;21658:1885:118:-;21714:13;21777:10;21760:13;;:27;;:45;;;;;21804:1;21791:10;:14;21760:45;21739:131;;;;-1:-1:-1;;;21739:131:118;;31088:2:311;21739:131:118;;;31070:21:311;31127:2;31107:18;;;31100:30;31166:34;31146:18;;;31139:62;-1:-1:-1;;;31217:18:311;;;31210:37;31264:19;;21739:131:118;30886:403:311;21739:131:118;21881:25;21909:21;;;:9;:21;;;;;22068:17;;;;;;22064:1473;;;-1:-1:-1;22108:22:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;22064:1473::-;22293:8;:22;;;22274:15;:41;22270:1267;;-1:-1:-1;22338:20:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;22270:1267::-;22495:8;:45;;;22476:15;:64;22459:1078;;-1:-1:-1;22572:38:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;22459:1078::-;22976:8;:21;;;22955:8;:17;;;:42;;:86;;;;23035:6;;23013:8;:19;;;:28;22955:86;22938:599;;;-1:-1:-1;23073:22:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;22938:599::-;23116:17;;;;;;;;;23112:425;;;-1:-1:-1;23156:22:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;23112:425::-;-1:-1:-1;23503:23:118;;21658:1885;-1:-1:-1;;21658:1885:118:o;23112:425::-;21729:1814;21658:1885;;;:::o;2908:367:222:-;1729:16:26;:14;:16::i;:::-;2992:13:222::1;::::0;-1:-1:-1;;;;;2992:13:222::1;2978:10;:27;2957:120;;;;-1:-1:-1::0;;;2957:120:222::1;;;;;;;:::i;:::-;3214:18;:16;:18::i;:::-;3248:20;3257:10;3248:20;;;;;;:::i;:::-;;;;;;;;2908:367::o:0;31566:820:118:-;31665:21;;;;:9;:21;;;;;:30;-1:-1:-1;;;;;31665:30:118;31651:10;:44;;:147;;-1:-1:-1;31781:17:118;;31731:21;;;;:9;:21;;;;;:30;31715:47;;-1:-1:-1;;;;;31731:30:118;31715:15;:47::i;:::-;:83;31651:147;31630:233;;;;-1:-1:-1;;;31630:233:118;;31911:2:311;31630:233:118;;;31893:21:311;31950:2;31930:18;;;31923:30;31989:34;31969:18;;;31962:62;-1:-1:-1;;;32040:18:311;;;32033:37;32087:19;;31630:233:118;31709:403:311;31630:233:118;31874:27;31904:17;31910:10;31904:5;:17::i;:::-;31874:47;-1:-1:-1;31970:20:118;31953:13;:37;;;;;;;;:::i;:::-;;31932:137;;;;-1:-1:-1;;;31932:137:118;;32319:2:311;31932:137:118;;;32301:21:311;32358:2;32338:18;;;32331:30;32397:34;32377:18;;;32370:62;-1:-1:-1;;;32448:18:311;;;32441:51;32509:19;;31932:137:118;32117:417:311;31932:137:118;32080:25;32108:21;;;:9;:21;;;;;32139:17;;;:24;;-1:-1:-1;;32139:24:118;32159:4;32139:24;;;32310:25;:23;:25::i;:::-;32351:28;;1367:25:311;;;-1:-1:-1;;;;;;;;;;;32351:28:118;1355:2:311;1340:18;32351:28:118;;;;;;;;31620:766;;31566:820;:::o;8185:1357::-;3279:19:25;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:25;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;-1:-1:-1;3436:12:25;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:25;;32741:2:311;3325:201:25;;;32723:21:311;32780:2;32760:18;;;32753:30;32819:34;32799:18;;;32792:62;-1:-1:-1;;;32870:18:311;;;32863:44;32924:19;;3325:201:25;32539:410:311;3325:201:25;3536:12;:16;;-1:-1:-1;;3536:16:25;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:25;;;;;3562:65;8401:14:118::1;::::0;::::1;::::0;8387:5:::1;:29:::0;;-1:-1:-1;;;;;8387:29:118;;::::1;-1:-1:-1::0;;;;;;8387:29:118;;::::1;;::::0;;;8451:13;;8426:4:::1;:39:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8503:16:::1;::::0;::::1;::::0;8475:7:::1;:45:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8562:20:::1;::::0;::::1;::::0;8530:11:::1;:53:::0;;;;;::::1;::::0;::::1;;::::0;;8616:26:::1;::::0;::::1;::::0;8594:49:::1;::::0;:21:::1;:49::i;:::-;8653:46;8670:8;:28;;;8653:16;:46::i;:::-;8709:97;8757:8;:39;;;8709:34;:97::i;:::-;8816:27;8827:8;:15;;;8816:10;:27::i;:::-;8853:55;8878:8;:29;;;8853:24;:55::i;:::-;8918:51;8941:8;:27;;;8918:22;:51::i;:::-;8980:17;:15;:17::i;:::-;9008:44;9029:8;:22;;;9008:20;:44::i;:::-;9098:38;9113:8;:22;;;9098:14;:38::i;:::-;9147:54;9175:8;:24;;;9147:19;:54::i;:::-;9255:35;9275:14;9255:19;:35::i;:::-;9301:37;2424:7:115;9301:12:118;:37::i;:::-;9408:9;9403:123;9423:20:::0;;::::1;9403:123;;;9468:43;9492:9;;9502:1;9492:12;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;9506:4;9468:23;:43::i;:::-;9445:3;;9403:123;;;;3651:14:25::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:25;;;3721:14;;-1:-1:-1;33106:36:311;;3721:14:25;;33094:2:311;33079:18;3721:14:25;;;;;;;;3647:99;3269:483;8185:1357:118;;;;:::o;13203:763:219:-;13440:9;:14;13432:59;;;;-1:-1:-1;;;13432:59:219;;33355:2:311;13432:59:219;;;33337:21:311;;;33374:18;;;33367:30;33433:34;33413:18;;;33406:62;33485:18;;13432:59:219;33153:356:311;13432:59:219;13544:15;;-1:-1:-1;;;;;13544:15:219;13522:10;:38;13501:121;;;;-1:-1:-1;;;13501:121:219;;33716:2:311;13501:121:219;;;33698:21:311;33755:2;33735:18;;;33728:30;33794:34;33774:18;;;33767:62;-1:-1:-1;;;33845:18:311;;;33838:34;33889:19;;13501:121:219;33514:400:311;13501:121:219;13653:43;13669:11;13682:13;13653:15;:43::i;:::-;13632:124;;;;-1:-1:-1;;;13632:124:219;;34121:2:311;13632:124:219;;;34103:21:311;34160:2;34140:18;;;34133:30;34199:34;34179:18;;;34172:62;-1:-1:-1;;;34250:18:311;;;34243:32;34292:19;;13632:124:219;33919:398:311;13632:124:219;13788:22;;;;:15;:22;;;;;;;;13787:23;13766:111;;;;-1:-1:-1;;;13766:111:219;;34524:2:311;13766:111:219;;;34506:21:311;34563:2;34543:18;;;34536:30;34602:34;34582:18;;;34575:62;-1:-1:-1;;;34653:18:311;;;34646:39;34702:19;;13766:111:219;34322:405:311;13766:111:219;13888:22;;;;:15;:22;;;;;:29;;-1:-1:-1;;13888:29:219;13913:4;13888:29;;;13928:31;13938:11;13951:7;13928:9;:31::i;1160:91:222:-;1225:14;;-1:-1:-1;;;;;1225:14:222;:19;;;1160:91::o;32587:1634:118:-;1482:19:26;:17;:19::i;:::-;32748:20:118::1;32727:17;32733:10;32727:5;:17::i;:::-;:41;;;;;;;;:::i;:::-;;32706:127;;;::::0;-1:-1:-1;;;32706:127:118;;34934:2:311;32706:127:118::1;::::0;::::1;34916:21:311::0;34973:2;34953:18;;;34946:30;-1:-1:-1;;;;;;;;;;;34992:18:311;;;34985:62;-1:-1:-1;;;35063:18:311;;;35056:37;35110:19;;32706:127:118::1;34732:403:311::0;32706:127:118::1;700:1:115;32864:41:118;::::0;::::1;;;32843:126;;;::::0;-1:-1:-1;;;32843:126:118;;35342:2:311;32843:126:118::1;::::0;::::1;35324:21:311::0;35381:2;35361:18;;;35354:30;-1:-1:-1;;;;;;;;;;;35400:18:311;;;35393:62;-1:-1:-1;;;35471:18:311;;;35464:36;35517:19;;32843:126:118::1;35140:402:311::0;32843:126:118::1;32980:25;33008:21:::0;;;:9:::1;:21;::::0;;;;;;;33083:10:::1;33065:29:::0;;:17:::1;::::0;::::1;:29:::0;;;;;;33126:16;;::::1;;:25;33105:111;;;::::0;-1:-1:-1;;;33105:111:118;;35749:2:311;33105:111:118::1;::::0;::::1;35731:21:311::0;35788:2;35768:18;;;35761:30;35827:34;35807:18;;;35800:62;-1:-1:-1;;;35878:18:311;;;35871:37;35925:19;;33105:111:118::1;35547:403:311::0;33105:111:118::1;33444:13;33460:126;33482:10;33506:8;:30;;;33550:8;:26;;;33460:8;:126::i;:::-;33444:142;;33605:5;33614:1;33605:10:::0;33597:61:::1;;;::::0;-1:-1:-1;;;33597:61:118;;36157:2:311;33597:61:118::1;::::0;::::1;36139:21:311::0;36196:2;36176:18;;;36169:30;36235:34;36215:18;;;36208:62;-1:-1:-1;;;36286:18:311;;;36279:36;36332:19;;33597:61:118::1;35955:402:311::0;33597:61:118::1;33673:37;::::0;::::1;33669:305;;33747:5;33726:8;:17;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;33669:305:118::1;::::0;-1:-1:-1;33669:305:118::1;;-1:-1:-1::0;;33773:36:118::1;::::0;::::1;::::0;33769:205:::1;;33850:5;33825:8;:21;;;:30;;;;;;;:::i;33769:205::-;-1:-1:-1::0;;33876:41:118::1;::::0;::::1;::::0;33872:102:::1;;33958:5;33933:8;:21;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;33872:102:118::1;34039:5;34016:8;:19;;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;34055:23:118;;::::1;34088:29:::0;::::1;34055:23;34088:29:::0;::::1;-1:-1:-1::0;;34088:29:118;;;;;;;34074:4:::1;34088:29:::0;;;;;34127:13;::::1;:21:::0;;;34164:50:::1;::::0;;34173:10:::1;36589:51:311::0;;36671:2;36656:18;;36649:34;;;36699:18;;;36692:45;;;;36768:2;36753:18;;36746:34;;;34164:50:118::1;::::0;36576:3:311;36561:19;34164:50:118::1;36362:424:311::0;36724:168:118;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;36842:43:::1;36864:20;36842:21;:43::i;1853:209:221:-:0;1944:14;;1909:4;;-1:-1:-1;;;;;1944:14:221;:19;:111;;2042:13;;2025:30;;-1:-1:-1;;;;;;;;2042:13:221;;;;;2025:14;:30;:::i;:::-;-1:-1:-1;;;;;2006:49:221;:15;:49;;1925:130;;1853:209;:::o;1944:111::-;1982:5;1944:111;1925:130;;1853:209;:::o;13554:389:118:-;13673:24;13711:23;13748:24;13807:9;:21;13817:10;13807:21;;;;;;;;;;;:29;;13797:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13797:39:118;;;;;;;;;;;;;;;;;;;;;;;13855:9;:21;13865:10;13855:21;;;;;;;;;;;:28;;13846:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13905:21:118;;;;:9;:21;;;;;;;;:31;;13893:43;;;;;;;;;;;;;;;;;13846:37;;-1:-1:-1;13893:43:118;;13905:31;;-1:-1:-1;13893:43:118;-1:-1:-1;13893:43:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13554:389;;;;;:::o;16684:684::-;16765:16;16793:30;16853;16878:4;16853:24;:30::i;:::-;-1:-1:-1;;;;;16826:67:118;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16826:67:118;-1:-1:-1;;;;;;16939:24:118;;16903:33;16939:24;;;:18;:24;;;;;16793:100;;-1:-1:-1;16903:33:118;16939;;:31;:33::i;:::-;16903:69;;16982:29;17055:9;17050:271;17074:16;:23;17070:1;:27;17050:271;;;17126:35;17141:16;17158:1;17141:19;;;;;;;;:::i;:::-;;;;;;;17126:14;:35::i;:::-;17122:185;;;17224:16;17241:1;17224:19;;;;;;;;:::i;:::-;;;;;;;17185:13;17199:21;17185:36;;;;;;;;:::i;:::-;;;;;;;;;;:58;17265:23;;;;;17122:185;17099:3;;17050:271;;;-1:-1:-1;17348:13:118;;16684:684;-1:-1:-1;;;;16684:684:118:o;35990:190::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;36134:39:::1;36157:15;36134:22;:39::i;25180:4063::-:0;25388:7;1482:19:26;:17;:19::i;:::-;25585:17:118::1;::::0;25506:59:::1;25515:10;25527:19;25545:1;25527:15;:19;:::i;:::-;25548:16;25563:1;25548:12;:16;:::i;25506:59::-;:96;;25485:202;;;::::0;-1:-1:-1;;;25485:202:118;;37698:2:311;25485:202:118::1;::::0;::::1;37680:21:311::0;37737:2;37717:18;;;37710:30;37776:34;37756:18;;;37749:62;-1:-1:-1;;;37827:18:311;;;37820:57;37894:19;;25485:202:118::1;37496:423:311::0;25485:202:118::1;25736:6;:13;25718:7;:14;:31;:85;;;;;25787:9;:16;25769:7;:14;:34;25718:85;25697:196;;;::::0;;-1:-1:-1;;;25697:196:118;;38126:2:311;25697:196:118::1;::::0;::::1;38108:21:311::0;38145:18;;;38138:30;;;;38204:34;38184:18;;;38177:62;38275:34;38255:18;;;38248:62;38327:19;;25697:196:118::1;37924:428:311::0;25697:196:118::1;25924:7;:14;25942:1;25924:19:::0;25903:106:::1;;;::::0;-1:-1:-1;;;25903:106:118;;38559:2:311;25903:106:118::1;::::0;::::1;38541:21:311::0;38598:2;38578:18;;;38571:30;38637:34;38617:18;;;38610:62;-1:-1:-1;;;38688:18:311;;;38681:38;38736:19;;25903:106:118::1;38357:404:311::0;25903:106:118::1;26068:1;26046:11;26040:25;:29;26019:124;;;::::0;-1:-1:-1;;;26019:124:118;;38968:2:311;26019:124:118::1;::::0;::::1;38950:21:311::0;39007:2;38987:18;;;38980:30;39046:34;39026:18;;;39019:62;-1:-1:-1;;;39097:18:311;;;39090:46;39153:19;;26019:124:118::1;38766:412:311::0;26019:124:118::1;26190:25;:23;:25::i;:::-;26340;26368:36;26393:10;26368:24;:36::i;:::-;26340:64;;26463:20;;26443:17;:40;26418:156;;;::::0;-1:-1:-1;;;26418:156:118;;39385:2:311;26418:156:118::1;::::0;::::1;39367:21:311::0;39424:2;39404:18;;;39397:30;39463:34;39443:18;;;39436:62;-1:-1:-1;;;39514:18:311;;;39507:55;39579:19;;26418:156:118::1;39183:421:311::0;26418:156:118::1;26326:259;26833:18;26874:9:::0;26869:168:::1;26893:6;:13;26889:1;:17;26869:168;;;26942:6;26949:1;26942:9;;;;;;;;:::i;:::-;;;;;;;26928:23;;;;;:::i;:::-;::::0;-1:-1:-1;27001:3:118::1;;26869:168;;;-1:-1:-1::0;;27078:13:118::1;:15:::0;;;:13:::1;:15;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;27145:13:118::1;::::0;27104:28:::1;27135:24:::0;;;:9:::1;:24;::::0;;;;;27169:20:::1;::::0;27239:15:::1;::::0;27300:18:::1;27317:1;27239:15:::0;27300:18:::1;:::i;:::-;27268:50;;27332:20;27372:12;;27355:14;:29;;;;:::i;:::-;27332:52;;27398:44;27476:30;;27445:12;:61;;;;:::i;:::-;27521:33:::0;;-1:-1:-1;;;;;;27521:33:118::1;27544:10;27521:33;::::0;;27568:29;;27398:108;;-1:-1:-1;27568:29:118::1;::::0;27521:33;27568:19;::::1;::::0;:29:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;27611:27:118;;::::1;::::0;:18:::1;::::0;::::1;::::0;:27:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;27652:33:118;;::::1;::::0;:21:::1;::::0;::::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;27699:33:118::1;::::0;::::1;:57:::0;;;27770:27:::1;::::0;::::1;:44:::0;;;27860:16:::1;27875:1;27860:12;:16;:::i;:::-;27828:29;::::0;::::1;:48:::0;27890:25:::1;::::0;::::1;:40:::0;;;27944:65:::1;::::0;::::1;:104:::0;;;28101:13:::1;::::0;28073:210:::1;::::0;::::1;::::0;28101:13;28132:21;;28171:14;;27918:12;;28012:36;;28073:210:::1;;;:::i;:::-;;;;;;;;;;;;;28063:220;;28303:255;28336:13;;28367:10;28395:7;28420:6;28444:9;28471:14;28503:12;28533:11;28303:255;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;28760:13:118::1;::::0;28744:10:::1;28725:30;::::0;;;:18:::1;:30;::::0;;;;:49:::1;::::0;-1:-1:-1;28725:30:118;-1:-1:-1;28725:34:118::1;:49::i;:::-;28704:155;;;::::0;-1:-1:-1;;;28704:155:118;;41607:2:311;28704:155:118::1;::::0;::::1;41589:21:311::0;41646:2;41626:18;;;41619:30;41685:34;41665:18;;;41658:62;-1:-1:-1;;;41736:18:311;;;41729:57;41803:19;;28704:155:118::1;41405:423:311::0;28704:155:118::1;28909:13;::::0;28890:33:::1;::::0;:14:::1;::::0;:18:::1;:33::i;:::-;28869:148;;;::::0;-1:-1:-1;;;28869:148:118;;42035:2:311;28869:148:118::1;::::0;::::1;42017:21:311::0;42074:2;42054:18;;;42047:30;;;42113:34;42093:18;;;42086:62;42184:34;42164:18;;;42157:62;-1:-1:-1;;;42235:19:311;;;42228:35;42280:19;;28869:148:118::1;41833:472:311::0;28869:148:118::1;29183:22;29197:7;29183:13;:22::i;:::-;29223:13;;29216:20;;;;1511:1:26;25180:4063:118::0;;;;;;:::o;41601:1655::-;41644:13;:11;:13::i;:::-;41668:29;41700:23;:14;:21;:23::i;:::-;41668:55;;41739:9;41734:1339;41758:12;:19;41754:1;:23;41734:1339;;;41795:27;41825:22;41831:12;41844:1;41831:15;;;;;;;;:::i;:::-;;;;;;;41825:5;:22::i;:::-;41795:52;-1:-1:-1;42716:22:118;42699:13;:39;;;;;;;;:::i;:::-;;;:98;;;;-1:-1:-1;42775:22:118;42758:13;:39;;;;;;;;:::i;:::-;;;42699:98;:157;;;;-1:-1:-1;42834:22:118;42817:13;:39;;;;;;;;:::i;:::-;;;42699:157;42678:325;;;42927:4;42889:9;:26;42899:12;42912:1;42899:15;;;;;;;;:::i;:::-;;;;;;;42889:26;;;;;;;;;;;:35;;;:42;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;42972:12:118;42985:1;42972:15;;;;;;;;:::i;:::-;;;;;;;42955:33;;;;1367:25:311;;1355:2;1340:18;;1221:177;42955:33:118;;;;;;;;42678:325;-1:-1:-1;43045:3:118;;41734:1339;;;;43224:25;:23;:25::i;37993:220::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;38137:69:::1;38172:33;38137:34;:69::i;14989:350::-:0;15041:13;15066:29;15098:23;:14;:21;:23::i;:::-;15066:55;;15161:9;15156:167;15180:12;:19;15176:1;:23;15156:167;;;15228:31;15243:12;15256:1;15243:15;;;;;;;;:::i;15228:31::-;15224:85;;;15283:7;;;;;15224:85;15201:3;;15156:167;;;;15056:283;14989:350;:::o;9825:361:219:-;9871:7;;;9945:22;:13;:20;:22::i;:::-;9922:45;;9982:9;9977:176;10001:12;9997:1;:16;9977:176;;;10044:39;10062:19;:13;10079:1;10062:16;:19::i;10044:39::-;10031:52;;;;:::i;:::-;;-1:-1:-1;10125:3:219;;9977:176;;;-1:-1:-1;10170:9:219;;9825:361;-1:-1:-1;;9825:361:219:o;24111:663:118:-;24187:27;24217:17;24223:10;24217:5;:17::i;:::-;24187:47;-1:-1:-1;24282:20:118;24265:13;:37;;;;;;;;:::i;:::-;;24244:117;;;;-1:-1:-1;;;24244:117:118;;42512:2:311;24244:117:118;;;42494:21:311;42551:2;42531:18;;;42524:30;42590:34;42570:18;;;42563:62;-1:-1:-1;;;42641:18:311;;;42634:31;42682:19;;24244:117:118;42310:397:311;24244:117:118;24372:25;24400:21;;;:9;:21;;;;;;;;24503:30;;;;24547:24;;;;24585:22;;;;24621:45;;;;24455:221;;24400:21;;24372:25;24455:221;;24410:10;;24621:45;;24455:221;;:::i;:::-;;;;;;;;;;;;;24432:244;;24687:22;24701:7;24687:13;:22::i;:::-;24725:42;24747:10;24759:7;24725:42;;;;;;;:::i;16020:477::-;-1:-1:-1;;;;;16155:24:118;;16103:7;16155:24;;;:18;:24;;;;;16103:7;;16155:33;;:31;:33::i;:::-;16122:66;;16199:26;16268:9;16263:182;16287:13;:20;16283:1;:24;16263:182;;;16336:32;16351:13;16365:1;16351:16;;;;;;;;:::i;16336:32::-;16332:99;;;16392:20;;;;;16332:99;16309:3;;16263:182;;;-1:-1:-1;16472:18:118;16020:477;-1:-1:-1;;;16020:477:118:o;8560:114:219:-;8619:7;8645:22;:13;:20;:22::i;35062:279:118:-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;35187:7:::1;:42:::0;;-1:-1:-1;;;;;;35187:42:118::1;-1:-1:-1::0;;;;;35187:42:118;::::1;::::0;;::::1;::::0;;;35239:13:::1;:31:::0;;-1:-1:-1;;;;35239:31:118::1;-1:-1:-1::0;;;35239:31:118;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;35286:48:::1;::::0;;43173:51:311;;;43255:2;43240:18;;43233:50;;;;35286:48:118::1;::::0;43146:18:311;35286:48:118::1;;;;;;;;35062:279:::0;;:::o;38697:238::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;2424:7:115::1;-1:-1:-1::0;;;;;38791:38:118;::::1;;;38770:122;;;::::0;-1:-1:-1;;;38770:122:118;;43496:2:311;38770:122:118::1;::::0;::::1;43478:21:311::0;43535:2;43515:18;;;43508:30;43574:34;43554:18;;;43547:62;-1:-1:-1;;;43625:18:311;;;43618:35;43670:19;;38770:122:118::1;43294:401:311::0;38770:122:118::1;38903:25;38916:11;38903:12;:25::i;14105:721::-:0;14162:16;14190:25;14218:21;:19;:21::i;:::-;14190:49;;14249:32;14298:17;-1:-1:-1;;;;;14284:32:118;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14284:32:118;;14249:67;;14327:29;14359:23;:14;:21;:23::i;:::-;14327:55;;14392:25;14461:9;14456:321;14480:12;:19;14476:1;:23;14456:321;;;14528:31;14543:12;14556:1;14543:15;;;;;;;;:::i;14528:31::-;14524:239;;;14688:12;14701:1;14688:15;;;;;;;;:::i;:::-;;;;;;;14651;14667:17;14651:34;;;;;;;;:::i;:::-;;;;;;;;;;:52;14725:19;;;;;14524:239;14501:3;;14456:321;;1544:205:222;1482:19:26;:17;:19::i;:::-;1620:11:222::1;:9;:11::i;:::-;1599:114;;;::::0;-1:-1:-1;;;1599:114:222;;43902:2:311;1599:114:222::1;::::0;::::1;43884:21:311::0;43941:2;43921:18;;;43914:30;43980:34;43960:18;;;43953:62;-1:-1:-1;;;44031:18:311;;;44024:54;44095:19;;1599:114:222::1;43700:420:311::0;1599:114:222::1;1724:18;:16;:18::i;:::-;1544:205::o:0;18464:405:118:-;18566:4;;:29;;-1:-1:-1;;;18566:29:118;;18527:7;;;;-1:-1:-1;;;;;18566:4:118;;;;:20;;:29;;18587:7;;18566:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18628:7;;:32;;-1:-1:-1;;;18628:32:118;;18546:49;;-1:-1:-1;18605:20:118;;-1:-1:-1;;;;;18628:7:118;;;;:23;;:32;;18652:7;;18628:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18697:11;;:36;;-1:-1:-1;;;18697:36:118;;18605:55;;-1:-1:-1;18670:24:118;;-1:-1:-1;;;;;18697:11:118;;;;:27;;:36;;18725:7;;18697:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18765:5;;:23;;-1:-1:-1;;;18765:23:118;;18670:63;;-1:-1:-1;18744:18:118;;-1:-1:-1;;;;;18765:5:118;;;;:14;;:23;;18780:7;;18765:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18744:44;-1:-1:-1;18853:9:118;18834:16;18806:25;18819:12;18744:44;18806:25;:::i;:::-;:44;;;;:::i;:::-;:56;;;;:::i;:::-;18799:63;18464:405;-1:-1:-1;;;;;;18464:405:118:o;38337:149::-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;38444:35:::1;38467:11;38444:22;:35::i;35552:168::-:0;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;35674:39:::1;35698:4;;35704:8;35674:23;:39::i;:::-;35552:168:::0;;;:::o;10387:178:219:-;10485:4;10508:50;10524:7;10533:24;10552:4;14287:288;14375:7;14443:3;14415:31;;;:36;14394:114;;;;-1:-1:-1;;;14394:114:219;;44327:2:311;14394:114:219;;;44309:21:311;44366:2;44346:18;;;44339:30;44405:33;44385:18;;;44378:61;44456:18;;14394:114:219;44125:355:311;14394:114:219;-1:-1:-1;14550:15:219;14287:288::o;37688:148:118:-;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;37796:33:::1;37813:15;37796:16;:33::i;37020:172::-:0;10032:10;10054:4;10032:27;10011:107;;;;-1:-1:-1;;;10011:107:118;;;;;;;:::i;:::-;37140:45:::1;37165:19;37140:24;:45::i;8104:390:219:-:0;8157:15;8184:20;8207:22;:13;:20;:22::i;:::-;8184:45;;8239:22;8277:12;-1:-1:-1;;;;;8264:26:219;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8264:26:219;;8239:51;;8306:9;8301:163;8325:12;8321:1;:16;8301:163;;;8374:19;:13;8391:1;8374:16;:19::i;:::-;8355:6;8362:1;8355:9;;;;;;;;:::i;:::-;:39;;;;:9;;;;;;;;;;;:39;8436:3;;8301:163;;;-1:-1:-1;8481:6:219;8104:390;-1:-1:-1;;8104:390:219:o;29645:1277:118:-;1482:19:26;:17;:19::i;:::-;29807:23:118::1;29786:17;29792:10;29786:5;:17::i;:::-;:44;;;;;;;;:::i;:::-;;29765:159;;;::::0;-1:-1:-1;;;29765:159:118;;44687:2:311;29765:159:118::1;::::0;::::1;44669:21:311::0;44726:2;44706:18;;;44699:30;;;44765:34;44745:18;;;44738:62;44836:34;44816:18;;;44809:62;-1:-1:-1;;;44887:19:311;;;44880:35;44932:19;;29765:159:118::1;44485:472:311::0;29765:159:118::1;29935:18;29996:21:::0;;;:9:::1;:21;::::0;;;;29935:18;30028:167:::1;30052:16;::::0;::::1;:23:::0;30048:27;::::1;30028:167;;;30107:8;:15;;30123:1;30107:18;;;;;;;;:::i;:::-;;;;;;;;;30093:32;;;;;:::i;:::-;::::0;-1:-1:-1;30167:3:118::1;;30028:167;;;;30227:9;30213:10;:23;30205:69;;;::::0;-1:-1:-1;;;30205:69:118;;45164:2:311;30205:69:118::1;::::0;::::1;45146:21:311::0;45203:2;45183:18;;;45176:30;45242:34;45222:18;;;45215:62;-1:-1:-1;;;45293:18:311;;;45286:31;45334:19;;30205:69:118::1;44962:397:311::0;30205:69:118::1;30306:17;::::0;::::1;:24:::0;;-1:-1:-1;;30306:24:118::1;;;::::0;;30484:25:::1;:23;:25::i;:::-;30575:9;30570:292;30594:16;::::0;::::1;:23:::0;30590:27;::::1;30570:292;;;30642:205;30705:8;:18;;30724:1;30705:21;;;;;;;;:::i;:::-;;;;;;;;30642:205;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30748:8;:15;;30764:1;30748:18;;;;;;;;:::i;:::-;;;;;;;;;30642:205;;;;;;;;;;;;;;;;;:8;:16;;30659:1;30642:19;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;30642:19:118::1;::::0;:205;;:41:::1;:205::i;:::-;-1:-1:-1::0;30619:3:118::1;;30570:292;;;-1:-1:-1::0;30887:28:118::1;::::0;1367:25:311;;;30887:28:118::1;::::0;1355:2:311;1340:18;30887:28:118::1;1221:177:311::0;4108:223:63;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;5446:323:219:-;5572:9;5567:196;5591:12;:19;5587:1;:23;5567:196;;;5628:64;5646:12;5659:1;5646:15;;;;;;;;:::i;:::-;;;;;;;:23;;;5671:12;5684:1;5671:15;;;;;;;;:::i;:::-;;;;;;;:20;;;5628:17;:64::i;:::-;5735:3;;5567:196;;;;5446:323;:::o;46320:291:118:-;-1:-1:-1;;;46396:7:118;:31;;46375:112;;;;-1:-1:-1;;;46375:112:118;;45566:2:311;46375:112:118;;;45548:21:311;45605:2;45585:18;;;45578:30;45644:34;45624:18;;;45617:62;-1:-1:-1;;;45695:18:311;;;45688:32;45737:19;;46375:112:118;45364:398:311;46375:112:118;46518:6;;;46534:16;;;;46566:38;;;;;;46518:6;;46543:7;;46566:38;:::i;2188:106:26:-;2254:8;:6;:8::i;:::-;2246:41;;;;-1:-1:-1;;;2246:41:26;;46222:2:311;2246:41:26;;;46204:21:311;46261:2;46241:18;;;46234:30;-1:-1:-1;;;46280:18:311;;;46273:50;46340:18;;2246:41:26;46020:344:311;1930:306:222;2008:13;;;-1:-1:-1;;;;;;2032:26:222;;;;;-1:-1:-1;;;;;2008:13:222;2099:16;1976:29;2099:13;:16::i;:::-;2174:55;;2226:1;;-1:-1:-1;;;;;2174:55:222;;;-1:-1:-1;;;;;;;;;;;2174:55:222;2226:1;;2174:55;1966:270;1930:306::o;48530:1271:118:-;48583:29;48615:23;:14;:21;:23::i;:::-;48583:55;;48678:9;48673:1112;48697:12;:19;48693:1;:23;48673:1112;;;48741:28;48772:22;48778:12;48791:1;48778:15;;;;;;;;:::i;48772:22::-;48741:53;-1:-1:-1;48855:22:118;48837:14;:40;;;;;;;;:::i;:::-;;:104;;;-1:-1:-1;48919:22:118;48901:14;:40;;;;;;;;:::i;:::-;;48837:104;:168;;;-1:-1:-1;48983:22:118;48965:14;:40;;;;;;;;:::i;:::-;;48837:168;48812:959;;;49263:256;49303:18;:55;49322:9;:26;49332:12;49345:1;49332:15;;;;;;;;:::i;:::-;;;;;;;49322:26;;;;;;;;;;;:35;;;;;;;;;;-1:-1:-1;;;;;49322:35:118;-1:-1:-1;;;;;49303:55:118;-1:-1:-1;;;;;49303:55:118;;;;;;;;;;;;49384:12;49397:1;49384:15;;;;;;;;:::i;:::-;;;;;;;49263:256;;;;;;;;;;;;;;;;;:14;:256::i;:::-;49542:210;49582:14;49622:12;49635:1;49622:15;;;;;;;;:::i;:::-;;;;;;;49542:210;;;;;;;;;;;;;;;;;:14;:210::i;:::-;-1:-1:-1;48718:3:118;;48673:1112;;1423:320:33;-1:-1:-1;;;;;1713:19:33;;:23;;;1423:320::o;47404:476:118:-;1293:14:115;47502:18:118;:54;;:128;;;;;1446:17:115;47576:18:118;:54;;47502:128;47481:227;;;;-1:-1:-1;;;47481:227:118;;46571:2:311;47481:227:118;;;46553:21:311;46610:2;46590:18;;;46583:30;46649:34;46629:18;;;46622:62;-1:-1:-1;;;46700:18:311;;;46693:50;46760:19;;47481:227:118;46369:416:311;47481:227:118;47738:17;;;47765:38;;;;47819:54;;;;;;47738:17;;47785:18;;47819:54;:::i;46800:419::-;1619:7:115;46888:13:118;:44;;:108;;;;;1790:7:115;46952:13:118;:44;;46888:108;46867:202;;;;-1:-1:-1;;;46867:202:118;;46992:2:311;46867:202:118;;;46974:21:311;47031:2;47011:18;;;47004:30;47070:34;47050:18;;;47043:62;-1:-1:-1;;;47121:18:311;;;47114:45;47176:19;;46867:202:118;46790:411:311;46867:202:118;47100:12;;;47123:28;;;;47167:45;;;;;;47100:12;;47138:13;;47167:45;:::i;44808:699::-;993:7:115;44946:31:118;:99;;:218;;;;;1152:7:115;45065:31:118;:99;;44946:218;44925:315;;;;-1:-1:-1;;;44925:315:118;;47408:2:311;44925:315:118;;;47390:21:311;47447:2;47427:18;;;47420:30;-1:-1:-1;;;;;;;;;;;47466:18:311;;;47459:62;-1:-1:-1;;;47537:18:311;;;47530:48;47595:19;;44925:315:118;47206:414:311;44925:315:118;45268:30;;;45308:64;;;;45388:112;;;;;;45268:30;;45341:31;;45388:112;:::i;45739:470::-;45843:26;;;;;:104;;;1939:2:115;45889:21:118;:58;;45843:104;45822:202;;;;-1:-1:-1;;;45822:202:118;;47827:2:311;45822:202:118;;;47809:21:311;47866:2;47846:18;;;47839:30;47905:34;47885:18;;;47878:62;-1:-1:-1;;;47956:18:311;;;47949:49;48015:19;;45822:202:118;47625:415:311;45822:202:118;46055:20;;;46085:44;;;;46145:57;;;;;;46055:20;;46108:21;;46145:57;:::i;48005:227::-;48098:18;;;-1:-1:-1;;;;;48126:32:118;;;-1:-1:-1;;;;;;48126:32:118;;;;;;48174:51;;48098:18;;;-1:-1:-1;;;;;;;;;;;48174:51:118;;;48098:18;;48147:11;;48174:51;:::i;1063:97:26:-;5374:13:25;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:25;;;;;;;:::i;:::-;1126:27:26::1;:25;:27::i;2262:241:221:-:0;2372:13;;;-1:-1:-1;;;;;2395:32:221;;;-1:-1:-1;;;2395:32:221;;;;;;;;;;;2443:53;;;2372:13;;;;;;48631:25:311;;;2482:13:221;;;;;;;48687:2:311;48672:18;;48665:60;2372:13:221;2443:53;;48604:18:311;2443:53:221;48457:274:311;3642:351:222;3769:13;:32;;-1:-1:-1;;;;;;3769:32:222;-1:-1:-1;;;;;3769:32:222;;;;;;3893:16;-1:-1:-1;3893:13:222;:16::i;:::-;3969;-1:-1:-1;;;;;3925:61:222;3946:21;-1:-1:-1;;;;;3925:61:222;-1:-1:-1;;;;;;;;;;;3925:61:222;;;;;;;;;3701:292;3642:351;:::o;7427:264:219:-;7530:15;;-1:-1:-1;;;;;7530:15:219;7522:38;7501:120;;;;-1:-1:-1;;;7501:120:219;;48938:2:311;7501:120:219;;;48920:21:311;48977:2;48957:18;;;48950:30;49016:34;48996:18;;;48989:62;-1:-1:-1;;;49067:18:311;;;49060:33;49110:19;;7501:120:219;48736:399:311;7501:120:219;7632:15;:52;;-1:-1:-1;;;;;;7632:52:219;-1:-1:-1;;;;;7632:52:219;;;;;;;;;;7427:264::o;4959:186::-;5041:8;;;-1:-1:-1;;;;;5059:22:219;;;-1:-1:-1;;;5059:22:219;;;-1:-1:-1;;;;;5059:22:219;;;;;;5097:41;;;5041:8;;;;;;;49347:34:311;;;49412:2;49397:18;;49390:43;;;;5041:8:219;5097:41;;49283:18:311;5097:41:219;49140:299:311;43944:673:118;44116:16;;;44128:4;44116:16;44112:396;;44174:20;44195:4;;44174:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;44173:27;44148:131;;;;-1:-1:-1;;;44148:131:118;;49646:2:311;44148:131:118;;;49628:21:311;49685:2;49665:18;;;49658:30;49724:34;49704:18;;;49697:62;-1:-1:-1;;;49775:18:311;;;49768:43;49828:19;;44148:131:118;49444:409:311;44148:131:118;44112:396;;;44396:20;44417:4;;44396:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;44371:126;;;;-1:-1:-1;;;44371:126:118;;50060:2:311;44371:126:118;;;50042:21:311;50099:2;50079:18;;;50072:30;-1:-1:-1;;;;;;;;;;;50118:18:311;;;50111:62;-1:-1:-1;;;50189:18:311;;;50182:39;50238:19;;44371:126:118;49858:405:311;44371:126:118;44547:8;44518:20;44539:4;;44518:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;-1:-1:-1;;44518:37:118;;;;;;;;;;44571:39;;;;44595:4;;;;44601:8;;44571:39;:::i;50760:2272::-;50933:7;:14;50951:3;50933:21;50912:110;;;;-1:-1:-1;;;50912:110:118;;50800:2:311;50912:110:118;;;50782:21:311;50839:2;50819:18;;;50812:30;50878:34;50858:18;;;50851:62;-1:-1:-1;;;50929:18:311;;;50922:40;50979:19;;50912:110:118;50598:406:311;50912:110:118;51047:18;51079:16;51109:20;51143;51187:7;51176:57;;;;;;;;;;;;:::i;:::-;51571:36;;;51539:29;51571:36;;;:23;:36;;;;;;;;:70;;;;;;;;51874:19;;51033:200;;-1:-1:-1;51033:200:118;;-1:-1:-1;51033:200:118;;-1:-1:-1;51033:200:118;-1:-1:-1;51571:70:118;51874:24;:72;;;;-1:-1:-1;51918:23:118;;;;:28;51874:72;:120;;;;-1:-1:-1;51966:23:118;;;;:28;51874:120;51853:209;;;;-1:-1:-1;;;51853:209:118;;51584:2:311;51853:209:118;;;51566:21:311;51623:2;51603:18;;;51596:30;51662:34;51642:18;;;51635:62;-1:-1:-1;;;51713:18:311;;;51706:40;51763:19;;51853:209:118;51382:406:311;51853:209:118;52115:38;52094:17;52100:10;52094:5;:17::i;:::-;:59;;;;;;;;:::i;:::-;;52073:176;;;;-1:-1:-1;;;52073:176:118;;51995:2:311;52073:176:118;;;51977:21:311;52034:2;52014:18;;;52007:30;-1:-1:-1;;;;;;;;;;;52053:18:311;;;52046:62;52144:34;52124:18;;;52117:62;-1:-1:-1;;;52195:19:311;;;52188:37;52242:19;;52073:176:118;51793:474:311;52073:176:118;52260:30;;;52300:23;;;:38;;;52348:23;;;:38;;;52260:19;52519:21;;;:9;:21;;;;;52551:17;;;:29;;52519:21;;52282:8;;52551:29;;52282:8;;52551:29;:::i;:::-;;;;;;;;52615:12;52590:8;:21;;;:37;;;;;;;:::i;:::-;;;;;;;;52662:12;52637:8;:21;;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;52841:12:118;;-1:-1:-1;52815:23:118;52826:12;52815:8;:23;:::i;:::-;:38;;;;:::i;:::-;52792:8;:19;;;:61;;;;;;;:::i;:::-;;;;-1:-1:-1;;52869:156:118;;;52529:25:311;;;52602:6;52590:19;;52585:2;52570:18;;52563:47;52626:18;;;52619:34;;;52684:2;52669:18;;52662:34;;;52727:3;52712:19;;52705:35;;;52869:156:118;;52516:3:311;52501:19;52869:156:118;;;;;;;50861:2171;;;;;;50760:2272;;:::o;2010:106:26:-;2080:8;:6;:8::i;:::-;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:26;;52953:2:311;2071:38:26;;;52935:21:311;52992:2;52972:18;;;52965:30;-1:-1:-1;;;53011:18:311;;;53004:46;53067:18;;2071:38:26;52751:340:311;12660:297:74;12720:16;12748:22;12773:19;12781:3;12773:7;:19::i;6761:545:219:-;6890:9;6885:415;6909:12;:19;6905:1;:23;6885:415;;;6946:14;6963:12;6976:1;6963:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;7000:22;;;6963:23;7000:22;;;:13;:22;;;;;;;:35;;-1:-1:-1;;;;;;7000:35:219;;;6963:23;-1:-1:-1;7074:29:219;;:13;;:20;:29::i;:::-;7049:119;;;;-1:-1:-1;;;7049:119:219;;53298:2:311;7049:119:219;;;53280:21:311;53337:2;53317:18;;;53310:30;53376:33;53356:18;;;53349:61;53427:18;;7049:119:219;53096:355:311;7049:119:219;7188:41;;7226:1;;7188:41;;;;-1:-1:-1;;;;;;;;;;;7188:41:219;7226:1;;7188:41;-1:-1:-1;7272:3:219;;6885:415;;10793:129:74;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;11374:1454:219:-;11478:9;11459:15;:13;:15::i;:::-;:28;11438:120;;;;-1:-1:-1;;;11438:120:219;;53658:2:311;11438:120:219;;;53640:21:311;53697:2;53677:18;;;53670:30;53736:34;53716:18;;;53709:62;-1:-1:-1;;;53787:18:311;;;53780:43;53840:19;;11438:120:219;53456:409:311;11438:120:219;11569:20;11592:22;:13;:20;:22::i;:::-;11569:45;;11625:25;11670:9;11665:909;11689:12;11685:1;:16;11665:909;;;11719:18;11747:19;:13;11764:1;11747:16;:19::i;:::-;11719:48;;11781:12;11796:23;11807:11;11796:10;:23::i;:::-;11854:15;;11954:26;;;11854:15;11954:26;;;:13;:26;;;;;;;12126:8;;11854:298;;-1:-1:-1;;;11854:298:219;;11781:38;;-1:-1:-1;;;;;;11854:15:219;;;;:32;;11781:38;;11854:298;;11921:11;;11954:26;;;;12002:7;;-1:-1:-1;;;;;;;;12126:8:219;;;;;11854:298;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11854:298:219;;;;;;;;-1:-1:-1;;11854:298:219;;;;;;;;;;;;:::i;:::-;;;11834:670;;12398:25;12419:4;12398:25;;:::i;:::-;;;12446:43;12462:11;12475:7;12484:4;12446:43;;;;;;;;:::i;:::-;;;;;;;;11834:670;;;-1:-1:-1;12285:26:219;;;;;;;:13;:26;;;;;;;;12188:170;;;;;;12226:11;;12259:4;;-1:-1:-1;;;;;12285:26:219;;;;12333:7;;12188:170;:::i;:::-;;;;;;;;11834:670;-1:-1:-1;;12546:3:219;;11665:909;;;-1:-1:-1;12588:21:219;;12584:238;;12703:45;;12685:12;;12703:10;;12726:17;;12685:12;12703:45;12685:12;12703:45;12726:17;12703:10;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12684:64;;;12770:7;12762:49;;;;-1:-1:-1;;;12762:49:219;;56002:2:311;12762:49:219;;;55984:21:311;56041:2;56021:18;;;56014:30;56080:31;56060:18;;;56053:59;56129:18;;12762:49:219;55800:353:311;12762:49:219;12611:211;11428:1400;;11374:1454;:::o;2381:412:222:-;1482:19:26;:17;:19::i;:::-;2472:13:222::1;::::0;-1:-1:-1;;;;;2472:13:222::1;2458:10;:27;2437:120;;;;-1:-1:-1::0;;;2437:120:222::1;;;;;;;:::i;:::-;2576:11;:9;:11::i;:::-;2575:12;2567:70;;;::::0;-1:-1:-1;;;2567:70:222;;56360:2:311;2567:70:222::1;::::0;::::1;56342:21:311::0;56399:2;56379:18;;;56372:30;56438:34;56418:18;;;56411:62;-1:-1:-1;;;56489:18:311;;;56482:43;56542:19;;2567:70:222::1;56158:409:311::0;2567:70:222::1;2713:39;2735:15;2713:13;:39::i;:::-;2768:18;2775:10;2768:18;;;;;;:::i;11531:112:74:-:0;11591:7;11617:19;11625:3;4545:18;;4463:107;11985:135;12056:7;12090:22;12094:3;12106:5;12090:3;:22::i;5165:446:63:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:63;;56774:2:311;5354:81:63;;;56756:21:311;56813:2;56793:18;;;56786:30;56852:34;56832:18;;;56825:62;-1:-1:-1;;;56903:18:311;;;56896:36;56949:19;;5354:81:63;56572:402:311;5354:81:63;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:63;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:63:o;5913:541:219:-;6010:22;;;6044:1;6010:22;;;:13;:22;;;;;;-1:-1:-1;;;;;6010:22:219;:36;5989:118;;;;-1:-1:-1;;;5989:118:219;;57473:2:311;5989:118:219;;;57455:21:311;57512:2;57492:18;;;57485:30;-1:-1:-1;;;;;;;;;;;57531:18:311;;;57524:62;-1:-1:-1;;;57602:18:311;;;57595:33;57645:19;;5989:118:219;57271:399:311;5989:118:219;-1:-1:-1;;;;;6125:18:219;;6117:69;;;;-1:-1:-1;;;6117:69:219;;57877:2:311;6117:69:219;;;57859:21:311;57916:2;57896:18;;;57889:30;57955:34;57935:18;;;57928:62;-1:-1:-1;;;58006:18:311;;;57999:36;58052:19;;6117:69:219;57675:402:311;6117:69:219;6262:26;:13;:26;;;:17;:26::i;:::-;6241:115;;;;-1:-1:-1;;;6241:115:219;;58284:2:311;6241:115:219;;;58266:21:311;58323:2;58303:18;;;58296:30;-1:-1:-1;;;;;;;;;;;58342:18:311;;;58335:62;-1:-1:-1;;;58413:18:311;;;58406:40;58463:19;;6241:115:219;58082:406:311;6241:115:219;6367:22;;;;;;;:13;:22;;;;;;:29;;-1:-1:-1;;;;;;6367:29:219;-1:-1:-1;;;;;6367:29:219;;;;;;;;6412:35;;6367:29;;:22;-1:-1:-1;;;;;;;;;;;6412:35:219;;5913:541;;:::o;2654:161:221:-;2723:14;:34;;-1:-1:-1;;;;;;2723:34:221;-1:-1:-1;;;;;2723:34:221;;;;;;;;2773:35;;;;-1:-1:-1;;2773:35:221;2654:161;:::o;50105:207:118:-;50268:22;:3;50279:10;50268;:22::i;:::-;50292:12;50260:45;;;;;-1:-1:-1;;;50260:45:118;;;;;;;;:::i;1166:95:26:-;5374:13:25;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:25;;;;;;;:::i;:::-;1239:7:26::1;:15:::0;;-1:-1:-1;;1239:15:26::1;::::0;;1166:95::o;5570:109:74:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;11090:135::-;11160:4;11183:35;11191:3;11211:5;11183:7;:35::i;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:74;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:74;2589:12;;4912:118;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;7671:628:63:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;-1:-1:-1;;;8113:60:63;;58919:2:311;8113:60:63;;;58901:21:311;58958:2;58938:18;;;58931:30;58997:31;58977:18;;;58970:59;59046:18;;8113:60:63;58717:353:311;8113:60:63;-1:-1:-1;8208:10:63;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;2786:1388:74:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:74;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;8821:540:63;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:63;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;14:180:311:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:311;;14:180;-1:-1:-1;14:180:311:o;1611:367::-;1674:8;1684:6;1738:3;1731:4;1723:6;1719:17;1715:27;1705:55;;1756:1;1753;1746:12;1705:55;-1:-1:-1;1779:20:311;;-1:-1:-1;;;;;1811:30:311;;1808:50;;;1854:1;1851;1844:12;1808:50;1891:4;1883:6;1879:17;1867:29;;1951:3;1944:4;1934:6;1931:1;1927:14;1919:6;1915:27;1911:38;1908:47;1905:67;;;1968:1;1965;1958:12;1905:67;1611:367;;;;;:::o;1983:784::-;2116:6;2124;2132;2140;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2236:23;;-1:-1:-1;;;;;2308:14:311;;;2305:34;;;2335:1;2332;2325:12;2305:34;2374:70;2436:7;2427:6;2416:9;2412:22;2374:70;:::i;:::-;2463:8;;-1:-1:-1;2348:96:311;-1:-1:-1;2551:2:311;2536:18;;2523:32;;-1:-1:-1;2567:16:311;;;2564:36;;;2596:1;2593;2586:12;2564:36;;2635:72;2699:7;2688:8;2677:9;2673:24;2635:72;:::i;:::-;1983:784;;;;-1:-1:-1;2726:8:311;-1:-1:-1;;;;1983:784:311:o;2772:230::-;-1:-1:-1;;;;;2963:32:311;;;;2945:51;;2933:2;2918:18;;2772:230::o;3215:173::-;3283:20;;-1:-1:-1;;;;;3332:31:311;;3322:42;;3312:70;;3378:1;3375;3368:12;3393:322;3470:6;3478;3486;3539:2;3527:9;3518:7;3514:23;3510:32;3507:52;;;3555:1;3552;3545:12;3507:52;3578:29;3597:9;3578:29;:::i;:::-;3568:39;3654:2;3639:18;;3626:32;;-1:-1:-1;3705:2:311;3690:18;;;3677:32;;3393:322;-1:-1:-1;;;3393:322:311:o;3720:127::-;3781:10;3776:3;3772:20;3769:1;3762:31;3812:4;3809:1;3802:15;3836:4;3833:1;3826:15;3852:257;3924:4;3918:11;;;3956:17;;-1:-1:-1;;;;;3988:34:311;;4024:22;;;3985:62;3982:88;;;4050:18;;:::i;:::-;4086:4;4079:24;3852:257;:::o;4114:255::-;4186:2;4180:9;4228:6;4216:19;;-1:-1:-1;;;;;4250:34:311;;4286:22;;;4247:62;4244:88;;;4312:18;;:::i;4374:275::-;4445:2;4439:9;4510:2;4491:13;;-1:-1:-1;;4487:27:311;4475:40;;-1:-1:-1;;;;;4530:34:311;;4566:22;;;4527:62;4524:88;;;4592:18;;:::i;:::-;4628:2;4621:22;4374:275;;-1:-1:-1;4374:275:311:o;4654:196::-;4727:4;-1:-1:-1;;;;;4749:30:311;;4746:56;;;4782:18;;:::i;:::-;-1:-1:-1;4827:1:311;4823:14;4839:4;4819:25;;4654:196::o;4855:159::-;4922:20;;4982:6;4971:18;;4961:29;;4951:57;;5004:1;5001;4994:12;5019:972;5086:5;5139:3;5132:4;5124:6;5120:17;5116:27;5106:55;;5157:1;5154;5147:12;5106:55;5193:6;5180:20;5219:4;5243:73;5259:56;5312:2;5259:56;:::i;:::-;5243:73;:::i;:::-;5350:15;;;5436:1;5432:10;;;;5420:23;;5416:32;;;5381:12;;;;5460:15;;;5457:35;;;5488:1;5485;5478:12;5457:35;5524:2;5516:6;5512:15;5536:426;5552:6;5547:3;5544:15;5536:426;;;5630:4;5624:3;5619;5615:13;5611:24;5608:114;;;5676:1;5705:2;5701;5694:14;5608:114;5748:22;;:::i;:::-;5797;5815:3;5797:22;:::i;:::-;5790:5;5783:37;5856:32;5884:2;5879:3;5875:12;5856:32;:::i;:::-;5840:14;;;5833:56;5902:18;;5940:12;;;;5578:4;5569:14;5536:426;;;-1:-1:-1;5980:5:311;5019:972;-1:-1:-1;;;;;;5019:972:311:o;5996:393::-;6112:6;6165:2;6153:9;6144:7;6140:23;6136:32;6133:52;;;6181:1;6178;6171:12;6133:52;6208:23;;-1:-1:-1;;;;;6243:30:311;;6240:50;;;6286:1;6283;6276:12;6240:50;6309:74;6375:7;6366:6;6355:9;6351:22;6309:74;:::i;7368:258::-;7435:6;7443;7496:2;7484:9;7475:7;7471:23;7467:32;7464:52;;;7512:1;7509;7502:12;7464:52;7535:28;7553:9;7535:28;:::i;:::-;7525:38;;7582;7616:2;7605:9;7601:18;7582:38;:::i;:::-;7572:48;;7368:258;;;;;:::o;7631:184::-;7689:6;7742:2;7730:9;7721:7;7717:23;7713:32;7710:52;;;7758:1;7755;7748:12;7710:52;7781:28;7799:9;7781:28;:::i;7820:530::-;7862:5;7915:3;7908:4;7900:6;7896:17;7892:27;7882:55;;7933:1;7930;7923:12;7882:55;7956:20;;-1:-1:-1;;;;;7988:26:311;;7985:52;;;8017:18;;:::i;:::-;8061:55;8104:2;8085:13;;-1:-1:-1;;8081:27:311;8110:4;8077:38;8061:55;:::i;:::-;8141:2;8132:7;8125:19;8187:3;8180:4;8175:2;8167:6;8163:15;8159:26;8156:35;8153:55;;;8204:1;8201;8194:12;8153:55;8269:2;8262:4;8254:6;8250:17;8243:4;8234:7;8230:18;8217:55;8317:1;8292:16;;;8310:4;8288:27;8281:38;;;;8296:7;7820:530;-1:-1:-1;;;7820:530:311:o;8355:320::-;8423:6;8476:2;8464:9;8455:7;8451:23;8447:32;8444:52;;;8492:1;8489;8482:12;8444:52;8519:23;;-1:-1:-1;;;;;8554:30:311;;8551:50;;;8597:1;8594;8587:12;8551:50;8620:49;8661:7;8652:6;8641:9;8637:22;8620:49;:::i;8680:127::-;8741:10;8736:3;8732:20;8729:1;8722:31;8772:4;8769:1;8762:15;8796:4;8793:1;8786:15;8812:347;8963:2;8948:18;;8996:1;8985:13;;8975:144;;9041:10;9036:3;9032:20;9029:1;9022:31;9076:4;9073:1;9066:15;9104:4;9101:1;9094:15;8975:144;9128:25;;;8812:347;:::o;9573:173::-;9641:20;;-1:-1:-1;;;;;9690:31:311;;9680:42;;9670:70;;9736:1;9733;9726:12;9751:1948;9956:6;9964;9972;9980;10024:9;10015:7;10011:23;10054:3;10050:2;10046:12;10043:32;;;10071:1;10068;10061:12;10043:32;10094:6;10120:2;10116;10112:11;10109:31;;;10136:1;10133;10126:12;10109:31;10162:22;;:::i;:::-;10149:35;;10207:29;10226:9;10207:29;:::i;:::-;10200:5;10193:44;10269:38;10303:2;10292:9;10288:18;10269:38;:::i;:::-;10264:2;10257:5;10253:14;10246:62;10340:38;10374:2;10363:9;10359:18;10340:38;:::i;:::-;10335:2;10328:5;10324:14;10317:62;10411:38;10445:2;10434:9;10430:18;10411:38;:::i;:::-;10406:2;10399:5;10395:14;10388:62;10511:3;10500:9;10496:19;10483:33;10477:3;10470:5;10466:15;10459:58;10578:3;10567:9;10563:19;10550:33;10544:3;10537:5;10533:15;10526:58;10645:3;10634:9;10630:19;10617:33;10611:3;10604:5;10600:15;10593:58;10712:3;10701:9;10697:19;10684:33;10678:3;10671:5;10667:15;10660:58;10737:3;10800:2;10789:9;10785:18;10772:32;10767:2;10760:5;10756:14;10749:56;;10824:3;10859:38;10893:2;10882:9;10878:18;10859:38;:::i;:::-;10843:14;;;10836:62;10917:3;10952:38;10971:18;;;10952:38;:::i;:::-;10936:14;;;10929:62;11010:3;11045:38;11064:18;;;11045:38;:::i;:::-;11029:14;;;11022:62;11103:3;11138:38;11157:18;;;11138:38;:::i;:::-;11122:14;;;11115:62;11126:5;;-1:-1:-1;11237:18:311;;11224:32;-1:-1:-1;;;;;11305:14:311;;;11302:34;;;11332:1;11329;11322:12;11302:34;11355:74;11421:7;11412:6;11401:9;11397:22;11355:74;:::i;:::-;11345:84;;11482:3;11471:9;11467:19;11454:33;11438:49;;11512:2;11502:8;11499:16;11496:36;;;11528:1;11525;11518:12;11704:899;11756:5;11809:3;11802:4;11794:6;11790:17;11786:27;11776:55;;11827:1;11824;11817:12;11776:55;11863:6;11850:20;11889:4;11913:73;11929:56;11982:2;11929:56;:::i;11913:73::-;12020:15;;;12106:1;12102:10;;;;12090:23;;12086:32;;;12051:12;;;;12130:15;;;12127:35;;;12158:1;12155;12148:12;12127:35;12194:2;12186:6;12182:15;12206:368;12222:6;12217:3;12214:15;12206:368;;;12295:17;;-1:-1:-1;;;;;12328:35:311;;12325:125;;;12404:1;12433:2;12429;12422:14;12325:125;12475:56;12527:3;12522:2;12508:11;12500:6;12496:24;12492:33;12475:56;:::i;:::-;12463:69;;-1:-1:-1;12552:12:311;;;;12239;;12206:368;;12608:784;12745:6;12753;12761;12769;12777;12830:3;12818:9;12809:7;12805:23;12801:33;12798:53;;;12847:1;12844;12837:12;12798:53;12874:23;;-1:-1:-1;;;;;12946:14:311;;;12943:34;;;12973:1;12970;12963:12;12943:34;12996:49;13037:7;13028:6;13017:9;13013:22;12996:49;:::i;:::-;12986:59;;13098:2;13087:9;13083:18;13070:32;13054:48;;13127:2;13117:8;13114:16;13111:36;;;13143:1;13140;13133:12;13111:36;;13166:61;13219:7;13208:8;13197:9;13193:24;13166:61;:::i;:::-;13156:71;;;13274:2;13263:9;13259:18;13246:32;13236:42;;13297:37;13330:2;13319:9;13315:18;13297:37;:::i;:::-;12608:784;;;;-1:-1:-1;12608:784:311;;13381:3;13366:19;13353:33;;12608:784;-1:-1:-1;;12608:784:311:o;13793:337::-;13859:6;13867;13920:2;13908:9;13899:7;13895:23;13891:32;13888:52;;;13936:1;13933;13926:12;13888:52;13972:9;13959:23;13949:33;;14032:2;14021:9;14017:18;14004:32;14076:4;14069:5;14065:16;14058:5;14055:27;14045:55;;14096:1;14093;14086:12;14045:55;14119:5;14109:15;;;13793:337;;;;;:::o;14135:461::-;14188:3;14226:5;14220:12;14253:6;14248:3;14241:19;14279:4;14308:2;14303:3;14299:12;14292:19;;14345:2;14338:5;14334:14;14366:1;14376:195;14390:6;14387:1;14384:13;14376:195;;;14455:13;;-1:-1:-1;;;;;14451:39:311;14439:52;;14511:12;;;;14546:15;;;;14487:1;14405:9;14376:195;;;-1:-1:-1;14587:3:311;;14135:461;-1:-1:-1;;;;;14135:461:311:o;14601:435::-;14654:3;14692:5;14686:12;14719:6;14714:3;14707:19;14745:4;14774:2;14769:3;14765:12;14758:19;;14811:2;14804:5;14800:14;14832:1;14842:169;14856:6;14853:1;14850:13;14842:169;;;14917:13;;14905:26;;14951:12;;;;14986:15;;;;14878:1;14871:9;14842:169;;15041:250;15126:1;15136:113;15150:6;15147:1;15144:13;15136:113;;;15226:11;;;15220:18;15207:11;;;15200:39;15172:2;15165:10;15136:113;;;-1:-1:-1;;15283:1:311;15265:16;;15258:27;15041:250::o;15296:270::-;15337:3;15375:5;15369:12;15402:6;15397:3;15390:19;15418:76;15487:6;15480:4;15475:3;15471:14;15464:4;15457:5;15453:16;15418:76;:::i;:::-;15548:2;15527:15;-1:-1:-1;;15523:29:311;15514:39;;;;15555:4;15510:50;;15296:270;-1:-1:-1;;15296:270:311:o;15571:614::-;15622:3;15660:5;15654:12;15687:6;15682:3;15675:19;15713:4;15754:2;15749:3;15745:12;15779:11;15806;15799:18;;15856:6;15853:1;15849:14;15842:5;15838:26;15826:38;;15898:2;15891:5;15887:14;15919:1;15929:230;15943:6;15940:1;15937:13;15929:230;;;16014:5;16008:4;16004:16;15999:3;15992:29;16042:37;16074:4;16065:6;16059:13;16042:37;:::i;:::-;16137:12;;;;16034:45;-1:-1:-1;16102:15:311;;;;15965:1;15958:9;15929:230;;;-1:-1:-1;16175:4:311;;15571:614;-1:-1:-1;;;;;;;15571:614:311:o;16190:685::-;16543:2;16532:9;16525:21;16506:4;16569:56;16621:2;16610:9;16606:18;16598:6;16569:56;:::i;:::-;16673:9;16665:6;16661:22;16656:2;16645:9;16641:18;16634:50;16707:44;16744:6;16736;16707:44;:::i;:::-;16693:58;;16799:9;16791:6;16787:22;16782:2;16771:9;16767:18;16760:50;16827:42;16862:6;16854;16827:42;:::i;16880:186::-;16939:6;16992:2;16980:9;16971:7;16967:23;16963:32;16960:52;;;17008:1;17005;16998:12;16960:52;17031:29;17050:9;17031:29;:::i;17071:261::-;17250:2;17239:9;17232:21;17213:4;17270:56;17322:2;17311:9;17307:18;17299:6;17270:56;:::i;17337:675::-;17391:5;17444:3;17437:4;17429:6;17425:17;17421:27;17411:55;;17462:1;17459;17452:12;17411:55;17498:6;17485:20;17524:4;17548:73;17564:56;17617:2;17564:56;:::i;17548:73::-;17655:15;;;17741:1;17737:10;;;;17725:23;;17721:32;;;17686:12;;;;17765:15;;;17762:35;;;17793:1;17790;17783:12;17762:35;17829:2;17821:6;17817:15;17841:142;17857:6;17852:3;17849:15;17841:142;;;17923:17;;17911:30;;17961:12;;;;17874;;17841:142;;18017:1592;18197:6;18205;18213;18221;18274:3;18262:9;18253:7;18249:23;18245:33;18242:53;;;18291:1;18288;18281:12;18242:53;18318:23;;-1:-1:-1;;;;;18390:14:311;;;18387:34;;;18417:1;18414;18407:12;18387:34;18455:6;18444:9;18440:22;18430:32;;18500:7;18493:4;18489:2;18485:13;18481:27;18471:55;;18522:1;18519;18512:12;18471:55;18558:2;18545:16;18580:4;18604:73;18620:56;18673:2;18620:56;:::i;18604:73::-;18711:15;;;18793:1;18789:10;;;;18781:19;;18777:28;;;18742:12;;;;18817:19;;;18814:39;;;18849:1;18846;18839:12;18814:39;18873:11;;;;18893:148;18909:6;18904:3;18901:15;18893:148;;;18975:23;18994:3;18975:23;:::i;:::-;18963:36;;18926:12;;;;19019;;;;18893:148;;;19060:5;-1:-1:-1;;19103:18:311;;19090:32;;-1:-1:-1;;19134:16:311;;;19131:36;;;19163:1;19160;19153:12;19131:36;19186:63;19241:7;19230:8;19219:9;19215:24;19186:63;:::i;:::-;19176:73;;19302:2;19291:9;19287:18;19274:32;19258:48;;19331:2;19321:8;19318:16;19315:36;;;19347:1;19344;19337:12;19315:36;19370:61;19423:7;19412:8;19401:9;19397:24;19370:61;:::i;:::-;19360:71;;19484:2;19473:9;19469:18;19456:32;19440:48;;19513:2;19503:8;19500:16;19497:36;;;19529:1;19526;19519:12;19497:36;;19552:51;19595:7;19584:8;19573:9;19569:24;19552:51;:::i;:::-;19542:61;;;18017:1592;;;;;;;:::o;19614:252::-;19681:6;19689;19742:2;19730:9;19721:7;19717:23;19713:32;19710:52;;;19758:1;19755;19748:12;19710:52;19781:28;19799:9;19781:28;:::i;:::-;19771:38;19856:2;19841:18;;;;19828:32;;-1:-1:-1;;;19614:252:311:o;20195:160::-;20260:20;;20316:13;;20309:21;20299:32;;20289:60;;20345:1;20342;20335:12;20360:254;20425:6;20433;20486:2;20474:9;20465:7;20461:23;20457:32;20454:52;;;20502:1;20499;20492:12;20454:52;20525:29;20544:9;20525:29;:::i;:::-;20515:39;;20573:35;20604:2;20593:9;20589:18;20573:35;:::i;20619:284::-;20677:6;20730:2;20718:9;20709:7;20705:23;20701:32;20698:52;;;20746:1;20743;20736:12;20698:52;20772:23;;-1:-1:-1;;;;;20824:30:311;;20814:41;;20804:69;;20869:1;20866;20859:12;20908:665;20984:6;20992;21000;21053:2;21041:9;21032:7;21028:23;21024:32;21021:52;;;21069:1;21066;21059:12;21021:52;21096:23;;-1:-1:-1;;;;;21168:14:311;;;21165:34;;;21195:1;21192;21185:12;21165:34;21233:6;21222:9;21218:22;21208:32;;21278:7;21271:4;21267:2;21263:13;21259:27;21249:55;;21300:1;21297;21290:12;21249:55;21340:2;21327:16;21366:2;21358:6;21355:14;21352:34;;;21382:1;21379;21372:12;21352:34;21429:7;21422:4;21413:6;21409:2;21405:15;21401:26;21398:39;21395:59;;;21450:1;21447;21440:12;21395:59;21481:4;21473:13;;;;-1:-1:-1;21505:6:311;-1:-1:-1;21530:37:311;;21546:20;;;-1:-1:-1;21530:37:311;:::i;:::-;21520:47;;20908:665;;;;;:::o;22070:254::-;22138:6;22146;22199:2;22187:9;22178:7;22174:23;22170:32;22167:52;;;22215:1;22212;22205:12;22167:52;22251:9;22238:23;22228:33;;22280:38;22314:2;22303:9;22299:18;22280:38;:::i;22670:252::-;22737:6;22745;22798:2;22786:9;22777:7;22773:23;22769:32;22766:52;;;22814:1;22811;22804:12;22766:52;22850:9;22837:23;22827:33;;22879:37;22912:2;22901:9;22897:18;22879:37;:::i;23132:643::-;23301:2;23353:21;;;23423:13;;23326:18;;;23445:22;;;23272:4;;23301:2;23524:15;;;;23498:2;23483:18;;;23272:4;23567:182;23581:6;23578:1;23575:13;23567:182;;;23646:13;;23661:6;23642:26;23630:39;;23724:15;;;;23689:12;;;;23603:1;23596:9;23567:182;;;-1:-1:-1;23766:3:311;;23132:643;-1:-1:-1;;;;;;23132:643:311:o;24194:304::-;-1:-1:-1;;;;;24424:15:311;;;24406:34;;24476:15;;24471:2;24456:18;;24449:43;24356:2;24341:18;;24194:304::o;25266:127::-;25327:10;25322:3;25318:20;25315:1;25308:31;25358:4;25355:1;25348:15;25382:4;25379:1;25372:15;25398:521;25475:4;25481:6;25541:11;25528:25;25635:2;25631:7;25620:8;25604:14;25600:29;25596:43;25576:18;25572:68;25562:96;;25654:1;25651;25644:12;25562:96;25681:33;;25733:20;;;-1:-1:-1;;;;;;25765:30:311;;25762:50;;;25808:1;25805;25798:12;25762:50;25841:4;25829:17;;-1:-1:-1;25872:14:311;25868:27;;;25858:38;;25855:58;;;25909:1;25906;25899:12;25924:271;26107:6;26099;26094:3;26081:33;26063:3;26133:16;;26158:13;;;26133:16;25924:271;-1:-1:-1;25924:271:311:o;27031:266::-;27119:6;27114:3;27107:19;27171:6;27164:5;27157:4;27152:3;27148:14;27135:43;-1:-1:-1;27223:1:311;27198:16;;;27216:4;27194:27;;;27187:38;;;;27279:2;27258:15;;;-1:-1:-1;;27254:29:311;27245:39;;;27241:50;;27031:266::o;27302:1830::-;-1:-1:-1;;;;;27706:15:311;;;27688:34;;27638:2;27741;27759:18;;;27752:30;;;27623:18;;;27817:22;;;27590:4;;27897:6;;27870:3;27855:19;;27590:4;27931:191;27945:6;27942:1;27939:13;27931:191;;;28038:2;28010:26;28029:6;28010:26;:::i;:::-;28006:35;27994:48;;28097:15;;;;28062:12;;;;27967:1;27960:9;27931:191;;;-1:-1:-1;28158:19:311;;;28153:2;28138:18;;28131:47;28212:19;;;28249:12;;;;-1:-1:-1;28301:1:311;28297:14;;;28288:24;;28284:33;;;-1:-1:-1;28342:6:311;28368:1;28378:725;28394:6;28389:3;28386:15;28378:725;;;28465:16;;;-1:-1:-1;;28461:30:311;28447:45;;28531:22;;28608:14;28604:27;;;-1:-1:-1;;28600:41:311;28576:66;;28566:94;;28656:1;28653;28646:12;28566:94;28686:31;;28791:14;;;;28744:19;-1:-1:-1;;;;;28821:30:311;;28818:50;;;28864:1;28861;28854:12;28818:50;28917:6;28901:14;28897:27;28888:7;28884:41;28881:61;;;28938:1;28935;28928:12;28881:61;28965:50;29008:6;29000;28991:7;28965:50;:::i;:::-;29079:14;;;;28955:60;-1:-1:-1;;;29040:17:311;;;;28420:1;28411:11;28378:725;;;-1:-1:-1;29120:6:311;;27302:1830;-1:-1:-1;;;;;;;;;;;27302:1830:311:o;29137:274::-;-1:-1:-1;;;;;29329:32:311;;;;29311:51;;29393:2;29378:18;;29371:34;29299:2;29284:18;;29137:274::o;29416:184::-;29486:6;29539:2;29527:9;29518:7;29514:23;29510:32;29507:52;;;29555:1;29552;29545:12;29507:52;-1:-1:-1;29578:16:311;;29416:184;-1:-1:-1;29416:184:311:o;29605:127::-;29666:10;29661:3;29657:20;29654:1;29647:31;29697:4;29694:1;29687:15;29721:4;29718:1;29711:15;29737:125;29802:9;;;29823:10;;;29820:36;;;29836:18;;:::i;29867:397::-;30069:2;30051:21;;;30108:2;30088:18;;;30081:30;30147:34;30142:2;30127:18;;30120:62;-1:-1:-1;;;30213:2:311;30198:18;;30191:31;30254:3;30239:19;;29867:397::o;30636:245::-;30715:6;30723;30776:2;30764:9;30755:7;30751:23;30747:32;30744:52;;;30792:1;30789;30782:12;30744:52;-1:-1:-1;;30815:16:311;;30871:2;30856:18;;;30850:25;30815:16;;30850:25;;-1:-1:-1;30636:245:311:o;31294:410::-;31496:2;31478:21;;;31535:2;31515:18;;;31508:30;31574:34;31569:2;31554:18;;31547:62;-1:-1:-1;;;31640:2:311;31625:18;;31618:44;31694:3;31679:19;;31294:410::o;36791:182::-;-1:-1:-1;;;;;36898:10:311;;;36910;;;36894:27;;36933:11;;;36930:37;;;36947:18;;:::i;36978:380::-;37057:1;37053:12;;;;37100;;;37121:61;;37175:4;37167:6;37163:17;37153:27;;37121:61;37228:2;37220:6;37217:14;37197:18;37194:38;37191:161;;37274:10;37269:3;37265:20;37262:1;37255:31;37309:4;37306:1;37299:15;37337:4;37334:1;37327:15;37363:128;37430:9;;;37451:11;;;37448:37;;;37465:18;;:::i;39609:135::-;39648:3;39669:17;;;39666:43;;39689:18;;:::i;:::-;-1:-1:-1;39736:1:311;39725:13;;39609:135::o;39749:463::-;40008:25;;;40064:2;40049:18;;40042:34;;;;40107:2;40092:18;;40085:34;;;;40150:2;40135:18;;40128:34;40193:3;40178:19;;40171:35;39995:3;39980:19;;39749:463::o;40217:1183::-;40734:25;;;-1:-1:-1;;;;;40795:32:311;;40790:2;40775:18;;40768:60;40722:3;40859:2;40844:18;;40837:30;;;40693:4;;40890:56;40927:18;;;40919:6;40890:56;:::i;:::-;40876:70;;40994:9;40986:6;40982:22;40977:2;40966:9;40962:18;40955:50;41028:44;41065:6;41057;41028:44;:::i;:::-;41014:58;;41121:9;41113:6;41109:22;41103:3;41092:9;41088:19;41081:51;41155:42;41190:6;41182;41155:42;:::i;:::-;41141:56;;41234:6;41228:3;41217:9;41213:19;41206:35;41278:6;41272:3;41261:9;41257:19;41250:35;41334:9;41326:6;41322:22;41316:3;41305:9;41301:19;41294:51;41362:32;41387:6;41379;41362:32;:::i;:::-;41354:40;40217:1183;-1:-1:-1;;;;;;;;;;;40217:1183:311:o;42712:288::-;42887:6;42876:9;42869:25;42930:2;42925;42914:9;42910:18;42903:30;42850:4;42950:44;42990:2;42979:9;42975:18;42967:6;42950:44;:::i;45767:248::-;45941:25;;;45997:2;45982:18;;45975:34;45929:2;45914:18;;45767:248::o;48045:407::-;48247:2;48229:21;;;48286:2;48266:18;;;48259:30;48325:34;48320:2;48305:18;;48298:62;-1:-1:-1;;;48391:2:311;48376:18;;48369:41;48442:3;48427:19;;48045:407::o;50268:325::-;50447:2;50436:9;50429:21;50410:4;50467:61;50524:2;50513:9;50509:18;50501:6;50493;50467:61;:::i;:::-;50459:69;;50578:6;50571:14;50564:22;50559:2;50548:9;50544:18;50537:50;50268:325;;;;;;:::o;51009:368::-;51106:6;51114;51122;51130;51183:3;51171:9;51162:7;51158:23;51154:33;51151:53;;;51200:1;51197;51190:12;51151:53;-1:-1:-1;;51223:16:311;;51279:2;51264:18;;51258:25;51323:2;51308:18;;51302:25;51367:2;51352:18;;;51346:25;51223:16;;51258:25;;-1:-1:-1;51346:25:311;;-1:-1:-1;51009:368:311;-1:-1:-1;51009:368:311:o;53870:573::-;54146:6;54134:19;;54116:38;;-1:-1:-1;;;;;54190:32:311;;54185:2;54170:18;;54163:60;54210:3;54254:2;54239:18;;54232:31;;;-1:-1:-1;;54280:45:311;;54305:19;;54297:6;54280:45;:::i;:::-;54356:2;54341:18;;54334:34;;;;-1:-1:-1;;;;;;54405:31:311;;;;54399:3;54384:19;;;54377:60;54272:53;53870:573;-1:-1:-1;;;53870:573:311:o;54448:288::-;54517:6;54570:2;54558:9;54549:7;54545:23;54541:32;54538:52;;;54586:1;54583;54576:12;54538:52;54612:16;;-1:-1:-1;;;;;54657:30:311;;54647:41;;54637:69;;54702:1;54699;54692:12;54741:370;54954:6;54946;54942:19;54931:9;54924:38;54998:2;54993;54982:9;54978:18;54971:30;54905:4;55018:44;55058:2;55047:9;55043:18;55035:6;55018:44;:::i;:::-;55010:52;;55098:6;55093:2;55082:9;55078:18;55071:34;54741:370;;;;;;:::o;55116:469::-;55357:6;55349;55345:19;55334:9;55327:38;55401:6;55396:2;55385:9;55381:18;55374:34;55473:1;55469;55464:3;55460:11;55456:19;55448:6;55444:32;55439:2;55428:9;55424:18;55417:60;55513:3;55508:2;55497:9;55493:18;55486:31;55308:4;55534:45;55574:3;55563:9;55559:19;55551:6;55534:45;:::i;56979:287::-;57108:3;57146:6;57140:13;57162:66;57221:6;57216:3;57209:4;57201:6;57197:17;57162:66;:::i;:::-;57244:16;;;;;56979:287;-1:-1:-1;;56979:287:311:o;58493:219::-;58642:2;58631:9;58624:21;58605:4;58662:44;58702:2;58691:9;58687:18;58679:6;58662:44;:::i;59075:127::-;59136:10;59131:3;59127:20;59124:1;59117:31;59167:4;59164:1;59157:15;59191:4;59188:1;59181:15;59332:544;59433:2;59428:3;59425:11;59422:448;;;59469:1;59494:5;59490:2;59483:17;59539:4;59535:2;59525:19;59609:2;59597:10;59593:19;59590:1;59586:27;59580:4;59576:38;59645:4;59633:10;59630:20;59627:47;;;-1:-1:-1;59668:4:311;59627:47;59723:2;59718:3;59714:12;59711:1;59707:20;59701:4;59697:31;59687:41;;59778:82;59796:2;59789:5;59786:13;59778:82;;;59841:17;;;59822:1;59811:13;59778:82;;;59782:3;;;59332:544;;;:::o;60052:1348::-;60170:10;;-1:-1:-1;;;;;60192:30:311;;60189:56;;;60225:18;;:::i;:::-;60254:96;60343:6;60303:38;60335:4;60329:11;60303:38;:::i;:::-;60297:4;60254:96;:::i;:::-;60405:4;;60469:2;60458:14;;60486:1;60481:662;;;;61187:1;61204:6;61201:89;;;-1:-1:-1;61256:19:311;;;61250:26;61201:89;-1:-1:-1;;60009:1:311;60005:11;;;60001:24;59997:29;59987:40;60033:1;60029:11;;;59984:57;61303:81;;60451:943;;60481:662;59279:1;59272:14;;;59316:4;59303:18;;-1:-1:-1;;60517:20:311;;;60634:236;60648:7;60645:1;60642:14;60634:236;;;60737:19;;;60731:26;60716:42;;60829:27;;;;60797:1;60785:14;;;;60664:19;;60634:236;;;60638:3;60898:6;60889:7;60886:19;60883:201;;;60959:19;;;60953:26;-1:-1:-1;;61042:1:311;61038:14;;;61054:3;61034:24;61030:37;61026:42;61011:58;60996:74;;60883:201;-1:-1:-1;;;;;61130:1:311;61114:14;;;61110:22;61097:36;;-1:-1:-1;60052:1348:311:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addExternalChainConfigs((uint16,address)[])": "13cb1652",
    "breakGlassGuardian()": "0fbc82b8",
    "bridgeCost(uint16)": "37d6d162",
    "bridgeCostAll()": "912f8a65",
    "cancel(uint256)": "40e58ee5",
    "castVote(uint256,uint8)": "56781388",
    "chainAddressVotes(uint256,uint16)": "f5c18022",
    "chainVoteCollectorVotes(uint16,uint256)": "80e6769d",
    "crossChainVoteCollectionPeriod()": "c798d6b1",
    "currentUserLiveProposals(address)": "99f99c8e",
    "distributor()": "bfe10928",
    "execute(uint256)": "fe0d94c1",
    "executeBreakGlass(address[],bytes[])": "06a108ec",
    "fromWormholeFormat(bytes32)": "e17563df",
    "gasLimit()": "f68016b7",
    "getAllTargetChains()": "f9bae9d0",
    "getAllTargetChainsLength()": "9ba9c39d",
    "getCurrentVotes(address)": "b4b5ea57",
    "getNumLiveProposals()": "8cd96644",
    "getProposalData(uint256)": "6e768530",
    "getReceipt(uint256,address)": "e23a9a52",
    "getUserLiveProposals(address)": "75a80a57",
    "getVotes(address,uint256,uint256)": "11fd26f4",
    "initialize((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint128,address,address,address),(uint16,address)[],bytes[])": "4b7e9209",
    "isTrustedSender(uint16,address)": "35a2017d",
    "isTrustedSender(uint16,bytes32)": "d4f3826b",
    "kickGuardian()": "a8d164ac",
    "liveProposals()": "a62fb563",
    "maxUserLiveProposals()": "fc3452c9",
    "pause()": "8456cb59",
    "pauseDuration()": "0526679c",
    "pauseGuardian()": "24a3d622",
    "pauseStartTime()": "94d7eaa4",
    "pauseUsed()": "55703ceb",
    "paused()": "5c975abb",
    "processedNonces(bytes32)": "404a4edb",
    "proposalActive(uint256)": "35743ac9",
    "proposalCount()": "da35c664",
    "proposalInformation(uint256)": "1fb6b132",
    "proposalThreshold()": "b58131b0",
    "proposalVotes(uint256)": "544ffc9c",
    "proposals(uint256)": "013cf08b",
    "propose(address[],uint256[],bytes[],string)": "7d5e81e2",
    "quorum()": "1703a018",
    "rebroadcastProposal(uint256)": "9380a704",
    "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
    "removeExternalChainConfigs((uint16,address)[])": "79173a2d",
    "setBreakGlassGuardian(address)": "c9ba036b",
    "setGasLimit(uint96)": "9ffe56f7",
    "setNewStakedWell(address,bool)": "9d47ea55",
    "state(uint256)": "3e4f49e6",
    "stkWell()": "0d3cfee2",
    "targetAddress(uint16)": "ae8e397f",
    "unpause()": "3f4ba83a",
    "updateApprovedCalldata(bytes,bool)": "d2c0cefd",
    "updateCrossChainVoteCollectionPeriod(uint256)": "87850f81",
    "updateMaxUserLiveProposals(uint256)": "f3804cff",
    "updateProposalThreshold(uint256)": "57ad6279",
    "updateQuorum(uint256)": "35680dc2",
    "updateVotingPeriod(uint256)": "ef00ef43",
    "useTimestamps()": "6bda81bf",
    "votingPeriod()": "02a251a3",
    "well()": "c0878f0c",
    "whitelistedCalldatas(bytes)": "39cbd602",
    "wormholeRelayer()": "da25b725",
    "xWell()": "406ea4a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"breakGlassGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"name\":\"BreakGlassExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"BreakGlassGuardianChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"BridgeOutFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dstWormholeChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"BridgeOutSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"CalldataApprovalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"name\":\"CrossChainVoteCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"CrossChainVoteCollectionPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"oldGasLimit\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newGasLimit\",\"type\":\"uint96\"}],\"name\":\"GasLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"GovernanceReturnAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStakedWell\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"toUseTimestamps\",\"type\":\"bool\"}],\"name\":\"NewStakedWellSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPauseDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPauseDuration\",\"type\":\"uint256\"}],\"name\":\"PauseDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPauseGuardian\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauseGuardian\",\"type\":\"address\"}],\"name\":\"PauseGuardianUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newPauseStartTime\",\"type\":\"uint256\"}],\"name\":\"PauseTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ProposalRebroadcasted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"QuroumVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"StartBlockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"TargetAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UserMaxProposalsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"voteValue\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodChanged\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct WormholeTrustedSender.TrustedSender[]\",\"name\":\"_trustedSenders\",\"type\":\"tuple[]\"}],\"name\":\"addExternalChainConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"breakGlassGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstWormholeChainId\",\"type\":\"uint16\"}],\"name\":\"bridgeCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeCostAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"voteValue\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"wormholeChainId\",\"type\":\"uint16\"}],\"name\":\"chainAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"wormholeChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"chainVoteCollectorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainVoteCollectionPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"currentUserLiveProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"contract SnapshotInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"name\":\"executeBreakGlass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"whFormatAddress\",\"type\":\"bytes32\"}],\"name\":\"fromWormholeFormat\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTargetChains\",\"outputs\":[{\"internalType\":\"uint16[]\",\"name\":\"\",\"type\":\"uint16[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTargetChainsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumLiveProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalData\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"voteValue\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLiveProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"well\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"xWell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stkWell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crossChainVoteCollectionPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUserLiveProposals\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"pauseDuration\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"pauseGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"breakGlassGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wormholeRelayer\",\"type\":\"address\"}],\"internalType\":\"struct MultichainGovernor.InitializeData\",\"name\":\"initData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct WormholeTrustedSender.TrustedSender[]\",\"name\":\"trustedSenders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isTrustedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"addr\",\"type\":\"bytes32\"}],\"name\":\"isTrustedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kickGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liveProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxUserLiveProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseDuration\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseStartTime\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"processedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalInformation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"voteSnapshotTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crossChainVoteCollectionEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"voteSnapshotTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crossChainVoteCollectionEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteSnapshotBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"rebroadcastProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"senderAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct WormholeTrustedSender.TrustedSender[]\",\"name\":\"_trustedSenders\",\"type\":\"tuple[]\"}],\"name\":\"removeExternalChainConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"setBreakGlassGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"newGasLimit\",\"type\":\"uint96\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStakedWell\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toUseTimestamps\",\"type\":\"bool\"}],\"name\":\"setNewStakedWell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IMultichainGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stkWell\",\"outputs\":[{\"internalType\":\"contract SnapshotInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"targetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"updateApprovedCalldata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCrossChainVoteCollectionPeriod\",\"type\":\"uint256\"}],\"name\":\"updateCrossChainVoteCollectionPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxLiveProposals\",\"type\":\"uint256\"}],\"name\":\"updateMaxUserLiveProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"updateProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorum\",\"type\":\"uint256\"}],\"name\":\"updateQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"updateVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useTimestamps\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"well\",\"outputs\":[{\"internalType\":\"contract SnapshotInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"whitelistedCalldata\",\"type\":\"bytes\"}],\"name\":\"whitelistedCalldatas\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xWell\",\"outputs\":[{\"internalType\":\"contract xWELL\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BridgeOutFailed(uint16,bytes,uint256)\":{\"params\":{\"dstChainId\":\"destination chain id to send tokens to\",\"payload\":\"payload that failed to send\",\"refundAmount\":\"amount to refund\"}},\"BridgeOutSuccess(uint16,uint256,address,bytes)\":{\"params\":{\"cost\":\"cost of the bridge out\",\"dst\":\"destination address to send tokens to\",\"dstWormholeChainId\":\"destination wormhole chain id to send tokens to\",\"payload\":\"payload that was sent\"}},\"CalldataApprovalUpdated(bytes,bool)\":{\"params\":{\"approved\":\"whether or not the calldata was approved or unapproved\",\"data\":\"the calldata that was approved or unapproved\"}},\"CrossChainVoteCollected(uint256,uint16,uint256,uint256,uint256)\":{\"params\":{\"abstainVotes\":\"the number of votes abstaining from the proposal\",\"againstVotes\":\"the number of votes against the proposal\",\"forVotes\":\"the number of votes for the proposal\",\"proposalId\":\"the proposal id\",\"sourceChain\":\"the wormhole chain id the vote was collected from\"}},\"GasLimitUpdated(uint96,uint96)\":{\"params\":{\"newGasLimit\":\"new gas limit\",\"oldGasLimit\":\"old gas limit\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"PauseDurationUpdated(uint256,uint256)\":{\"params\":{\"newPauseDuration\":\"new pause duration\",\"oldPauseDuration\":\"old pause duration\"}},\"PauseGuardianUpdated(address,address)\":{\"params\":{\"newPauseGuardian\":\"new pause guardian\",\"oldPauseGuardian\":\"old pause guardian\"}},\"PauseTimeUpdated(uint256)\":{\"params\":{\"newPauseStartTime\":\"new pause start time\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"ProposalRebroadcasted(uint256,bytes)\":{\"params\":{\"data\":\"the calldata that was rebroadcasted\",\"proposalId\":\"the proposal id\"}},\"TargetAddressUpdated(uint16,address)\":{\"params\":{\"dstChainId\":\"destination chain id to send tokens to\",\"target\":\"address to send tokens to\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addExternalChainConfigs((uint16,address)[])\":{\"params\":{\"_trustedSenders\":\"array of trusted senders to add\"}},\"bridgeCost(uint16)\":{\"details\":\"this function returns 0 if the quote fails. in all other cases, the value returned should be non zero.\",\"params\":{\"dstWormholeChainId\":\"Destination chain id\"}},\"cancel(uint256)\":{\"details\":\"callable only by the proposer, cancels proposal if it has not been executed  cancellation is allowed in either of these flows:  - proposer cancels  - permissionless cancel, user voting power currently drops below threshold and proposal is in one of the following states: - succeeded - active - cross chain vote collection period Edge Case:   If proposal threshold is increased in an active governance proposal, and a user has proposed when they met the old proposal threshold, but not the new one, then anyone can cancel their proposal.\"},\"castVote(uint256,uint8)\":{\"details\":\"allows user to cast vote for a proposal\",\"params\":{\"proposalId\":\"the id of the proposal to vote on\",\"voteValue\":\"the value of the vote, can be either YES, NO, or ABSTAIN\"}},\"chainAddressVotes(uint256,uint16)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\",\"wormholeChainId\":\"the chain id to check votes from\"}},\"currentUserLiveProposals(address)\":{\"params\":{\"user\":\"The address of the user to check this number should never be greater than the constant MAX_USER_LIVE_PROPOSALS\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal to execute\"}},\"executeBreakGlass(address[],bytes[])\":{\"params\":{\"calldatas\":\"the calldatas to call\",\"targets\":\"the targets to call\"}},\"fromWormholeFormat(bytes32)\":{\"params\":{\"whFormatAddress\":\"the bytes32 address to convert\"},\"returns\":{\"_0\":\"the address\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address of the account to check\"}},\"getProposalData(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\"}},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\",\"voter\":\"the address of the voter to check if hasVoted is false, this implies that vote value and votes are both 0\"}},\"getUserLiveProposals(address)\":{\"params\":{\"user\":\"The address of the user to check\"}},\"getVotes(address,uint256,uint256)\":{\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to check the balance at\",\"timestamp\":\"The unix timestamp in seconds to check the balance at\"}},\"initialize((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint128,address,address,address),(uint16,address)[],bytes[])\":{\"params\":{\"calldatas\":\"calldatas to whitelist for break glass guardian\",\"initData\":\"initialization data\",\"trustedSenders\":\"that can relay messages to this contract\"}},\"isTrustedSender(uint16,address)\":{\"params\":{\"addr\":\"The address to check\",\"chainId\":\"The wormhole chain id to check\"}},\"isTrustedSender(uint16,bytes32)\":{\"params\":{\"addr\":\"The address to check\",\"chainId\":\"The wormhole chain id to check\"}},\"proposalActive(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\"}},\"proposalInformation(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\"}},\"proposalVotes(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal to check\"}},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"Returns the proposal ID for the proposed proposal only callable if user has proposal threshold or more votes\",\"params\":{\"calldatas\":\"the list of calldatas to be used for the calls\",\"description\":\"the description of the proposal\",\"targets\":\"the list of target addresses for calls to be made\",\"values\":\"the list of values to be used for the calls\"}},\"rebroadcastProposal(uint256)\":{\"details\":\"can only be called if the proposal is in the active state\",\"params\":{\"proposalId\":\"the id of the proposal to rebroadcast\"}},\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"params\":{\"nonce\":\"the unique message ID\",\"payload\":\"the payload of the message, contains the to and amount additional vaas, unused parameter\",\"senderAddress\":\"the address of the sender on the source chain, bytes32 encoded\",\"sourceChain\":\"the chain id of the source chain\"}},\"removeExternalChainConfigs((uint16,address)[])\":{\"params\":{\"_trustedSenders\":\"array of trusted senders to remove\"}},\"setBreakGlassGuardian(address)\":{\"params\":{\"newGuardian\":\"the new break glass guardian address\"}},\"setGasLimit(uint96)\":{\"params\":{\"newGasLimit\":\"new gas limit to set\"}},\"setNewStakedWell(address,bool)\":{\"params\":{\"newStakedWell\":\"the new stkWell token address\",\"toUseTimestamps\":\"whether or not to use timestamps for voting\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to check\"}},\"updateApprovedCalldata(bytes,bool)\":{\"params\":{\"approved\":\"whether or not the calldata is approved\",\"data\":\"the calldata to update approval for\"}},\"updateCrossChainVoteCollectionPeriod(uint256)\":{\"params\":{\"newCrossChainVoteCollectionPeriod\":\"the new cross chain voting collection period\"}},\"updateMaxUserLiveProposals(uint256)\":{\"params\":{\"newMaxLiveProposals\":\"the new maximum live proposals\"}},\"updateProposalThreshold(uint256)\":{\"params\":{\"newProposalThreshold\":\"the new proposal threshold\"}},\"updateQuorum(uint256)\":{\"params\":{\"newQuorum\":\"the new quorum\"}},\"updateVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"the new voting period\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BreakGlassExecuted(address,address[],bytes[])\":{\"notice\":\"An event emitted when the guardian breaks glass\"},\"BreakGlassGuardianChanged(address,address)\":{\"notice\":\"An event emitted when the break glass guardian is changed.\"},\"BridgeOutFailed(uint16,bytes,uint256)\":{\"notice\":\"emitted when a bridge out fails\"},\"BridgeOutSuccess(uint16,uint256,address,bytes)\":{\"notice\":\"event emitted when a bridge out succeeds\"},\"CalldataApprovalUpdated(bytes,bool)\":{\"notice\":\"emitted when a calldata approval is changed for break glass guardian\"},\"CrossChainVoteCollected(uint256,uint16,uint256,uint256,uint256)\":{\"notice\":\"emitted when a cross chain vote is collected\"},\"CrossChainVoteCollectionPeriodChanged(uint256,uint256)\":{\"notice\":\"An event emitted when the cross chain vote collection period has changed.\"},\"GasLimitUpdated(uint96,uint96)\":{\"notice\":\"emitted when the gas limit changes on external chains\"},\"GovernanceReturnAddressChanged(address,address)\":{\"notice\":\"An event emitted when the governance return address is changed.\"},\"NewStakedWellSet(address,bool)\":{\"notice\":\"event emitted when the new staked well is set\"},\"PauseDurationUpdated(uint256,uint256)\":{\"notice\":\"event emitted when pause duration is updated\"},\"PauseGuardianUpdated(address,address)\":{\"notice\":\"emitted when the pause guardian is updated\"},\"PauseTimeUpdated(uint256)\":{\"notice\":\"event emitted when pause start time is updated\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"ProposalRebroadcasted(uint256,bytes)\":{\"notice\":\"emitted when a proposal is rebroadcasted\"},\"ProposalThresholdChanged(uint256,uint256)\":{\"notice\":\"An event emitted when the proposal threshold is changed.\"},\"QuroumVotesChanged(uint256,uint256)\":{\"notice\":\"An event emitted when thee quorum votes is changed.\"},\"StartBlockSet(uint256,uint256)\":{\"notice\":\"An event emitted when the first vote is cast in a proposal\"},\"TargetAddressUpdated(uint16,address)\":{\"notice\":\"chain id of the target chain to address for bridging\"},\"UserMaxProposalsChanged(uint256,uint256)\":{\"notice\":\"An event emitted when the max user live proposals has changed.\"},\"VoteCast(address,uint256,uint8,uint256)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingPeriodChanged(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is changed.\"}},\"kind\":\"user\",\"methods\":{\"addExternalChainConfigs((uint16,address)[])\":{\"notice\":\"add trusted senders from external chains can only add one trusted sender per chain, if more than one trusted sender per chain is added, revert\"},\"breakGlassGuardian()\":{\"notice\":\"the break glass guardian address can only break glass one time, and then role is revoked and needs to be reinstated by governance\"},\"bridgeCost(uint16)\":{\"notice\":\"Estimate bridge cost to bridge out to a destination chain\"},\"bridgeCostAll()\":{\"notice\":\"Estimate bridge cost to bridge out to all chains\"},\"chainAddressVotes(uint256,uint16)\":{\"notice\":\"return the votes for a particular chain and proposal\"},\"chainVoteCollectorVotes(uint16,uint256)\":{\"notice\":\"the number of votes for a given proposal on a given chainid\"},\"constructor\":{\"notice\":\"disable the initializer to stop governance hijacking and avoid selfdestruct attacks.\"},\"crossChainVoteCollectionPeriod()\":{\"notice\":\"the period of time in which a proposal can have cross chain votes collected. if this period is changed in a governance proposal, it will not impact current or in flight proposal state, only the proposals that are created after this parameter is updated.\"},\"currentUserLiveProposals(address)\":{\"notice\":\"returns the number of live proposals a user has a proposal is considered live if it is active or in cross chain vote collection period If canceled it is not considered counted as a live proposal If succeeded it is not considered counted as a live proposal as it could be executed at any time If failed it is not considered counted as a live proposal as it can never be executed If executed it is not considered counted as a live proposal as it can never be executed again\"},\"distributor()\":{\"notice\":\"reference to the WELL token distributor contract, uses block number for voting checkpoints\"},\"execute(uint256)\":{\"notice\":\"execute a proposal can only be called if the proposal is in the succeeded state can only be called when the contract is not paused the sum of the values must be equal to the msg.value the native token balance of this contract will remain unchanged before and after a proposal is executed\"},\"executeBreakGlass(address[],bytes[])\":{\"notice\":\"calldata must be whitelisted only break glass guardian can call, once, and when they do, their role is revoked before any external functions are called. This prevents reentrancy/multiple uses by a single guardian. can be called in any pause state (paused or unpaused) potential attack vector:    - gov proposal passes that whitelists calldata to change some parameter on Governor    or governance owned contracts that it shouldn't. Now, break glass guardian can call    functions that it was not originally intended to call, once.    - if one of the calldatas is to change the break glass guardian, then it could    theoretically grant itself the role again. This is mitigated by the check at post effects    that the break glass guardian is address(0).    - reentrancy is allowed, but no advantage could be gained from it by a malicious break    glass guardian because at the end of the function, the break glass guardian must be    address(0), so you're only constrained by whitelisted calldata and the gas limit for    transactions which is 13m currently on Moonbeam.    - assumption that any executeBreakGlassGuardian calls will not require any msg.value\"},\"fromWormholeFormat(bytes32)\":{\"notice\":\"converts a bytes32 to address, wormhole stores the address in the first 20 bytes so if we shift right by 160 bits and there is still a non zero value, we know we have the wrong address\"},\"gasLimit()\":{\"notice\":\"gas limit for wormhole relayer, changeable incase gas prices change on external network\"},\"getAllTargetChains()\":{\"notice\":\"returns all target wormhole chain ids for this contract instance\"},\"getAllTargetChainsLength()\":{\"notice\":\"returns the length of the target chains set\"},\"getCurrentVotes(address)\":{\"notice\":\"returns the current voting power for an address across well, xWell, stkWell and distributor\"},\"getNumLiveProposals()\":{\"notice\":\"returns the number of live proposals, live proposals are defined as being in the Active, or CrossChainVoteCollection period.\"},\"getProposalData(uint256)\":{\"notice\":\"returns information about a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"returns a user's vote receipt on a given proposal\"},\"getUserLiveProposals(address)\":{\"notice\":\"returns all proposals a user has that are live a proposal is considered live if it is active or pending\"},\"getVotes(address,uint256,uint256)\":{\"notice\":\"returns the total voting power for an address at a given block number and timestamp\"},\"initialize((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint128,address,address,address),(uint16,address)[],bytes[])\":{\"notice\":\"initialize the governor contract\"},\"isTrustedSender(uint16,address)\":{\"notice\":\"returns whether or not the address is in the trusted senders list for a given chain\"},\"isTrustedSender(uint16,bytes32)\":{\"notice\":\"returns whether or not the address is in the trusted senders list for a given chain\"},\"kickGuardian()\":{\"notice\":\"kick the guardian, can only kick while the contracts are not paused only callably if a pause guardian pauses, then fails to unpause before the pauseDuration lapses removes the guardian, sets pause time to 0, and resets the pauseUsed flag to false\"},\"liveProposals()\":{\"notice\":\"returns the currently live proposals live proposals are defined as being in the Active, or CrossChainVoteCollection period.\"},\"maxUserLiveProposals()\":{\"notice\":\"the maximum number of user live proposals if governance votes to decrease this number, and user is already at the maximum proposal count, they will not be able to propose again until they have less than the new maximum.\"},\"pause()\":{\"notice\":\"only callable by the pause guardian when not paused automatically cancels all in flight proposals any proposal that is in an active, vote collection, succeeded or defeated state will be canceled\"},\"pauseDuration()\":{\"notice\":\"pause duration\"},\"pauseGuardian()\":{\"notice\":\"address of the pause guardian\"},\"pauseStartTime()\":{\"notice\":\"pause start time, starts at 0 so contract is unpaused\"},\"pauseUsed()\":{\"notice\":\"returns whether the pause has been used by the pause guardian if pauseStartTime is 0, contract pause is not used, if non zero, it is used\"},\"paused()\":{\"notice\":\"return the current pause status if pauseStartTime is 0, contract is not paused if pauseStartTime is not 0, contract could be paused in the pauseDuration window\"},\"processedNonces(bytes32)\":{\"notice\":\"nonces that have already been processed\"},\"proposalActive(uint256)\":{\"notice\":\"returns whether or not a given propsal is active\"},\"proposalCount()\":{\"notice\":\"The total number of proposals proposal ID 0 is invalid and should never be 0\"},\"proposalInformation(uint256)\":{\"notice\":\"returns information on a proposal\"},\"proposalThreshold()\":{\"notice\":\"the minimum number of votes needed to propose possible to cancel a proposal if proposal threshold increases during a live proposal where user has less than the new proposal threshold\"},\"proposalVotes(uint256)\":{\"notice\":\"returns the vote counts for a proposal includes the total vote count, for, against and abstain votes\"},\"proposals(uint256)\":{\"notice\":\"the proposal information for a given proposal\"},\"quorum()\":{\"notice\":\"quorum needed for a proposal to pass if multiple governance proposals are in flight, and the first one to execute changes quorum, then this new quorum will go into effect on the next proposal.\"},\"rebroadcastProposal(uint256)\":{\"notice\":\"allows for re-broadcasting of a proposal in case the wormhole relayer or wormhole core contract is paused.\"},\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"notice\":\"callable only by the wormhole relayer\"},\"removeExternalChainConfigs((uint16,address)[])\":{\"notice\":\"remove trusted senders from external chains can only remove trusted senders from a chain that is already stored if the chain doesn't already exist in storage, revert\"},\"setBreakGlassGuardian(address)\":{\"notice\":\"sets the break glass guardian address\"},\"setGasLimit(uint96)\":{\"notice\":\"set a gas limit for the relayer on the external chain should only be called if there is a change in gas prices on the external chain\"},\"setNewStakedWell(address,bool)\":{\"notice\":\"set the new stkWell token address if the new staked well token does not conform to the new interface, then this governor contract is bricked and will need to be rolled back via the break glass guardian. use this function with extreme caution and thoroughly integration test making proposals and voting on them after calling this function.\"},\"state(uint256)\":{\"notice\":\"The current state of a given proposal valid proposal states:      canceled                              -> means proposer canceled during active period, proposer votes fell below threshold and was canceled during active period,                                               or contract was paused while proposal was in state Active, CrossChainVoteCollection or Succeeded      active                                -> means block timestamp is greater than or equal to the start timestamp and less than or equal to the end timestamp. Users                                               can cast votes during this period.      cross chain vote collection period    -> block timestamp is greater than the end timestamp and less than or equal to the cross chain vote collection end timestamp.                                               Votes from other chains can be registered during this period.      succeeded                             -> block timestamp is greater the cross chain vote collection period and yay votes are greater than nay votes, total votes meet                                               or exceed quorum.      defeated                              -> block timestamp is past the cross chain vote collection period and nay votes are greater than or equal to yay votes or                                               total votes are less than quorum      executed                              -> reached succeeded state, and proposal was successfully executed\"},\"stkWell()\":{\"notice\":\"reference to the stkWELL token, uses block number for voting checkpoints\"},\"targetAddress(uint16)\":{\"notice\":\"chain id of the target chain to address for bridging starts off mapped to itself, but can be changed by governance\"},\"unpause()\":{\"notice\":\"unpause the contracts as pause guardian. revokes pause guardian role after unpausing\"},\"updateApprovedCalldata(bytes,bool)\":{\"notice\":\"updates the approval for calldata to be used by break glass guardian\"},\"updateCrossChainVoteCollectionPeriod(uint256)\":{\"notice\":\"updates the cross chain voting collection period\"},\"updateMaxUserLiveProposals(uint256)\":{\"notice\":\"updates the maximum user live proposals\"},\"updateProposalThreshold(uint256)\":{\"notice\":\"updates the proposal threshold\"},\"updateQuorum(uint256)\":{\"notice\":\"updates the quorum, callable only by this contract\"},\"updateVotingPeriod(uint256)\":{\"notice\":\"change to accept both block and timestamp and then validate that they are within a certain range i.e. the block number * block time is equals the timestamp updates the voting period\"},\"useTimestamps()\":{\"notice\":\"whether or not the stkWell contract uses timestamps or block numbers\"},\"votingPeriod()\":{\"notice\":\"the voting period in seconds changing this variable only affects the proposals created after the change\"},\"well()\":{\"notice\":\"reference to the WELL token, uses block number for voting checkpoints\"},\"whitelistedCalldatas(bytes)\":{\"notice\":\"whether or not a calldata bytes is allowed for break glass guardian whether or not the calldata is whitelisted for break glass guardian functions to whitelist are based on previous whitelisted functions in the Artemis Governor contracts. Artemis Governor Break Glass calldata: - transferOwnership - _setPendingAdmin - setPendingAdmin - setAdmin - changeAdmin - setEmissionsManager new calldata: - publishMessage that adds rollback address as trusted sender in TemporalGovernor, with calldata for each chain\"},\"wormholeRelayer()\":{\"notice\":\"address of the wormhole relayer cannot be changed by owner because the relayer contract is a proxy and should never change its address\"},\"xWell()\":{\"notice\":\"reference to the xWELL token, uses block.timestamp for voting checkpoints\"}},\"notice\":\"Contract is pauseable by the guardian Break glass guardian can roll back governance to the previous ArtemisTimelock and Governorupgradeable, constructor disables implementation contract from working to prevent governance hijacking. Write out liveliness assumptions of wormhole here, showing why wormhole can go down, and the system continue working. Explain why we allow proposals to pass even if wormhole is down or votes from a vote collection contract on another chain are not relayed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Governance/MultichainGovernor/MultichainGovernor.sol\":\"MultichainGovernor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@proposals/=src/proposals/\",\":@protocol/=src/\",\":@test/=test/\",\":@utils/=utils/\",\":@zelt-src/=lib/zelt/src/\",\":@zelt-test/=lib/zelt/test/\",\":@zelt/=lib/zelt/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solmate/=lib/solmate/src/\",\":zelt/=lib/zelt/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e\",\"dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol\":{\"keccak256\":\"0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a\",\"dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol\":{\"keccak256\":\"0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412\",\"dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol\":{\"keccak256\":\"0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c\",\"dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32\",\"dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol\":{\"keccak256\":\"0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27\",\"dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66\",\"dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"lib/zelt/src/lib/RateLimitMidpointCommonLibrary.sol\":{\"keccak256\":\"0x6e02bb80a66c7964ff3a199f4908e90b7d2c9f6491545c494d8fa1c02415aa86\",\"urls\":[\"bzz-raw://dd2278e0060092b8e8fb26298f9718e0d482ea22f60a35b1ad029d7849ecfe7b\",\"dweb:/ipfs/QmfUZ48bJbWvmux9KeQCy4G5pgBfvogVnWw4evAy6V51rX\"]},\"lib/zelt/src/lib/RateLimitedMidpointLibrary.sol\":{\"keccak256\":\"0xbe1223f81169e971d50446d5a52ca6c644a6f8b06ae58a24eeeb1efbb3a42002\",\"urls\":[\"bzz-raw://07c4bdf9f0cb7601f4f92c1c19e56e2635f70e066a1b6f5296aa2222d8f99f36\",\"dweb:/ipfs/QmRjzoaQGuiPkHwicSJLBSDdXkmosb8WC38QQX7QqaCjJr\"]},\"lib/zelt/src/util/Math.sol\":{\"keccak256\":\"0x0dceef72fc89db656ab9300694080ff9cb9aec55d802af4b034daa6e95d379b7\",\"urls\":[\"bzz-raw://703006a0764cc4c4c18fcf257e40c902e1d63ecdda066092db70290d4e500f3c\",\"dweb:/ipfs/QmUtDThgmjEwFmEXsYygaqPCGTP84ZTZsoKGQWUuuFvKiA\"]},\"src/Governance/IWormholeTrustedSender.sol\":{\"keccak256\":\"0x9c7883be445878b74896cc79e1060bfa5d8951b9ad58eeb06f98aef563fd5d5d\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a0cb217acbfe537e765927afa386a813265c4bf257a3959f66cc8a156e1f4e9f\",\"dweb:/ipfs/QmYh6vaCpSmhdpdCcTj2z6yUqHDRcLDfFhtEc4ifmjrs9x\"]},\"src/Governance/MultichainGovernor/Constants.sol\":{\"keccak256\":\"0x02d70df3490590805ba2cb31fa09ac1a23efb4179aa22df4a4fd864f83a37e77\",\"urls\":[\"bzz-raw://155a41511b2ef87c6d2a32af61818d4a3c9f53ddc3d591da114feebcde19e9a6\",\"dweb:/ipfs/QmPnYBm64ddo6Z2nB4uJbaLFVSWcMkkXUFAwffcy3V7VGt\"]},\"src/Governance/MultichainGovernor/IMultichainGovernor.sol\":{\"keccak256\":\"0x895f5fb7e243e9726c56e2e095437506a27c8ccc49831a6e8668c6b78f5e1b1f\",\"urls\":[\"bzz-raw://8755fe4325649cea6c81f03523f985ccfb24e326bdf9f82c68defcb7ad5db2f0\",\"dweb:/ipfs/QmSN34rGKqGGTvttgvbjueum5K9A1XdGKtUqDEy5onYS86\"]},\"src/Governance/MultichainGovernor/MultichainGovernor.sol\":{\"keccak256\":\"0xa45a0afa19848436830966af9c22eec9b4a588730efa3af456a0d061df7c5e04\",\"urls\":[\"bzz-raw://ac7b467d0598e2263745cda932e6fe22b2e2c8aad282ab27a7d78564f9193026\",\"dweb:/ipfs/QmXc995DrqQWYLfrQrz4rN4p8BybTqTov7qwuCxJkUZt8z\"]},\"src/Governance/MultichainGovernor/SnapshotInterface.sol\":{\"keccak256\":\"0x62ad16a8fd2605494325e23da4d2fbf9ea2206619c15ac0a90b3394cfa0f643d\",\"urls\":[\"bzz-raw://c3886bc539a76c57342e2df0b9d0e8b45e941f4702105152c4774e32ea13d025\",\"dweb:/ipfs/QmcGQSKrNvZ4izmNHLBjdoYzSmHDWhLxbnGcSXjwVps6MP\"]},\"src/Governance/WormholeTrustedSender.sol\":{\"keccak256\":\"0x0c36ca10e19309230f4709b8d66b3b4378fc2108c66fa516765c03841922ec73\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://25834addb1cbd22da26501dfdeae5e7519ab8d36c5d20b13758e68e1656c3feb\",\"dweb:/ipfs/QmZGssGyb8guyT9oXscddwdcMt4ma6xcRJYfKnpBbwUsFm\"]},\"src/wormhole/IWormhole.sol\":{\"keccak256\":\"0x3d3be0d6b75038eb1acdcf20ff61b457a2e961ce1f140717eda006f191b1ce1a\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1cc73f5328ae9cc36ab3144b88316d985aaca7007fc65c36bfc8ce4f5041496d\",\"dweb:/ipfs/QmcdQU59A3HvXHDLK1HEv4SkkfDhv6CKKBDYpzVhHKziR5\"]},\"src/wormhole/IWormholeReceiver.sol\":{\"keccak256\":\"0x3ba999db8099081accdc924c765ce2dbbaa0bd4ecd29d95a5bd537703740b832\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://af8370ba3663400476871902811004559a28ab6106085b89e508b5d35a4950e6\",\"dweb:/ipfs/QmPBMBGDsSEYt5u3Yvhddv67RB6UqomJy1jBy1nPEHMdZN\"]},\"src/wormhole/IWormholeRelayer.sol\":{\"keccak256\":\"0x53361b8bca021d27b9c0d2730f657040dafb707f42b8ccfbde6a5c19c2cccfff\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://65c7bc6bb7c8196e68a344a06d5cd2651a309fb85af7654f4133d80c17c931ea\",\"dweb:/ipfs/QmZFo93SmFdBLfAhZhvprbyjHKgWYupJ83X5niv7kVXaVR\"]},\"src/wormhole/WormholeBridgeBase.sol\":{\"keccak256\":\"0x39642d3ccca1e8fd4fe9740db0cd2c425ba79a25d9c767b34e675b709dcd47ee\",\"urls\":[\"bzz-raw://092fcd6bf073e2f36be8c8bb8d4def56789096de58f2193f13f5584e7cade4a9\",\"dweb:/ipfs/Qma7LUbV118c1daxQNS4wuAMxTAgWR2ZtCFn8BnCedJZFf\"]},\"src/xWELL/ConfigurablePause.sol\":{\"keccak256\":\"0xc2120c793c832a4f84d61e3bb49c4315c34d2b2d08dc435d58732293a39030a0\",\"urls\":[\"bzz-raw://ad8d805bcf56105f4abe526fba7d48d7703bc29a47c69bd7988ab4097f60529f\",\"dweb:/ipfs/QmUdDtRZxU2Kfw6RMB5T1pHDEi49K28D7MZfu9PfvTDGXt\"]},\"src/xWELL/ConfigurablePauseGuardian.sol\":{\"keccak256\":\"0x367f262604aa1530d4dd54316312b71c000b9e18123bd26c6a3194868a43d538\",\"urls\":[\"bzz-raw://8dfb60dd181a68f49f8269c8dcda5ed0664813fd4bc43fa5d518385c40299076\",\"dweb:/ipfs/QmVXgiB12uACEZis2AgMroAcv3wYA2HWCsMw4Fg8pwrURu\"]},\"src/xWELL/MintLimits.sol\":{\"keccak256\":\"0x96d01fe18630765a4a70d443621100c9358c754f79cfae9219e50716afecb87f\",\"urls\":[\"bzz-raw://167735431e04aff1d71fe1ad91310a3b0cd7551be051fd7d22957e76550353c4\",\"dweb:/ipfs/QmdRcHbkna9N2UcH79ddNiR4v2kteaBW9GsDcNhvuR5i57\"]},\"src/xWELL/interfaces/IXERC20.sol\":{\"keccak256\":\"0x264c812ffc16dc28741465937e28abc5085bcc8ea1a41b87e1d222f855161551\",\"urls\":[\"bzz-raw://08f5e76a56a34252d008eb67643d367806de6c7d1d77ccb084038b5245db325b\",\"dweb:/ipfs/QmRT8GeE9aJdzkRPd8CzMo4phjdnbLLUqtEEG9vfGERyCE\"]},\"src/xWELL/xERC20.sol\":{\"keccak256\":\"0x5658a072739f58bf17ab7cae578c43d6ebf22dce9e8e594e5a31bb70a1718f9e\",\"urls\":[\"bzz-raw://fb2e533c2723263c58f85a54c74eb51246a38e320b35f403c56faa4d627d8a5f\",\"dweb:/ipfs/QmSiypqmE1sgUb3yfUMjxhaw8nGWJy22xEdVzYZ8QQV3WF\"]},\"src/xWELL/xWELL.sol\":{\"keccak256\":\"0x39d44d34d38e80f7a2ffd3ca8c3597d5e82daec43e739d1cd5c0bbda907fc9b5\",\"urls\":[\"bzz-raw://b5d239676b1d13c7e53cd2fa89ccc800d8d18f6b86ec9eaca1d098f0c09fbdb3\",\"dweb:/ipfs/QmU5zBqn7JeThd5hTCKMx4wYepWepN1sG9YrMcTxUGmfPV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "breakGlassGuardian",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BreakGlassExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldValue",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newValue",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BreakGlassGuardianChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "refundAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BridgeOutFailed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "dstWormholeChainId",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cost",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "dst",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BridgeOutSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CalldataApprovalUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "sourceChain",
              "type": "uint16",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CrossChainVoteCollected",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CrossChainVoteCollectionPeriodChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "oldGasLimit",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "newGasLimit",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GasLimitUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldValue",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newValue",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernanceReturnAddressChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStakedWell",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "toUseTimestamps",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewStakedWellSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldPauseDuration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newPauseDuration",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauseDurationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldPauseGuardian",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newPauseGuardian",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PauseGuardianUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPauseStartTime",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PauseTimeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "votingStartTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "votingEndTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "eta",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalQueued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalRebroadcasted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalThresholdChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "QuroumVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "startBlock",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StartBlockSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "dstChainId",
              "type": "uint16",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetAddressUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserMaxProposalsChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "voteValue",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct WormholeTrustedSender.TrustedSender[]",
              "name": "_trustedSenders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint16",
                  "name": "chainId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addExternalChainConfigs"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "breakGlassGuardian",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "dstWormholeChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeCost",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "gasCost",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bridgeCostAll",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "voteValue",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "wormholeChainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "wormholeChainId",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainVoteCollectorVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crossChainVoteCollectionPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentUserLiveProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "contract SnapshotInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBreakGlass"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "whFormatAddress",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fromWormholeFormat",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimit",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllTargetChains",
          "outputs": [
            {
              "internalType": "uint16[]",
              "name": "",
              "type": "uint16[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllTargetChainsLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumLiveProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalData",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceipt",
          "outputs": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "voteValue",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserLiveProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MultichainGovernor.InitializeData",
              "name": "initData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "well",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "xWell",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "stkWell",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "distributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "proposalThreshold",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPeriodSeconds",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crossChainVoteCollectionPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quorum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxUserLiveProposals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "pauseDuration",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "pauseGuardian",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "breakGlassGuardian",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "wormholeRelayer",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct WormholeTrustedSender.TrustedSender[]",
              "name": "trustedSenders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint16",
                  "name": "chainId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedSender",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "addr",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedSender",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "kickGuardian"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liveProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxUserLiveProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauseDuration",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauseGuardian",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauseStartTime",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauseUsed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "processedNonces",
          "outputs": [
            {
              "internalType": "bool",
              "name": "processed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalInformation",
          "outputs": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "voteSnapshotTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "crossChainVoteCollectionEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "voteSnapshotTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "crossChainVoteCollectionEndTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteSnapshotBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "abstainVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "canceled",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "rebroadcastProposal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            },
            {
              "internalType": "bytes32",
              "name": "senderAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint16",
              "name": "sourceChain",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "receiveWormholeMessages"
        },
        {
          "inputs": [
            {
              "internalType": "struct WormholeTrustedSender.TrustedSender[]",
              "name": "_trustedSenders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint16",
                  "name": "chainId",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeExternalChainConfigs"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGuardian",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBreakGlassGuardian"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "newGasLimit",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStakedWell",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toUseTimestamps",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewStakedWell"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IMultichainGovernor.ProposalState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stkWell",
          "outputs": [
            {
              "internalType": "contract SnapshotInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "targetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateApprovedCalldata"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCrossChainVoteCollectionPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCrossChainVoteCollectionPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMaxLiveProposals",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxUserLiveProposals"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newProposalThreshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProposalThreshold"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newQuorum",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateVotingPeriod"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "useTimestamps",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "well",
          "outputs": [
            {
              "internalType": "contract SnapshotInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "whitelistedCalldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whitelistedCalldatas",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wormholeRelayer",
          "outputs": [
            {
              "internalType": "contract IWormholeRelayer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "xWell",
          "outputs": [
            {
              "internalType": "contract xWELL",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addExternalChainConfigs((uint16,address)[])": {
            "params": {
              "_trustedSenders": "array of trusted senders to add"
            }
          },
          "bridgeCost(uint16)": {
            "details": "this function returns 0 if the quote fails. in all other cases, the value returned should be non zero.",
            "params": {
              "dstWormholeChainId": "Destination chain id"
            }
          },
          "cancel(uint256)": {
            "details": "callable only by the proposer, cancels proposal if it has not been executed  cancellation is allowed in either of these flows:  - proposer cancels  - permissionless cancel, user voting power currently drops below threshold and proposal is in one of the following states: - succeeded - active - cross chain vote collection period Edge Case:   If proposal threshold is increased in an active governance proposal, and a user has proposed when they met the old proposal threshold, but not the new one, then anyone can cancel their proposal."
          },
          "castVote(uint256,uint8)": {
            "details": "allows user to cast vote for a proposal",
            "params": {
              "proposalId": "the id of the proposal to vote on",
              "voteValue": "the value of the vote, can be either YES, NO, or ABSTAIN"
            }
          },
          "chainAddressVotes(uint256,uint16)": {
            "params": {
              "proposalId": "the id of the proposal to check",
              "wormholeChainId": "the chain id to check votes from"
            }
          },
          "currentUserLiveProposals(address)": {
            "params": {
              "user": "The address of the user to check this number should never be greater than the constant MAX_USER_LIVE_PROPOSALS"
            }
          },
          "execute(uint256)": {
            "params": {
              "proposalId": "the id of the proposal to execute"
            }
          },
          "executeBreakGlass(address[],bytes[])": {
            "params": {
              "calldatas": "the calldatas to call",
              "targets": "the targets to call"
            }
          },
          "fromWormholeFormat(bytes32)": {
            "params": {
              "whFormatAddress": "the bytes32 address to convert"
            },
            "returns": {
              "_0": "the address"
            }
          },
          "getCurrentVotes(address)": {
            "params": {
              "account": "The address of the account to check"
            }
          },
          "getProposalData(uint256)": {
            "params": {
              "proposalId": "the id of the proposal to check"
            }
          },
          "getReceipt(uint256,address)": {
            "params": {
              "proposalId": "the id of the proposal to check",
              "voter": "the address of the voter to check if hasVoted is false, this implies that vote value and votes are both 0"
            }
          },
          "getUserLiveProposals(address)": {
            "params": {
              "user": "The address of the user to check"
            }
          },
          "getVotes(address,uint256,uint256)": {
            "params": {
              "account": "The address of the account to check",
              "blockNumber": "The block number to check the balance at",
              "timestamp": "The unix timestamp in seconds to check the balance at"
            }
          },
          "initialize((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint128,address,address,address),(uint16,address)[],bytes[])": {
            "params": {
              "calldatas": "calldatas to whitelist for break glass guardian",
              "initData": "initialization data",
              "trustedSenders": "that can relay messages to this contract"
            }
          },
          "isTrustedSender(uint16,address)": {
            "params": {
              "addr": "The address to check",
              "chainId": "The wormhole chain id to check"
            }
          },
          "isTrustedSender(uint16,bytes32)": {
            "params": {
              "addr": "The address to check",
              "chainId": "The wormhole chain id to check"
            }
          },
          "proposalActive(uint256)": {
            "params": {
              "proposalId": "the id of the proposal to check"
            }
          },
          "proposalInformation(uint256)": {
            "params": {
              "proposalId": "the id of the proposal to check"
            }
          },
          "proposalVotes(uint256)": {
            "params": {
              "proposalId": "the id of the proposal to check"
            }
          },
          "propose(address[],uint256[],bytes[],string)": {
            "details": "Returns the proposal ID for the proposed proposal only callable if user has proposal threshold or more votes",
            "params": {
              "calldatas": "the list of calldatas to be used for the calls",
              "description": "the description of the proposal",
              "targets": "the list of target addresses for calls to be made",
              "values": "the list of values to be used for the calls"
            }
          },
          "rebroadcastProposal(uint256)": {
            "details": "can only be called if the proposal is in the active state",
            "params": {
              "proposalId": "the id of the proposal to rebroadcast"
            }
          },
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
            "params": {
              "nonce": "the unique message ID",
              "payload": "the payload of the message, contains the to and amount additional vaas, unused parameter",
              "senderAddress": "the address of the sender on the source chain, bytes32 encoded",
              "sourceChain": "the chain id of the source chain"
            }
          },
          "removeExternalChainConfigs((uint16,address)[])": {
            "params": {
              "_trustedSenders": "array of trusted senders to remove"
            }
          },
          "setBreakGlassGuardian(address)": {
            "params": {
              "newGuardian": "the new break glass guardian address"
            }
          },
          "setGasLimit(uint96)": {
            "params": {
              "newGasLimit": "new gas limit to set"
            }
          },
          "setNewStakedWell(address,bool)": {
            "params": {
              "newStakedWell": "the new stkWell token address",
              "toUseTimestamps": "whether or not to use timestamps for voting"
            }
          },
          "state(uint256)": {
            "params": {
              "proposalId": "The id of the proposal to check"
            }
          },
          "updateApprovedCalldata(bytes,bool)": {
            "params": {
              "approved": "whether or not the calldata is approved",
              "data": "the calldata to update approval for"
            }
          },
          "updateCrossChainVoteCollectionPeriod(uint256)": {
            "params": {
              "newCrossChainVoteCollectionPeriod": "the new cross chain voting collection period"
            }
          },
          "updateMaxUserLiveProposals(uint256)": {
            "params": {
              "newMaxLiveProposals": "the new maximum live proposals"
            }
          },
          "updateProposalThreshold(uint256)": {
            "params": {
              "newProposalThreshold": "the new proposal threshold"
            }
          },
          "updateQuorum(uint256)": {
            "params": {
              "newQuorum": "the new quorum"
            }
          },
          "updateVotingPeriod(uint256)": {
            "params": {
              "newVotingPeriod": "the new voting period"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addExternalChainConfigs((uint16,address)[])": {
            "notice": "add trusted senders from external chains can only add one trusted sender per chain, if more than one trusted sender per chain is added, revert"
          },
          "breakGlassGuardian()": {
            "notice": "the break glass guardian address can only break glass one time, and then role is revoked and needs to be reinstated by governance"
          },
          "bridgeCost(uint16)": {
            "notice": "Estimate bridge cost to bridge out to a destination chain"
          },
          "bridgeCostAll()": {
            "notice": "Estimate bridge cost to bridge out to all chains"
          },
          "chainAddressVotes(uint256,uint16)": {
            "notice": "return the votes for a particular chain and proposal"
          },
          "chainVoteCollectorVotes(uint16,uint256)": {
            "notice": "the number of votes for a given proposal on a given chainid"
          },
          "constructor": {
            "notice": "disable the initializer to stop governance hijacking and avoid selfdestruct attacks."
          },
          "crossChainVoteCollectionPeriod()": {
            "notice": "the period of time in which a proposal can have cross chain votes collected. if this period is changed in a governance proposal, it will not impact current or in flight proposal state, only the proposals that are created after this parameter is updated."
          },
          "currentUserLiveProposals(address)": {
            "notice": "returns the number of live proposals a user has a proposal is considered live if it is active or in cross chain vote collection period If canceled it is not considered counted as a live proposal If succeeded it is not considered counted as a live proposal as it could be executed at any time If failed it is not considered counted as a live proposal as it can never be executed If executed it is not considered counted as a live proposal as it can never be executed again"
          },
          "distributor()": {
            "notice": "reference to the WELL token distributor contract, uses block number for voting checkpoints"
          },
          "execute(uint256)": {
            "notice": "execute a proposal can only be called if the proposal is in the succeeded state can only be called when the contract is not paused the sum of the values must be equal to the msg.value the native token balance of this contract will remain unchanged before and after a proposal is executed"
          },
          "executeBreakGlass(address[],bytes[])": {
            "notice": "calldata must be whitelisted only break glass guardian can call, once, and when they do, their role is revoked before any external functions are called. This prevents reentrancy/multiple uses by a single guardian. can be called in any pause state (paused or unpaused) potential attack vector:    - gov proposal passes that whitelists calldata to change some parameter on Governor    or governance owned contracts that it shouldn't. Now, break glass guardian can call    functions that it was not originally intended to call, once.    - if one of the calldatas is to change the break glass guardian, then it could    theoretically grant itself the role again. This is mitigated by the check at post effects    that the break glass guardian is address(0).    - reentrancy is allowed, but no advantage could be gained from it by a malicious break    glass guardian because at the end of the function, the break glass guardian must be    address(0), so you're only constrained by whitelisted calldata and the gas limit for    transactions which is 13m currently on Moonbeam.    - assumption that any executeBreakGlassGuardian calls will not require any msg.value"
          },
          "fromWormholeFormat(bytes32)": {
            "notice": "converts a bytes32 to address, wormhole stores the address in the first 20 bytes so if we shift right by 160 bits and there is still a non zero value, we know we have the wrong address"
          },
          "gasLimit()": {
            "notice": "gas limit for wormhole relayer, changeable incase gas prices change on external network"
          },
          "getAllTargetChains()": {
            "notice": "returns all target wormhole chain ids for this contract instance"
          },
          "getAllTargetChainsLength()": {
            "notice": "returns the length of the target chains set"
          },
          "getCurrentVotes(address)": {
            "notice": "returns the current voting power for an address across well, xWell, stkWell and distributor"
          },
          "getNumLiveProposals()": {
            "notice": "returns the number of live proposals, live proposals are defined as being in the Active, or CrossChainVoteCollection period."
          },
          "getProposalData(uint256)": {
            "notice": "returns information about a proposal"
          },
          "getReceipt(uint256,address)": {
            "notice": "returns a user's vote receipt on a given proposal"
          },
          "getUserLiveProposals(address)": {
            "notice": "returns all proposals a user has that are live a proposal is considered live if it is active or pending"
          },
          "getVotes(address,uint256,uint256)": {
            "notice": "returns the total voting power for an address at a given block number and timestamp"
          },
          "initialize((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint128,address,address,address),(uint16,address)[],bytes[])": {
            "notice": "initialize the governor contract"
          },
          "isTrustedSender(uint16,address)": {
            "notice": "returns whether or not the address is in the trusted senders list for a given chain"
          },
          "isTrustedSender(uint16,bytes32)": {
            "notice": "returns whether or not the address is in the trusted senders list for a given chain"
          },
          "kickGuardian()": {
            "notice": "kick the guardian, can only kick while the contracts are not paused only callably if a pause guardian pauses, then fails to unpause before the pauseDuration lapses removes the guardian, sets pause time to 0, and resets the pauseUsed flag to false"
          },
          "liveProposals()": {
            "notice": "returns the currently live proposals live proposals are defined as being in the Active, or CrossChainVoteCollection period."
          },
          "maxUserLiveProposals()": {
            "notice": "the maximum number of user live proposals if governance votes to decrease this number, and user is already at the maximum proposal count, they will not be able to propose again until they have less than the new maximum."
          },
          "pause()": {
            "notice": "only callable by the pause guardian when not paused automatically cancels all in flight proposals any proposal that is in an active, vote collection, succeeded or defeated state will be canceled"
          },
          "pauseDuration()": {
            "notice": "pause duration"
          },
          "pauseGuardian()": {
            "notice": "address of the pause guardian"
          },
          "pauseStartTime()": {
            "notice": "pause start time, starts at 0 so contract is unpaused"
          },
          "pauseUsed()": {
            "notice": "returns whether the pause has been used by the pause guardian if pauseStartTime is 0, contract pause is not used, if non zero, it is used"
          },
          "paused()": {
            "notice": "return the current pause status if pauseStartTime is 0, contract is not paused if pauseStartTime is not 0, contract could be paused in the pauseDuration window"
          },
          "processedNonces(bytes32)": {
            "notice": "nonces that have already been processed"
          },
          "proposalActive(uint256)": {
            "notice": "returns whether or not a given propsal is active"
          },
          "proposalCount()": {
            "notice": "The total number of proposals proposal ID 0 is invalid and should never be 0"
          },
          "proposalInformation(uint256)": {
            "notice": "returns information on a proposal"
          },
          "proposalThreshold()": {
            "notice": "the minimum number of votes needed to propose possible to cancel a proposal if proposal threshold increases during a live proposal where user has less than the new proposal threshold"
          },
          "proposalVotes(uint256)": {
            "notice": "returns the vote counts for a proposal includes the total vote count, for, against and abstain votes"
          },
          "proposals(uint256)": {
            "notice": "the proposal information for a given proposal"
          },
          "quorum()": {
            "notice": "quorum needed for a proposal to pass if multiple governance proposals are in flight, and the first one to execute changes quorum, then this new quorum will go into effect on the next proposal."
          },
          "rebroadcastProposal(uint256)": {
            "notice": "allows for re-broadcasting of a proposal in case the wormhole relayer or wormhole core contract is paused."
          },
          "receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
            "notice": "callable only by the wormhole relayer"
          },
          "removeExternalChainConfigs((uint16,address)[])": {
            "notice": "remove trusted senders from external chains can only remove trusted senders from a chain that is already stored if the chain doesn't already exist in storage, revert"
          },
          "setBreakGlassGuardian(address)": {
            "notice": "sets the break glass guardian address"
          },
          "setGasLimit(uint96)": {
            "notice": "set a gas limit for the relayer on the external chain should only be called if there is a change in gas prices on the external chain"
          },
          "setNewStakedWell(address,bool)": {
            "notice": "set the new stkWell token address if the new staked well token does not conform to the new interface, then this governor contract is bricked and will need to be rolled back via the break glass guardian. use this function with extreme caution and thoroughly integration test making proposals and voting on them after calling this function."
          },
          "state(uint256)": {
            "notice": "The current state of a given proposal valid proposal states:      canceled                              -> means proposer canceled during active period, proposer votes fell below threshold and was canceled during active period,                                               or contract was paused while proposal was in state Active, CrossChainVoteCollection or Succeeded      active                                -> means block timestamp is greater than or equal to the start timestamp and less than or equal to the end timestamp. Users                                               can cast votes during this period.      cross chain vote collection period    -> block timestamp is greater than the end timestamp and less than or equal to the cross chain vote collection end timestamp.                                               Votes from other chains can be registered during this period.      succeeded                             -> block timestamp is greater the cross chain vote collection period and yay votes are greater than nay votes, total votes meet                                               or exceed quorum.      defeated                              -> block timestamp is past the cross chain vote collection period and nay votes are greater than or equal to yay votes or                                               total votes are less than quorum      executed                              -> reached succeeded state, and proposal was successfully executed"
          },
          "stkWell()": {
            "notice": "reference to the stkWELL token, uses block number for voting checkpoints"
          },
          "targetAddress(uint16)": {
            "notice": "chain id of the target chain to address for bridging starts off mapped to itself, but can be changed by governance"
          },
          "unpause()": {
            "notice": "unpause the contracts as pause guardian. revokes pause guardian role after unpausing"
          },
          "updateApprovedCalldata(bytes,bool)": {
            "notice": "updates the approval for calldata to be used by break glass guardian"
          },
          "updateCrossChainVoteCollectionPeriod(uint256)": {
            "notice": "updates the cross chain voting collection period"
          },
          "updateMaxUserLiveProposals(uint256)": {
            "notice": "updates the maximum user live proposals"
          },
          "updateProposalThreshold(uint256)": {
            "notice": "updates the proposal threshold"
          },
          "updateQuorum(uint256)": {
            "notice": "updates the quorum, callable only by this contract"
          },
          "updateVotingPeriod(uint256)": {
            "notice": "change to accept both block and timestamp and then validate that they are within a certain range i.e. the block number * block time is equals the timestamp updates the voting period"
          },
          "useTimestamps()": {
            "notice": "whether or not the stkWell contract uses timestamps or block numbers"
          },
          "votingPeriod()": {
            "notice": "the voting period in seconds changing this variable only affects the proposals created after the change"
          },
          "well()": {
            "notice": "reference to the WELL token, uses block number for voting checkpoints"
          },
          "whitelistedCalldatas(bytes)": {
            "notice": "whether or not a calldata bytes is allowed for break glass guardian whether or not the calldata is whitelisted for break glass guardian functions to whitelist are based on previous whitelisted functions in the Artemis Governor contracts. Artemis Governor Break Glass calldata: - transferOwnership - _setPendingAdmin - setPendingAdmin - setAdmin - changeAdmin - setEmissionsManager new calldata: - publishMessage that adds rollback address as trusted sender in TemporalGovernor, with calldata for each chain"
          },
          "wormholeRelayer()": {
            "notice": "address of the wormhole relayer cannot be changed by owner because the relayer contract is a proxy and should never change its address"
          },
          "xWell()": {
            "notice": "reference to the xWELL token, uses block.timestamp for voting checkpoints"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@proposals/=src/proposals/",
        "@protocol/=src/",
        "@test/=test/",
        "@utils/=utils/",
        "@zelt-src/=lib/zelt/src/",
        "@zelt-test/=lib/zelt/test/",
        "@zelt/=lib/zelt/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solmate/=lib/solmate/src/",
        "zelt/=lib/zelt/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Governance/MultichainGovernor/MultichainGovernor.sol": "MultichainGovernor"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63",
        "urls": [
          "bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e",
          "dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/governance/utils/IVotesUpgradeable.sol": {
        "keccak256": "0x2d600bbef9320309cd2a86c1d087eb9d6dbcc00430713ee54bbc5c5a2a11ba31",
        "urls": [
          "bzz-raw://52a5380b861d676adef15f33f8f643e236a1acb2d9456beb4065307eaa22bc2a",
          "dweb:/ipfs/QmdwSfxrafQubVvCoQCU5T7bbPR8JDWU1WotSDXSiUdm33"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5267Upgradeable.sol": {
        "keccak256": "0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db",
        "urls": [
          "bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9",
          "dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC5805Upgradeable.sol": {
        "keccak256": "0x19848eec9045c8b91f1ab6b1853966443e3e36bcbc307593ed37a9f0df179d69",
        "urls": [
          "bzz-raw://a07972c1330ee99a5d051b393260e01412ac4c14c7bc4d75d80b7cce291a6412",
          "dweb:/ipfs/QmQx1ZiAo4AbSobN41c1xUEtyX1QejydWCmY7Sj3H5aDNv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC6372Upgradeable.sol": {
        "keccak256": "0x3026befd6d69d1b46960bdc35a2ad37c0e1352f26983ee3728dd61fd32aa308a",
        "urls": [
          "bzz-raw://c2001b7209fd4920ec7674f194db7fe163dfea7a7af2dd25fe6c0e5a94dc595c",
          "dweb:/ipfs/QmXX2zTFyiNWoDxivV3trKcKWifAENMqNAB34NgjWq5feX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol": {
        "keccak256": "0x3988ac03e4819acd4b5adf41de7d43c1471748ddc2d73d2c7aca1e3827402e5d",
        "urls": [
          "bzz-raw://a1cabb782a72f8d9f5b7df868144e78c048be74b5bdc0799a5f2580267be4d32",
          "dweb:/ipfs/QmRoUEeKUgp6DeuZAx3a3C1Gy2ySmZfVu639a1TvEBA3SA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20VotesUpgradeable.sol": {
        "keccak256": "0x435286e01fcfb0bed104e44b9bf9d8abfe9f7b0a8f576e5bbef5eb91fe55e1d4",
        "urls": [
          "bzz-raw://22e9068747b6a7d9de3730525e09a369f65991c88377499582c1b8fe92961a27",
          "dweb:/ipfs/QmafdiqMV6eGdZbm9wJRr2ExhhAZ5uXNtyqqwvmgyzwEaF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0xeb8d6be406a373771724922eb41b5d593bc8e2dc705daa22cd1145cfc8f5a3a0",
        "urls": [
          "bzz-raw://7dcf8f1b2f1869895bffaa1d83ea0e3ab5b42275c97248eda76441e64b343b66",
          "dweb:/ipfs/QmRqs6vX3dnVkRtdXmrxP7a677eaNnTUjY48DT96q6dMcZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "lib/zelt/src/lib/RateLimitMidpointCommonLibrary.sol": {
        "keccak256": "0x6e02bb80a66c7964ff3a199f4908e90b7d2c9f6491545c494d8fa1c02415aa86",
        "urls": [
          "bzz-raw://dd2278e0060092b8e8fb26298f9718e0d482ea22f60a35b1ad029d7849ecfe7b",
          "dweb:/ipfs/QmfUZ48bJbWvmux9KeQCy4G5pgBfvogVnWw4evAy6V51rX"
        ],
        "license": null
      },
      "lib/zelt/src/lib/RateLimitedMidpointLibrary.sol": {
        "keccak256": "0xbe1223f81169e971d50446d5a52ca6c644a6f8b06ae58a24eeeb1efbb3a42002",
        "urls": [
          "bzz-raw://07c4bdf9f0cb7601f4f92c1c19e56e2635f70e066a1b6f5296aa2222d8f99f36",
          "dweb:/ipfs/QmRjzoaQGuiPkHwicSJLBSDdXkmosb8WC38QQX7QqaCjJr"
        ],
        "license": null
      },
      "lib/zelt/src/util/Math.sol": {
        "keccak256": "0x0dceef72fc89db656ab9300694080ff9cb9aec55d802af4b034daa6e95d379b7",
        "urls": [
          "bzz-raw://703006a0764cc4c4c18fcf257e40c902e1d63ecdda066092db70290d4e500f3c",
          "dweb:/ipfs/QmUtDThgmjEwFmEXsYygaqPCGTP84ZTZsoKGQWUuuFvKiA"
        ],
        "license": null
      },
      "src/Governance/IWormholeTrustedSender.sol": {
        "keccak256": "0x9c7883be445878b74896cc79e1060bfa5d8951b9ad58eeb06f98aef563fd5d5d",
        "urls": [
          "bzz-raw://a0cb217acbfe537e765927afa386a813265c4bf257a3959f66cc8a156e1f4e9f",
          "dweb:/ipfs/QmYh6vaCpSmhdpdCcTj2z6yUqHDRcLDfFhtEc4ifmjrs9x"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Governance/MultichainGovernor/Constants.sol": {
        "keccak256": "0x02d70df3490590805ba2cb31fa09ac1a23efb4179aa22df4a4fd864f83a37e77",
        "urls": [
          "bzz-raw://155a41511b2ef87c6d2a32af61818d4a3c9f53ddc3d591da114feebcde19e9a6",
          "dweb:/ipfs/QmPnYBm64ddo6Z2nB4uJbaLFVSWcMkkXUFAwffcy3V7VGt"
        ],
        "license": null
      },
      "src/Governance/MultichainGovernor/IMultichainGovernor.sol": {
        "keccak256": "0x895f5fb7e243e9726c56e2e095437506a27c8ccc49831a6e8668c6b78f5e1b1f",
        "urls": [
          "bzz-raw://8755fe4325649cea6c81f03523f985ccfb24e326bdf9f82c68defcb7ad5db2f0",
          "dweb:/ipfs/QmSN34rGKqGGTvttgvbjueum5K9A1XdGKtUqDEy5onYS86"
        ],
        "license": null
      },
      "src/Governance/MultichainGovernor/MultichainGovernor.sol": {
        "keccak256": "0xa45a0afa19848436830966af9c22eec9b4a588730efa3af456a0d061df7c5e04",
        "urls": [
          "bzz-raw://ac7b467d0598e2263745cda932e6fe22b2e2c8aad282ab27a7d78564f9193026",
          "dweb:/ipfs/QmXc995DrqQWYLfrQrz4rN4p8BybTqTov7qwuCxJkUZt8z"
        ],
        "license": null
      },
      "src/Governance/MultichainGovernor/SnapshotInterface.sol": {
        "keccak256": "0x62ad16a8fd2605494325e23da4d2fbf9ea2206619c15ac0a90b3394cfa0f643d",
        "urls": [
          "bzz-raw://c3886bc539a76c57342e2df0b9d0e8b45e941f4702105152c4774e32ea13d025",
          "dweb:/ipfs/QmcGQSKrNvZ4izmNHLBjdoYzSmHDWhLxbnGcSXjwVps6MP"
        ],
        "license": null
      },
      "src/Governance/WormholeTrustedSender.sol": {
        "keccak256": "0x0c36ca10e19309230f4709b8d66b3b4378fc2108c66fa516765c03841922ec73",
        "urls": [
          "bzz-raw://25834addb1cbd22da26501dfdeae5e7519ab8d36c5d20b13758e68e1656c3feb",
          "dweb:/ipfs/QmZGssGyb8guyT9oXscddwdcMt4ma6xcRJYfKnpBbwUsFm"
        ],
        "license": "BSD-3-Clause"
      },
      "src/wormhole/IWormhole.sol": {
        "keccak256": "0x3d3be0d6b75038eb1acdcf20ff61b457a2e961ce1f140717eda006f191b1ce1a",
        "urls": [
          "bzz-raw://1cc73f5328ae9cc36ab3144b88316d985aaca7007fc65c36bfc8ce4f5041496d",
          "dweb:/ipfs/QmcdQU59A3HvXHDLK1HEv4SkkfDhv6CKKBDYpzVhHKziR5"
        ],
        "license": "Apache 2"
      },
      "src/wormhole/IWormholeReceiver.sol": {
        "keccak256": "0x3ba999db8099081accdc924c765ce2dbbaa0bd4ecd29d95a5bd537703740b832",
        "urls": [
          "bzz-raw://af8370ba3663400476871902811004559a28ab6106085b89e508b5d35a4950e6",
          "dweb:/ipfs/QmPBMBGDsSEYt5u3Yvhddv67RB6UqomJy1jBy1nPEHMdZN"
        ],
        "license": "Apache 2"
      },
      "src/wormhole/IWormholeRelayer.sol": {
        "keccak256": "0x53361b8bca021d27b9c0d2730f657040dafb707f42b8ccfbde6a5c19c2cccfff",
        "urls": [
          "bzz-raw://65c7bc6bb7c8196e68a344a06d5cd2651a309fb85af7654f4133d80c17c931ea",
          "dweb:/ipfs/QmZFo93SmFdBLfAhZhvprbyjHKgWYupJ83X5niv7kVXaVR"
        ],
        "license": "Apache 2"
      },
      "src/wormhole/WormholeBridgeBase.sol": {
        "keccak256": "0x39642d3ccca1e8fd4fe9740db0cd2c425ba79a25d9c767b34e675b709dcd47ee",
        "urls": [
          "bzz-raw://092fcd6bf073e2f36be8c8bb8d4def56789096de58f2193f13f5584e7cade4a9",
          "dweb:/ipfs/Qma7LUbV118c1daxQNS4wuAMxTAgWR2ZtCFn8BnCedJZFf"
        ],
        "license": null
      },
      "src/xWELL/ConfigurablePause.sol": {
        "keccak256": "0xc2120c793c832a4f84d61e3bb49c4315c34d2b2d08dc435d58732293a39030a0",
        "urls": [
          "bzz-raw://ad8d805bcf56105f4abe526fba7d48d7703bc29a47c69bd7988ab4097f60529f",
          "dweb:/ipfs/QmUdDtRZxU2Kfw6RMB5T1pHDEi49K28D7MZfu9PfvTDGXt"
        ],
        "license": null
      },
      "src/xWELL/ConfigurablePauseGuardian.sol": {
        "keccak256": "0x367f262604aa1530d4dd54316312b71c000b9e18123bd26c6a3194868a43d538",
        "urls": [
          "bzz-raw://8dfb60dd181a68f49f8269c8dcda5ed0664813fd4bc43fa5d518385c40299076",
          "dweb:/ipfs/QmVXgiB12uACEZis2AgMroAcv3wYA2HWCsMw4Fg8pwrURu"
        ],
        "license": null
      },
      "src/xWELL/MintLimits.sol": {
        "keccak256": "0x96d01fe18630765a4a70d443621100c9358c754f79cfae9219e50716afecb87f",
        "urls": [
          "bzz-raw://167735431e04aff1d71fe1ad91310a3b0cd7551be051fd7d22957e76550353c4",
          "dweb:/ipfs/QmdRcHbkna9N2UcH79ddNiR4v2kteaBW9GsDcNhvuR5i57"
        ],
        "license": null
      },
      "src/xWELL/interfaces/IXERC20.sol": {
        "keccak256": "0x264c812ffc16dc28741465937e28abc5085bcc8ea1a41b87e1d222f855161551",
        "urls": [
          "bzz-raw://08f5e76a56a34252d008eb67643d367806de6c7d1d77ccb084038b5245db325b",
          "dweb:/ipfs/QmRT8GeE9aJdzkRPd8CzMo4phjdnbLLUqtEEG9vfGERyCE"
        ],
        "license": null
      },
      "src/xWELL/xERC20.sol": {
        "keccak256": "0x5658a072739f58bf17ab7cae578c43d6ebf22dce9e8e594e5a31bb70a1718f9e",
        "urls": [
          "bzz-raw://fb2e533c2723263c58f85a54c74eb51246a38e320b35f403c56faa4d627d8a5f",
          "dweb:/ipfs/QmSiypqmE1sgUb3yfUMjxhaw8nGWJy22xEdVzYZ8QQV3WF"
        ],
        "license": null
      },
      "src/xWELL/xWELL.sol": {
        "keccak256": "0x39d44d34d38e80f7a2ffd3ca8c3597d5e82daec43e739d1cd5c0bbda907fc9b5",
        "urls": [
          "bzz-raw://b5d239676b1d13c7e53cd2fa89ccc800d8d18f6b86ec9eaca1d098f0c09fbdb3",
          "dweb:/ipfs/QmU5zBqn7JeThd5hTCKMx4wYepWepN1sG9YrMcTxUGmfPV"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "id": 118
}